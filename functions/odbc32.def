short SQLBindCol([In] [Out] void* StatementHandle, [In] ushort ColumnNumber, [In] short TargetType, [In] [Out] [Optional] void* TargetValue, [In] long BufferLength, [In] [Out] [Optional] long* StrLen_or_Ind);
short SQLBindParam([In] [Out] void* StatementHandle, [In] ushort ParameterNumber, [In] short ValueType, [In] short ParameterType, [In] ulong LengthPrecision, [In] short ParameterScale, [In] [Out] void* ParameterValue, [In] [Out] long* StrLen_or_Ind);
short SQLColAttribute([In] [Out] void* StatementHandle, [In] ushort ColumnNumber, [In] ushort FieldIdentifier, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* CharacterAttribute, [In] short BufferLength, [Out] [Optional] short* StringLength, [Out] [Optional] long* NumericAttribute);
short SQLDescribeCol([In] [Out] void* StatementHandle, [In] ushort ColumnNumber, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* ColumnName, [In] short BufferLength, [Out] [Optional] short* NameLength, [Out] [Optional] short* DataType, [Out] [Optional] ulong* ColumnSize, [Out] [Optional] short* DecimalDigits, [Out] [Optional] short* Nullable);
short SQLFetchScroll([In] [Out] void* StatementHandle, [In] short FetchOrientation, [In] long FetchOffset);
short SQLGetData([In] [Out] void* StatementHandle, [In] ushort ColumnNumber, [In] short TargetType, [Out] [Optional] void* TargetValue, [In] long BufferLength, [Out] [Optional] long* StrLen_or_IndPtr);
short SQLGetDescRec([In] [Out] void* DescriptorHandle, [In] short RecNumber, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* Name, [In] short BufferLength, [Out] [Optional] short* StringLengthPtr, [Out] [Optional] short* TypePtr, [Out] [Optional] short* SubTypePtr, [Out] [Optional] long* LengthPtr, [Out] [Optional] short* PrecisionPtr, [Out] [Optional] short* ScalePtr, [Out] [Optional] short* NullablePtr);
short SQLPutData([In] [Out] void* StatementHandle, [In] void* Data, [In] long StrLen_or_Ind);
short SQLRowCount([In] void* StatementHandle, [Out] long* RowCount);
short SQLSetConnectOption([In] [Out] void* ConnectionHandle, [In] ushort Option, [In] ulong Value);
short SQLSetDescRec([In] [Out] void* DescriptorHandle, [In] short RecNumber, [In] short Type, [In] short SubType, [In] long Length, [In] short Precision, [In] short Scale, [MemorySize(BytesParamIndex = 4)] [In] [Out] [Optional] void* Data, [In] [Out] [Optional] long* StringLength, [In] [Out] [Optional] long* Indicator);
short SQLSetParam([In] [Out] void* StatementHandle, [In] ushort ParameterNumber, [In] short ValueType, [In] short ParameterType, [In] ulong LengthPrecision, [In] short ParameterScale, [In] void* ParameterValue, [In] [Out] long* StrLen_or_Ind);
short SQLSetStmtOption([In] [Out] void* StatementHandle, [In] ushort Option, [In] ulong Value);
short SQLColAttributes([In] [Out] void* hstmt, [In] ushort icol, [In] ushort fDescType, [In] [Out] void* rgbDesc, [In] short cbDescMax, [In] [Out] short* pcbDesc, [In] [Out] long* pfDesc);
short SQLDescribeParam([In] [Out] void* hstmt, [In] ushort ipar, [Out] [Optional] short* pfSqlType, [Out] [Optional] ulong* pcbParamDef, [Out] [Optional] short* pibScale, [Out] [Optional] short* pfNullable);
short SQLExtendedFetch([In] [Out] void* hstmt, [In] ushort fFetchType, [In] long irow, [Out] [Optional] ulong* pcrow, [Out] [Optional] ushort* rgfRowStatus);
short SQLParamOptions([In] [Out] void* hstmt, [In] ulong crow, [In] [Out] ulong* pirow);
short SQLSetPos([In] [Out] void* hstmt, [In] ulong irow, [In] ushort fOption, [In] ushort fLock);
short SQLBindParameter([In] [Out] void* hstmt, [In] ushort ipar, [In] short fParamType, [In] short fCType, [In] short fSqlType, [In] ulong cbColDef, [In] short ibScale, [In] [Out] void* rgbValue, [In] long cbValueMax, [In] [Out] long* pcbValue);
short SQLSetScrollOptions([In] [Out] void* hstmt, [In] ushort fConcurrency, [In] long crowKeyset, [In] ushort crowRowset);
short SQLColAttributeW([In] [Out] void* hstmt, [In] ushort iCol, [In] ushort iField, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* pCharAttr, [In] short cbDescMax, [Out] [Optional] short* pcbCharAttr, [Out] [Optional] long* pNumAttr);
short SQLColAttributesW([In] [Out] void* hstmt, [In] ushort icol, [In] ushort fDescType, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* rgbDesc, [In] short cbDescMax, [Out] [Optional] short* pcbDesc, [Out] [Optional] long* pfDesc);
short SQLDescribeColW([In] [Out] void* hstmt, [In] ushort icol, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] ushort* szColName, [In] short cchColNameMax, [Out] [Optional] short* pcchColName, [Out] [Optional] short* pfSqlType, [Out] [Optional] ulong* pcbColDef, [Out] [Optional] short* pibScale, [Out] [Optional] short* pfNullable);
short SQLGetDescRecW([In] [Out] void* hdesc, [In] short iRecord, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] ushort* szName, [In] short cchNameMax, [Out] [Optional] short* pcchName, [Out] [Optional] short* pfType, [Out] [Optional] short* pfSubType, [Out] [Optional] long* pLength, [Out] [Optional] short* pPrecision, [Out] [Optional] short* pScale, [Out] [Optional] short* pNullable);
short SQLSetConnectOptionW([In] [Out] void* hdbc, [In] ushort fOption, [In] ulong vParam);
short SQLColAttributeA([In] [Out] void* hstmt, [In] short iCol, [In] short iField, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* pCharAttr, [In] short cbCharAttrMax, [Out] [Optional] short* pcbCharAttr, [Out] [Optional] long* pNumAttr);
short SQLColAttributesA([In] [Out] void* hstmt, [In] ushort icol, [In] ushort fDescType, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* rgbDesc, [In] short cbDescMax, [Out] [Optional] short* pcbDesc, [Out] [Optional] long* pfDesc);
short SQLDescribeColA([In] [Out] void* hstmt, [In] ushort icol, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* szColName, [In] short cbColNameMax, [Out] [Optional] short* pcbColName, [Out] [Optional] short* pfSqlType, [Out] [Optional] ulong* pcbColDef, [Out] [Optional] short* pibScale, [Out] [Optional] short* pfNullable);
short SQLGetDescRecA([In] [Out] void* hdesc, [In] short iRecord, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* szName, [In] short cbNameMax, [Out] [Optional] short* pcbName, [Out] [Optional] short* pfType, [Out] [Optional] short* pfSubType, [Out] [Optional] long* pLength, [Out] [Optional] short* pPrecision, [Out] [Optional] short* pScale, [Out] [Optional] short* pNullable);
short SQLSetConnectOptionA([In] [Out] void* hdbc, [In] ushort fOption, [In] ulong vParam);
short SQLAllocConnect([In] [Out] void* EnvironmentHandle, [Out] void** ConnectionHandle);
short SQLAllocEnv([Out] void** EnvironmentHandle);
short SQLAllocHandle([In] short HandleType, [In] [Out] void* InputHandle, [Out] void** OutputHandle);
short SQLAllocStmt([In] [Out] void* ConnectionHandle, [Out] void** StatementHandle);
short SQLBindCol([In] [Out] void* StatementHandle, [In] ushort ColumnNumber, [In] short TargetType, [In] [Out] [Optional] void* TargetValue, [In] int BufferLength, [In] [Out] [Optional] int* StrLen_or_Ind);
short SQLBindParam([In] [Out] void* StatementHandle, [In] ushort ParameterNumber, [In] short ValueType, [In] short ParameterType, [In] uint LengthPrecision, [In] short ParameterScale, [In] [Out] void* ParameterValue, [In] [Out] int* StrLen_or_Ind);
short SQLCancel([In] [Out] void* StatementHandle);
short SQLCancelHandle([In] short HandleType, [In] [Out] void* InputHandle);
short SQLCloseCursor([In] [Out] void* StatementHandle);
short SQLColAttribute([In] [Out] void* StatementHandle, [In] ushort ColumnNumber, [In] ushort FieldIdentifier, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* CharacterAttribute, [In] short BufferLength, [Out] [Optional] short* StringLength, [Out] [Optional] void* NumericAttribute);
short SQLColumns([In] [Out] void* StatementHandle, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* CatalogName, [In] short NameLength1, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* SchemaName, [In] short NameLength2, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* TableName, [In] short NameLength3, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] byte* ColumnName, [In] short NameLength4);
short SQLCompleteAsync([In] short HandleType, [In] [Out] void* Handle, [Out] short* AsyncRetCodePtr);
short SQLConnect([In] [Out] void* ConnectionHandle, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* ServerName, [In] short NameLength1, [NativeArrayInfo(CountParamIndex = 4)] [In] byte* UserName, [In] short NameLength2, [NativeArrayInfo(CountParamIndex = 6)] [In] byte* Authentication, [In] short NameLength3);
short SQLCopyDesc([In] [Out] void* SourceDescHandle, [In] [Out] void* TargetDescHandle);
short SQLDataSources([In] [Out] void* EnvironmentHandle, [In] ushort Direction, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* ServerName, [In] short BufferLength1, [Out] [Optional] short* NameLength1Ptr, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] byte* Description, [In] short BufferLength2, [Out] [Optional] short* NameLength2Ptr);
short SQLDescribeCol([In] [Out] void* StatementHandle, [In] ushort ColumnNumber, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* ColumnName, [In] short BufferLength, [Out] [Optional] short* NameLength, [Out] [Optional] short* DataType, [Out] [Optional] uint* ColumnSize, [Out] [Optional] short* DecimalDigits, [Out] [Optional] short* Nullable);
short SQLDisconnect([In] [Out] void* ConnectionHandle);
short SQLEndTran([In] short HandleType, [In] [Out] void* Handle, [In] short CompletionType);
short SQLError([In] [Out] void* EnvironmentHandle, [In] [Out] void* ConnectionHandle, [In] [Out] void* StatementHandle, [NativeArrayInfo(CountConst = 6)] [Out] byte* Sqlstate, [Out] [Optional] int* NativeError, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] byte* MessageText, [In] short BufferLength, [Out] [Optional] short* TextLength);
short SQLExecDirect([In] [Out] void* StatementHandle, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* StatementText, [In] int TextLength);
short SQLExecute([In] [Out] void* StatementHandle);
short SQLFetch([In] [Out] void* StatementHandle);
short SQLFetchScroll([In] [Out] void* StatementHandle, [In] short FetchOrientation, [In] int FetchOffset);
short SQLFreeConnect([In] [Out] void* ConnectionHandle);
short SQLFreeEnv([In] [Out] void* EnvironmentHandle);
short SQLFreeHandle([In] short HandleType, [In] [Out] void* Handle);
short SQLFreeStmt([In] [Out] void* StatementHandle, [In] ushort Option);
short SQLGetConnectAttr([In] [Out] void* ConnectionHandle, [In] int Attribute, [Out] [Optional] void* Value, [In] int BufferLength, [Out] [Optional] int* StringLengthPtr);
short SQLGetConnectOption([In] [Out] void* ConnectionHandle, [In] ushort Option, [In] [Out] void* Value);
short SQLGetCursorName([In] [Out] void* StatementHandle, [NativeArrayInfo(CountParamIndex = 2)] [Out] [Optional] byte* CursorName, [In] short BufferLength, [Out] [Optional] short* NameLengthPtr);
short SQLGetData([In] [Out] void* StatementHandle, [In] ushort ColumnNumber, [In] short TargetType, [Out] [Optional] void* TargetValue, [In] int BufferLength, [Out] [Optional] int* StrLen_or_IndPtr);
short SQLGetDescField([In] [Out] void* DescriptorHandle, [In] short RecNumber, [In] short FieldIdentifier, [Out] [Optional] void* Value, [In] int BufferLength, [Out] [Optional] int* StringLength);
short SQLGetDescRec([In] [Out] void* DescriptorHandle, [In] short RecNumber, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* Name, [In] short BufferLength, [Out] [Optional] short* StringLengthPtr, [Out] [Optional] short* TypePtr, [Out] [Optional] short* SubTypePtr, [Out] [Optional] int* LengthPtr, [Out] [Optional] short* PrecisionPtr, [Out] [Optional] short* ScalePtr, [Out] [Optional] short* NullablePtr);
short SQLGetDiagField([In] short HandleType, [In] [Out] void* Handle, [In] short RecNumber, [In] short DiagIdentifier, [Out] [Optional] void* DiagInfo, [In] short BufferLength, [Out] [Optional] short* StringLength);
short SQLGetDiagRec([In] short HandleType, [In] [Out] void* Handle, [In] short RecNumber, [NativeArrayInfo(CountConst = 6)] [Out] [Optional] byte* Sqlstate, [In] [Out] int* NativeError, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] byte* MessageText, [In] short BufferLength, [Out] [Optional] short* TextLength);
short SQLGetEnvAttr([In] [Out] void* EnvironmentHandle, [In] int Attribute, [Out] void* Value, [In] int BufferLength, [Out] [Optional] int* StringLength);
short SQLGetFunctions([In] [Out] void* ConnectionHandle, [In] ushort FunctionId, [Out] [Optional] ushort* Supported);
short SQLGetInfo([In] [Out] void* ConnectionHandle, [In] ushort InfoType, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] void* InfoValue, [In] short BufferLength, [Out] [Optional] short* StringLengthPtr);
short SQLGetStmtAttr([In] [Out] void* StatementHandle, [In] int Attribute, [Out] [Optional] void* Value, [In] int BufferLength, [Out] [Optional] int* StringLength);
short SQLGetStmtOption([In] [Out] void* StatementHandle, [In] ushort Option, [In] [Out] void* Value);
short SQLGetTypeInfo([In] [Out] void* StatementHandle, [In] short DataType);
short SQLNumResultCols([In] [Out] void* StatementHandle, [Out] short* ColumnCount);
short SQLParamData([In] [Out] void* StatementHandle, [Out] [Optional] void** Value);
short SQLPrepare([In] [Out] void* StatementHandle, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* StatementText, [In] int TextLength);
short SQLPutData([In] [Out] void* StatementHandle, [In] void* Data, [In] int StrLen_or_Ind);
short SQLRowCount([In] void* StatementHandle, [Out] int* RowCount);
short SQLSetConnectAttr([In] [Out] void* ConnectionHandle, [In] int Attribute, [MemorySize(BytesParamIndex = 3)] [In] [Optional] void* Value, [In] int StringLength);
short SQLSetConnectOption([In] [Out] void* ConnectionHandle, [In] ushort Option, [In] uint Value);
short SQLSetCursorName([In] [Out] void* StatementHandle, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* CursorName, [In] short NameLength);
short SQLSetDescField([In] [Out] void* DescriptorHandle, [In] short RecNumber, [In] short FieldIdentifier, [In] void* Value, [In] int BufferLength);
short SQLSetDescRec([In] [Out] void* DescriptorHandle, [In] short RecNumber, [In] short Type, [In] short SubType, [In] int Length, [In] short Precision, [In] short Scale, [MemorySize(BytesParamIndex = 4)] [In] [Out] [Optional] void* Data, [In] [Out] [Optional] int* StringLength, [In] [Out] [Optional] int* Indicator);
short SQLSetEnvAttr([In] [Out] void* EnvironmentHandle, [In] int Attribute, [MemorySize(BytesParamIndex = 3)] [In] [Optional] void* Value, [In] int StringLength);
short SQLSetParam([In] [Out] void* StatementHandle, [In] ushort ParameterNumber, [In] short ValueType, [In] short ParameterType, [In] uint LengthPrecision, [In] short ParameterScale, [In] void* ParameterValue, [In] [Out] int* StrLen_or_Ind);
short SQLSetStmtAttr([In] [Out] void* StatementHandle, [In] int Attribute, [In] void* Value, [In] int StringLength);
short SQLSetStmtOption([In] [Out] void* StatementHandle, [In] ushort Option, [In] uint Value);
short SQLSpecialColumns([In] [Out] void* StatementHandle, [In] ushort IdentifierType, [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] byte* CatalogName, [In] short NameLength1, [NativeArrayInfo(CountParamIndex = 5)] [In] [Optional] byte* SchemaName, [In] short NameLength2, [NativeArrayInfo(CountParamIndex = 7)] [In] [Optional] byte* TableName, [In] short NameLength3, [In] ushort Scope, [In] ushort Nullable);
short SQLStatistics([In] [Out] void* StatementHandle, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* CatalogName, [In] short NameLength1, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* SchemaName, [In] short NameLength2, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* TableName, [In] short NameLength3, [In] ushort Unique, [In] ushort Reserved);
short SQLTables([In] [Out] void* StatementHandle, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* CatalogName, [In] short NameLength1, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* SchemaName, [In] short NameLength2, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* TableName, [In] short NameLength3, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] byte* TableType, [In] short NameLength4);
short SQLTransact([In] [Out] void* EnvironmentHandle, [In] [Out] void* ConnectionHandle, [In] ushort CompletionType);
short SQLDriverConnect([In] [Out] void* hdbc, [In] nint hwnd, [NativeArrayInfo(CountParamIndex = 3)] [In] byte* szConnStrIn, [In] short cchConnStrIn, [NativeArrayInfo(CountParamIndex = 5)] [Out] [Optional] byte* szConnStrOut, [In] short cchConnStrOutMax, [Out] [Optional] short* pcchConnStrOut, [In] ushort fDriverCompletion);
short SQLBrowseConnect([In] [Out] void* hdbc, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* szConnStrIn, [In] short cchConnStrIn, [NativeArrayInfo(CountParamIndex = 4)] [Out] [Optional] byte* szConnStrOut, [In] short cchConnStrOutMax, [Out] [Optional] short* pcchConnStrOut);
short SQLBulkOperations([In] [Out] void* StatementHandle, [In] short Operation);
short SQLColAttributes([In] [Out] void* hstmt, [In] ushort icol, [In] ushort fDescType, [In] [Out] void* rgbDesc, [In] short cbDescMax, [In] [Out] short* pcbDesc, [In] [Out] int* pfDesc);
short SQLColumnPrivileges([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szTableName, [In] short cchTableName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] byte* szColumnName, [In] short cchColumnName);
short SQLDescribeParam([In] [Out] void* hstmt, [In] ushort ipar, [Out] [Optional] short* pfSqlType, [Out] [Optional] uint* pcbParamDef, [Out] [Optional] short* pibScale, [Out] [Optional] short* pfNullable);
short SQLExtendedFetch([In] [Out] void* hstmt, [In] ushort fFetchType, [In] int irow, [Out] [Optional] uint* pcrow, [Out] [Optional] ushort* rgfRowStatus);
short SQLForeignKeys([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szPkCatalogName, [In] short cchPkCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szPkSchemaName, [In] short cchPkSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szPkTableName, [In] short cchPkTableName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] byte* szFkCatalogName, [In] short cchFkCatalogName, [NativeArrayInfo(CountParamIndex = 10)] [In] [Optional] byte* szFkSchemaName, [In] short cchFkSchemaName, [NativeArrayInfo(CountParamIndex = 12)] [In] [Optional] byte* szFkTableName, [In] short cchFkTableName);
short SQLMoreResults([In] [Out] void* hstmt);
short SQLNativeSql([In] [Out] void* hdbc, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* szSqlStrIn, [In] int cchSqlStrIn, [NativeArrayInfo(CountParamIndex = 4)] [Out] [Optional] byte* szSqlStr, [In] int cchSqlStrMax, [In] [Out] int* pcbSqlStr);
short SQLNumParams([In] [Out] void* hstmt, [Out] [Optional] short* pcpar);
short SQLParamOptions([In] [Out] void* hstmt, [In] uint crow, [In] [Out] uint* pirow);
short SQLPrimaryKeys([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szTableName, [In] short cchTableName);
short SQLProcedureColumns([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szProcName, [In] short cchProcName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] byte* szColumnName, [In] short cchColumnName);
short SQLProcedures([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szProcName, [In] short cchProcName);
short SQLSetPos([In] [Out] void* hstmt, [In] ushort irow, [In] ushort fOption, [In] ushort fLock);
short SQLTablePrivileges([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szTableName, [In] short cchTableName);
short SQLDrivers([In] [Out] void* henv, [In] ushort fDirection, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* szDriverDesc, [In] short cchDriverDescMax, [Out] [Optional] short* pcchDriverDesc, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] byte* szDriverAttributes, [In] short cchDrvrAttrMax, [Out] [Optional] short* pcchDrvrAttr);
short SQLBindParameter([In] [Out] void* hstmt, [In] ushort ipar, [In] short fParamType, [In] short fCType, [In] short fSqlType, [In] uint cbColDef, [In] short ibScale, [In] [Out] void* rgbValue, [In] int cbValueMax, [In] [Out] int* pcbValue);
short SQLAllocHandleStd([In] short fHandleType, [In] [Out] void* hInput, [Out] void** phOutput);
short SQLSetScrollOptions([In] [Out] void* hstmt, [In] ushort fConcurrency, [In] int crowKeyset, [In] ushort crowRowset);
BOOL ODBCSetTryWaitValue([In] uint dwValue);
uint ODBCGetTryWaitValue();
short SQLColAttributeW([In] [Out] void* hstmt, [In] ushort iCol, [In] ushort iField, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* pCharAttr, [In] short cbDescMax, [Out] [Optional] short* pcbCharAttr, [Out] [Optional] void* pNumAttr);
short SQLColAttributesW([In] [Out] void* hstmt, [In] ushort icol, [In] ushort fDescType, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* rgbDesc, [In] short cbDescMax, [Out] [Optional] short* pcbDesc, [Out] [Optional] int* pfDesc);
short SQLConnectW([In] [Out] void* hdbc, [NativeArrayInfo(CountParamIndex = 2)] [In] ushort* szDSN, [In] short cchDSN, [NativeArrayInfo(CountParamIndex = 4)] [In] ushort* szUID, [In] short cchUID, [NativeArrayInfo(CountParamIndex = 6)] [In] ushort* szAuthStr, [In] short cchAuthStr);
short SQLDescribeColW([In] [Out] void* hstmt, [In] ushort icol, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] ushort* szColName, [In] short cchColNameMax, [Out] [Optional] short* pcchColName, [Out] [Optional] short* pfSqlType, [Out] [Optional] uint* pcbColDef, [Out] [Optional] short* pibScale, [Out] [Optional] short* pfNullable);
short SQLErrorW([In] [Out] void* henv, [In] [Out] void* hdbc, [In] [Out] void* hstmt, [NativeArrayInfo(CountConst = 6)] [Out] ushort* wszSqlState, [Out] [Optional] int* pfNativeError, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] ushort* wszErrorMsg, [In] short cchErrorMsgMax, [Out] [Optional] short* pcchErrorMsg);
short SQLExecDirectW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] ushort* szSqlStr, [In] int TextLength);
short SQLGetConnectAttrW([In] [Out] void* hdbc, [In] int fAttribute, [Out] [Optional] void* rgbValue, [In] int cbValueMax, [Out] [Optional] int* pcbValue);
short SQLGetCursorNameW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [Out] [Optional] ushort* szCursor, [In] short cchCursorMax, [Out] [Optional] short* pcchCursor);
short SQLSetDescFieldW([In] [Out] void* DescriptorHandle, [In] short RecNumber, [In] short FieldIdentifier, [In] [Out] void* Value, [In] int BufferLength);
short SQLGetDescFieldW([In] [Out] void* hdesc, [In] short iRecord, [In] short iField, [Out] [Optional] void* rgbValue, [In] int cbBufferLength, [Out] [Optional] int* StringLength);
short SQLGetDescRecW([In] [Out] void* hdesc, [In] short iRecord, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] ushort* szName, [In] short cchNameMax, [Out] [Optional] short* pcchName, [Out] [Optional] short* pfType, [Out] [Optional] short* pfSubType, [Out] [Optional] int* pLength, [Out] [Optional] short* pPrecision, [Out] [Optional] short* pScale, [Out] [Optional] short* pNullable);
short SQLGetDiagFieldW([In] short fHandleType, [In] [Out] void* handle, [In] short iRecord, [In] short fDiagField, [Out] [Optional] void* rgbDiagInfo, [In] short cbBufferLength, [Out] [Optional] short* pcbStringLength);
short SQLGetDiagRecW([In] short fHandleType, [In] [Out] void* handle, [In] short iRecord, [NativeArrayInfo(CountConst = 6)] [Out] [Optional] ushort* szSqlState, [In] [Out] int* pfNativeError, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] ushort* szErrorMsg, [In] short cchErrorMsgMax, [In] [Out] short* pcchErrorMsg);
short SQLPrepareW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] ushort* szSqlStr, [In] int cchSqlStr);
short SQLSetConnectAttrW([In] [Out] void* hdbc, [In] int fAttribute, [MemorySize(BytesParamIndex = 3)] [In] [Optional] void* rgbValue, [In] int cbValue);
short SQLSetCursorNameW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] ushort* szCursor, [In] short cchCursor);
short SQLColumnsW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] ushort* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] ushort* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] ushort* szTableName, [In] short cchTableName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] ushort* szColumnName, [In] short cchColumnName);
short SQLGetConnectOptionW([In] [Out] void* hdbc, [In] ushort fOption, [In] [Out] void* pvParam);
short SQLGetInfoW([In] [Out] void* hdbc, [In] ushort fInfoType, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] void* rgbInfoValue, [In] short cbInfoValueMax, [Out] [Optional] short* pcbInfoValue);
short SQLGetTypeInfoW([In] [Out] void* StatementHandle, [In] short DataType);
short SQLSetConnectOptionW([In] [Out] void* hdbc, [In] ushort fOption, [In] uint vParam);
short SQLSpecialColumnsW([In] [Out] void* hstmt, [In] ushort fColType, [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] ushort* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 5)] [In] [Optional] ushort* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 7)] [In] [Optional] ushort* szTableName, [In] short cchTableName, [In] ushort fScope, [In] ushort fNullable);
short SQLStatisticsW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] ushort* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] ushort* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] ushort* szTableName, [In] short cchTableName, [In] ushort fUnique, [In] ushort fAccuracy);
short SQLTablesW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] ushort* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] ushort* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] ushort* szTableName, [In] short cchTableName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] ushort* szTableType, [In] short cchTableType);
short SQLDataSourcesW([In] [Out] void* henv, [In] ushort fDirection, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] ushort* szDSN, [In] short cchDSNMax, [Out] [Optional] short* pcchDSN, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] ushort* wszDescription, [In] short cchDescriptionMax, [Out] [Optional] short* pcchDescription);
short SQLDriverConnectW([In] [Out] void* hdbc, [In] nint hwnd, [NativeArrayInfo(CountParamIndex = 3)] [In] ushort* szConnStrIn, [In] short cchConnStrIn, [NativeArrayInfo(CountParamIndex = 5)] [Out] [Optional] ushort* szConnStrOut, [In] short cchConnStrOutMax, [Out] [Optional] short* pcchConnStrOut, [In] ushort fDriverCompletion);
short SQLBrowseConnectW([In] [Out] void* hdbc, [NativeArrayInfo(CountParamIndex = 2)] [In] ushort* szConnStrIn, [In] short cchConnStrIn, [NativeArrayInfo(CountParamIndex = 4)] [Out] [Optional] ushort* szConnStrOut, [In] short cchConnStrOutMax, [Out] [Optional] short* pcchConnStrOut);
short SQLColumnPrivilegesW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] ushort* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] ushort* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] ushort* szTableName, [In] short cchTableName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] ushort* szColumnName, [In] short cchColumnName);
short SQLGetStmtAttrW([In] [Out] void* hstmt, [In] int fAttribute, [In] [Out] void* rgbValue, [In] int cbValueMax, [In] [Out] int* pcbValue);
short SQLSetStmtAttrW([In] [Out] void* hstmt, [In] int fAttribute, [In] [Out] void* rgbValue, [In] int cbValueMax);
short SQLForeignKeysW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] ushort* szPkCatalogName, [In] short cchPkCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] ushort* szPkSchemaName, [In] short cchPkSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] ushort* szPkTableName, [In] short cchPkTableName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] ushort* szFkCatalogName, [In] short cchFkCatalogName, [NativeArrayInfo(CountParamIndex = 10)] [In] [Optional] ushort* szFkSchemaName, [In] short cchFkSchemaName, [NativeArrayInfo(CountParamIndex = 12)] [In] [Optional] ushort* szFkTableName, [In] short cchFkTableName);
short SQLNativeSqlW([In] [Out] void* hdbc, [NativeArrayInfo(CountParamIndex = 2)] [In] ushort* szSqlStrIn, [In] int cchSqlStrIn, [NativeArrayInfo(CountParamIndex = 4)] [Out] [Optional] ushort* szSqlStr, [In] int cchSqlStrMax, [In] [Out] int* pcchSqlStr);
short SQLPrimaryKeysW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] ushort* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] ushort* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] ushort* szTableName, [In] short cchTableName);
short SQLProcedureColumnsW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] ushort* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] ushort* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] ushort* szProcName, [In] short cchProcName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] ushort* szColumnName, [In] short cchColumnName);
short SQLProceduresW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] ushort* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] ushort* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] ushort* szProcName, [In] short cchProcName);
short SQLTablePrivilegesW([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] ushort* szCatalogName, [In] short cchCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] ushort* szSchemaName, [In] short cchSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] ushort* szTableName, [In] short cchTableName);
short SQLDriversW([In] [Out] void* henv, [In] ushort fDirection, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] ushort* szDriverDesc, [In] short cchDriverDescMax, [Out] [Optional] short* pcchDriverDesc, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] ushort* szDriverAttributes, [In] short cchDrvrAttrMax, [Out] [Optional] short* pcchDrvrAttr);
short SQLColAttributeA([In] [Out] void* hstmt, [In] short iCol, [In] short iField, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* pCharAttr, [In] short cbCharAttrMax, [Out] [Optional] short* pcbCharAttr, [Out] [Optional] void* pNumAttr);
short SQLColAttributesA([In] [Out] void* hstmt, [In] ushort icol, [In] ushort fDescType, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* rgbDesc, [In] short cbDescMax, [Out] [Optional] short* pcbDesc, [Out] [Optional] int* pfDesc);
short SQLConnectA([In] [Out] void* hdbc, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* szDSN, [In] short cbDSN, [NativeArrayInfo(CountParamIndex = 4)] [In] byte* szUID, [In] short cbUID, [NativeArrayInfo(CountParamIndex = 6)] [In] byte* szAuthStr, [In] short cbAuthStr);
short SQLDescribeColA([In] [Out] void* hstmt, [In] ushort icol, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* szColName, [In] short cbColNameMax, [Out] [Optional] short* pcbColName, [Out] [Optional] short* pfSqlType, [Out] [Optional] uint* pcbColDef, [Out] [Optional] short* pibScale, [Out] [Optional] short* pfNullable);
short SQLErrorA([In] [Out] void* henv, [In] [Out] void* hdbc, [In] [Out] void* hstmt, [Out] byte* szSqlState, [Out] [Optional] int* pfNativeError, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] byte* szErrorMsg, [In] short cbErrorMsgMax, [Out] [Optional] short* pcbErrorMsg);
short SQLExecDirectA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szSqlStr, [In] int cbSqlStr);
short SQLGetConnectAttrA([In] [Out] void* hdbc, [In] int fAttribute, [Out] [Optional] void* rgbValue, [In] int cbValueMax, [Out] [Optional] int* pcbValue);
short SQLGetCursorNameA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [Out] [Optional] byte* szCursor, [In] short cbCursorMax, [Out] [Optional] short* pcbCursor);
short SQLGetDescFieldA([In] [Out] void* hdesc, [In] short iRecord, [In] short iField, [Out] [Optional] void* rgbValue, [In] int cbBufferLength, [Out] [Optional] int* StringLength);
short SQLGetDescRecA([In] [Out] void* hdesc, [In] short iRecord, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* szName, [In] short cbNameMax, [Out] [Optional] short* pcbName, [Out] [Optional] short* pfType, [Out] [Optional] short* pfSubType, [Out] [Optional] int* pLength, [Out] [Optional] short* pPrecision, [Out] [Optional] short* pScale, [Out] [Optional] short* pNullable);
short SQLGetDiagFieldA([In] short fHandleType, [In] [Out] void* handle, [In] short iRecord, [In] short fDiagField, [Out] [Optional] void* rgbDiagInfo, [In] short cbDiagInfoMax, [Out] [Optional] short* pcbDiagInfo);
short SQLGetDiagRecA([In] short fHandleType, [In] [Out] void* handle, [In] short iRecord, [NativeArrayInfo(CountConst = 6)] [Out] [Optional] byte* szSqlState, [In] [Out] int* pfNativeError, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] byte* szErrorMsg, [In] short cbErrorMsgMax, [In] [Out] short* pcbErrorMsg);
short SQLGetStmtAttrA([In] [Out] void* hstmt, [In] int fAttribute, [In] [Out] void* rgbValue, [In] int cbValueMax, [In] [Out] int* pcbValue);
short SQLGetTypeInfoA([In] [Out] void* StatementHandle, [In] short DataType);
short SQLPrepareA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* szSqlStr, [In] int cbSqlStr);
short SQLSetConnectAttrA([In] [Out] void* hdbc, [In] int fAttribute, [MemorySize(BytesParamIndex = 3)] [In] [Optional] void* rgbValue, [In] int cbValue);
short SQLSetCursorNameA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* szCursor, [In] short cbCursor);
short SQLColumnsA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cbCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cbSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szTableName, [In] short cbTableName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] byte* szColumnName, [In] short cbColumnName);
short SQLGetConnectOptionA([In] [Out] void* hdbc, [In] ushort fOption, [In] [Out] void* pvParam);
short SQLGetInfoA([In] [Out] void* hdbc, [In] ushort fInfoType, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] void* rgbInfoValue, [In] short cbInfoValueMax, [Out] [Optional] short* pcbInfoValue);
short SQLSetConnectOptionA([In] [Out] void* hdbc, [In] ushort fOption, [In] uint vParam);
short SQLSpecialColumnsA([In] [Out] void* hstmt, [In] ushort fColType, [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] byte* szCatalogName, [In] short cbCatalogName, [NativeArrayInfo(CountParamIndex = 5)] [In] [Optional] byte* szSchemaName, [In] short cbSchemaName, [NativeArrayInfo(CountParamIndex = 7)] [In] [Optional] byte* szTableName, [In] short cbTableName, [In] ushort fScope, [In] ushort fNullable);
short SQLStatisticsA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cbCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cbSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szTableName, [In] short cbTableName, [In] ushort fUnique, [In] ushort fAccuracy);
short SQLTablesA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cbCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cbSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szTableName, [In] short cbTableName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] byte* szTableType, [In] short cbTableType);
short SQLDataSourcesA([In] [Out] void* henv, [In] ushort fDirection, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* szDSN, [In] short cbDSNMax, [In] [Out] short* pcbDSN, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] byte* szDescription, [In] short cbDescriptionMax, [In] [Out] short* pcbDescription);
short SQLDriverConnectA([In] [Out] void* hdbc, [In] nint hwnd, [NativeArrayInfo(CountParamIndex = 3)] [In] byte* szConnStrIn, [In] short cbConnStrIn, [NativeArrayInfo(CountParamIndex = 5)] [Out] [Optional] byte* szConnStrOut, [In] short cbConnStrOutMax, [Out] [Optional] short* pcbConnStrOut, [In] ushort fDriverCompletion);
short SQLBrowseConnectA([In] [Out] void* hdbc, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* szConnStrIn, [In] short cbConnStrIn, [NativeArrayInfo(CountParamIndex = 4)] [Out] [Optional] byte* szConnStrOut, [In] short cbConnStrOutMax, [Out] [Optional] short* pcbConnStrOut);
short SQLColumnPrivilegesA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cbCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cbSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szTableName, [In] short cbTableName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] byte* szColumnName, [In] short cbColumnName);
short SQLForeignKeysA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szPkCatalogName, [In] short cbPkCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szPkSchemaName, [In] short cbPkSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szPkTableName, [In] short cbPkTableName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] byte* szFkCatalogName, [In] short cbFkCatalogName, [NativeArrayInfo(CountParamIndex = 10)] [In] [Optional] byte* szFkSchemaName, [In] short cbFkSchemaName, [NativeArrayInfo(CountParamIndex = 12)] [In] [Optional] byte* szFkTableName, [In] short cbFkTableName);
short SQLNativeSqlA([In] [Out] void* hdbc, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* szSqlStrIn, [In] int cbSqlStrIn, [NativeArrayInfo(CountParamIndex = 4)] [Out] [Optional] byte* szSqlStr, [In] int cbSqlStrMax, [In] [Out] int* pcbSqlStr);
short SQLPrimaryKeysA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cbCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cbSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szTableName, [In] short cbTableName);
short SQLProcedureColumnsA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cbCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cbSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szProcName, [In] short cbProcName, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] byte* szColumnName, [In] short cbColumnName);
short SQLProceduresA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cbCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cbSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szProcName, [In] short cbProcName);
short SQLTablePrivilegesA([In] [Out] void* hstmt, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] byte* szCatalogName, [In] short cbCatalogName, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] byte* szSchemaName, [In] short cbSchemaName, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* szTableName, [In] short cbTableName);
short SQLDriversA([In] [Out] void* henv, [In] ushort fDirection, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] byte* szDriverDesc, [In] short cbDriverDescMax, [Out] [Optional] short* pcbDriverDesc, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] byte* szDriverAttributes, [In] short cbDrvrAttrMax, [Out] [Optional] short* pcbDrvrAttr);
