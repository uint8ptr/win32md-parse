HRESULT CreateInteractionContext([Out] HINTERACTIONCONTEXT* interactionContext);
HRESULT DestroyInteractionContext([In] HINTERACTIONCONTEXT interactionContext);
HRESULT RegisterOutputCallbackInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] INTERACTION_CONTEXT_OUTPUT_CALLBACK outputCallback, [In] [Optional] void* clientData);
HRESULT RegisterOutputCallbackInteractionContext2([In] HINTERACTIONCONTEXT interactionContext, [In] INTERACTION_CONTEXT_OUTPUT_CALLBACK2 outputCallback, [In] [Optional] void* clientData);
HRESULT SetInteractionConfigurationInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] uint configurationCount, [Const] [NativeArrayInfo(CountParamIndex = 1)] [In] INTERACTION_CONTEXT_CONFIGURATION* configuration);
HRESULT GetInteractionConfigurationInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] uint configurationCount, [NativeArrayInfo(CountParamIndex = 1)] [In] [Out] INTERACTION_CONTEXT_CONFIGURATION* configuration);
HRESULT SetPropertyInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] INTERACTION_CONTEXT_PROPERTY contextProperty, [In] uint value);
HRESULT GetPropertyInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] INTERACTION_CONTEXT_PROPERTY contextProperty, [Out] uint* value);
HRESULT SetInertiaParameterInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] INERTIA_PARAMETER inertiaParameter, [In] float value);
HRESULT GetInertiaParameterInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] INERTIA_PARAMETER inertiaParameter, [Out] float* value);
HRESULT SetCrossSlideParametersInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] uint parameterCount, [NativeArrayInfo(CountParamIndex = 1)] [In] CROSS_SLIDE_PARAMETER* crossSlideParameters);
HRESULT GetCrossSlideParameterInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] CROSS_SLIDE_THRESHOLD threshold, [Out] float* distance);
HRESULT SetTapParameterInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] TAP_PARAMETER parameter, [In] float value);
HRESULT GetTapParameterInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] TAP_PARAMETER parameter, [Out] float* value);
HRESULT SetHoldParameterInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] HOLD_PARAMETER parameter, [In] float value);
HRESULT GetHoldParameterInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] HOLD_PARAMETER parameter, [Out] float* value);
HRESULT SetTranslationParameterInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] TRANSLATION_PARAMETER parameter, [In] float value);
HRESULT GetTranslationParameterInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] TRANSLATION_PARAMETER parameter, [Out] float* value);
HRESULT SetMouseWheelParameterInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] MOUSE_WHEEL_PARAMETER parameter, [In] float value);
HRESULT GetMouseWheelParameterInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] MOUSE_WHEEL_PARAMETER parameter, [Out] float* value);
HRESULT ResetInteractionContext([In] HINTERACTIONCONTEXT interactionContext);
HRESULT GetStateInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [Const] [In] [Optional] POINTER_INFO* pointerInfo, [Out] INTERACTION_STATE* state);
HRESULT AddPointerInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] uint pointerId);
HRESULT RemovePointerInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] uint pointerId);
HRESULT ProcessPointerFramesInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] uint entriesCount, [In] uint pointerCount, [Const] [In] POINTER_INFO* pointerInfo);
HRESULT BufferPointerPacketsInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] uint entriesCount, [Const] [NativeArrayInfo(CountParamIndex = 1)] [In] POINTER_INFO* pointerInfo);
HRESULT ProcessBufferedPacketsInteractionContext([In] HINTERACTIONCONTEXT interactionContext);
HRESULT ProcessInertiaInteractionContext([In] HINTERACTIONCONTEXT interactionContext);
HRESULT StopInteractionContext([In] HINTERACTIONCONTEXT interactionContext);
HRESULT SetPivotInteractionContext([In] HINTERACTIONCONTEXT interactionContext, [In] float x, [In] float y, [In] float radius);
