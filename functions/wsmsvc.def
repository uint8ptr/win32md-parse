uint WSManInitialize([In] uint flags, [Out] WSMAN_API** apiHandle);
uint WSManDeinitialize([In] [Out] [Optional] WSMAN_API* apiHandle, [In] uint flags);
uint WSManGetErrorMessage([In] WSMAN_API* apiHandle, [Reserved] [In] uint flags, [Const] [In] [Optional] PWSTR languageCode, [In] uint errorCode, [In] uint messageLength, [NativeArrayInfo(CountParamIndex = 4)] [Out] [Optional] PWSTR message, [Out] uint* messageLengthUsed);
uint WSManCreateSession([In] WSMAN_API* apiHandle, [Const] [In] [Optional] PWSTR connection, [In] uint flags, [In] [Optional] WSMAN_AUTHENTICATION_CREDENTIALS* serverAuthenticationCredentials, [In] [Optional] WSMAN_PROXY_INFO* proxyInfo, [Out] WSMAN_SESSION** session);
uint WSManCloseSession([In] [Out] [Optional] WSMAN_SESSION* session, [In] uint flags);
uint WSManSetSessionOption([In] WSMAN_SESSION* session, [In] WSManSessionOption option, [In] WSMAN_DATA* data);
uint WSManGetSessionOptionAsDword([In] WSMAN_SESSION* session, [In] WSManSessionOption option, [In] [Out] uint* value);
uint WSManGetSessionOptionAsString([In] WSMAN_SESSION* session, [In] WSManSessionOption option, [In] uint stringLength, [NativeArrayInfo(CountParamIndex = 2)] [Out] [Optional] PWSTR string, [Out] uint* stringLengthUsed);
uint WSManCloseOperation([In] [Out] [Optional] WSMAN_OPERATION* operationHandle, [In] uint flags);
void WSManCreateShell([In] [Out] WSMAN_SESSION* session, [In] uint flags, [Const] [In] PWSTR resourceUri, [In] [Optional] WSMAN_SHELL_STARTUP_INFO_V11* startupInfo, [In] [Optional] WSMAN_OPTION_SET* options, [In] [Optional] WSMAN_DATA* createXml, [In] WSMAN_SHELL_ASYNC* async, [Out] WSMAN_SHELL** shell);
void WSManRunShellCommand([In] [Out] WSMAN_SHELL* shell, [In] uint flags, [Const] [In] PWSTR commandLine, [In] [Optional] WSMAN_COMMAND_ARG_SET* args, [In] [Optional] WSMAN_OPTION_SET* options, [In] WSMAN_SHELL_ASYNC* async, [Out] WSMAN_COMMAND** command);
void WSManSignalShell([In] WSMAN_SHELL* shell, [In] [Optional] WSMAN_COMMAND* command, [In] uint flags, [Const] [In] PWSTR code, [In] WSMAN_SHELL_ASYNC* async, [Out] WSMAN_OPERATION** signalOperation);
void WSManReceiveShellOutput([In] [Out] WSMAN_SHELL* shell, [In] [Optional] WSMAN_COMMAND* command, [In] uint flags, [In] [Optional] WSMAN_STREAM_ID_SET* desiredStreamSet, [In] WSMAN_SHELL_ASYNC* async, [Out] WSMAN_OPERATION** receiveOperation);
void WSManSendShellInput([In] WSMAN_SHELL* shell, [In] [Optional] WSMAN_COMMAND* command, [In] uint flags, [Const] [In] PWSTR streamId, [In] WSMAN_DATA* streamData, [In] BOOL endOfStream, [In] WSMAN_SHELL_ASYNC* async, [Out] WSMAN_OPERATION** sendOperation);
void WSManCloseCommand([In] [Out] [Optional] WSMAN_COMMAND* commandHandle, [In] uint flags, [In] WSMAN_SHELL_ASYNC* async);
void WSManCloseShell([In] [Out] [Optional] WSMAN_SHELL* shellHandle, [In] uint flags, [In] WSMAN_SHELL_ASYNC* async);
void WSManCreateShellEx([In] [Out] WSMAN_SESSION* session, [In] uint flags, [Const] [In] PWSTR resourceUri, [Const] [In] PWSTR shellId, [In] [Optional] WSMAN_SHELL_STARTUP_INFO_V11* startupInfo, [In] [Optional] WSMAN_OPTION_SET* options, [In] [Optional] WSMAN_DATA* createXml, [In] WSMAN_SHELL_ASYNC* async, [Out] WSMAN_SHELL** shell);
void WSManRunShellCommandEx([In] [Out] WSMAN_SHELL* shell, [In] uint flags, [Const] [In] PWSTR commandId, [Const] [In] PWSTR commandLine, [In] [Optional] WSMAN_COMMAND_ARG_SET* args, [In] [Optional] WSMAN_OPTION_SET* options, [In] WSMAN_SHELL_ASYNC* async, [Out] WSMAN_COMMAND** command);
void WSManDisconnectShell([In] [Out] WSMAN_SHELL* shell, [In] uint flags, [In] WSMAN_SHELL_DISCONNECT_INFO* disconnectInfo, [In] WSMAN_SHELL_ASYNC* async);
void WSManReconnectShell([In] [Out] WSMAN_SHELL* shell, [In] uint flags, [In] WSMAN_SHELL_ASYNC* async);
void WSManReconnectShellCommand([In] [Out] WSMAN_COMMAND* commandHandle, [In] uint flags, [In] WSMAN_SHELL_ASYNC* async);
void WSManConnectShell([In] [Out] WSMAN_SESSION* session, [In] uint flags, [Const] [In] PWSTR resourceUri, [Const] [In] PWSTR shellID, [In] [Optional] WSMAN_OPTION_SET* options, [In] [Optional] WSMAN_DATA* connectXml, [In] WSMAN_SHELL_ASYNC* async, [Out] WSMAN_SHELL** shell);
void WSManConnectShellCommand([In] [Out] WSMAN_SHELL* shell, [In] uint flags, [Const] [In] PWSTR commandID, [In] [Optional] WSMAN_OPTION_SET* options, [In] [Optional] WSMAN_DATA* connectXml, [In] WSMAN_SHELL_ASYNC* async, [Out] WSMAN_COMMAND** command);
uint WSManPluginReportContext([In] WSMAN_PLUGIN_REQUEST* requestDetails, [In] uint flags, [In] void* context);
uint WSManPluginReceiveResult([In] WSMAN_PLUGIN_REQUEST* requestDetails, [In] uint flags, [Const] [In] [Optional] PWSTR stream, [In] [Optional] WSMAN_DATA* streamResult, [Const] [In] [Optional] PWSTR commandState, [In] uint exitCode);
uint WSManPluginOperationComplete([In] WSMAN_PLUGIN_REQUEST* requestDetails, [In] uint flags, [In] uint errorCode, [Const] [In] [Optional] PWSTR extendedInformation);
uint WSManPluginGetOperationParameters([In] WSMAN_PLUGIN_REQUEST* requestDetails, [In] uint flags, [Out] WSMAN_DATA* data);
uint WSManPluginGetConfiguration([In] void* pluginContext, [In] uint flags, [Out] WSMAN_DATA* data);
uint WSManPluginReportCompletion([In] void* pluginContext, [In] uint flags);
uint WSManPluginFreeRequestDetails([In] WSMAN_PLUGIN_REQUEST* requestDetails);
uint WSManPluginAuthzUserComplete([In] WSMAN_SENDER_DETAILS* senderDetails, [In] uint flags, [In] [Optional] void* userAuthorizationContext, [In] [Optional] HANDLE impersonationToken, [In] BOOL userIsAdministrator, [In] uint errorCode, [Const] [In] [Optional] PWSTR extendedErrorInformation);
uint WSManPluginAuthzOperationComplete([In] WSMAN_SENDER_DETAILS* senderDetails, [In] uint flags, [In] [Optional] void* userAuthorizationContext, [In] uint errorCode, [Const] [In] [Optional] PWSTR extendedErrorInformation);
uint WSManPluginAuthzQueryQuotaComplete([In] WSMAN_SENDER_DETAILS* senderDetails, [In] uint flags, [In] [Optional] WSMAN_AUTHZ_QUOTA* quota, [In] uint errorCode, [Const] [In] [Optional] PWSTR extendedErrorInformation);
