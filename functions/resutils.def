uint InitializeClusterHealthFault([In] [Out] CLUSTER_HEALTH_FAULT* clusterHealthFault);
uint InitializeClusterHealthFaultArray([In] [Out] CLUSTER_HEALTH_FAULT_ARRAY* clusterHealthFaultArray);
uint FreeClusterHealthFault([In] [Out] CLUSTER_HEALTH_FAULT* clusterHealthFault);
uint FreeClusterHealthFaultArray([In] [Out] CLUSTER_HEALTH_FAULT_ARRAY* clusterHealthFaultArray);
uint ClusGetClusterHealthFaults([In] _HCLUSTER* hCluster, [Out] CLUSTER_HEALTH_FAULT_ARRAY* objects, [In] uint flags);
uint ClusRemoveClusterHealthFault([In] _HCLUSTER* hCluster, [Const] [In] PWSTR id, [In] uint flags);
uint ClusAddClusterHealthFault([In] _HCLUSTER* hCluster, [In] CLUSTER_HEALTH_FAULT* failure, [In] uint param2);
uint ResUtilStartResourceService([Const] [In] PWSTR pszServiceName, [In] [Out] nint* phServiceHandle);
uint ResUtilVerifyResourceService([Const] [In] PWSTR pszServiceName);
uint ResUtilStopResourceService([Const] [In] PWSTR pszServiceName);
uint ResUtilVerifyService([In] SC_HANDLE hServiceHandle);
uint ResUtilStopService([In] SC_HANDLE hServiceHandle);
uint ResUtilCreateDirectoryTree([Const] [In] PWSTR pszPath);
BOOL ResUtilIsPathValid([Const] [In] PWSTR pszPath);
uint ResUtilEnumProperties([Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [MemorySize(BytesParamIndex = 2)] [Out] PWSTR pszOutProperties, [In] uint cbOutPropertiesSize, [Out] uint* pcbBytesReturned, [Out] uint* pcbRequired);
uint ResUtilEnumPrivateProperties([In] HKEY hkeyClusterKey, [MemorySize(BytesParamIndex = 2)] [Out] PWSTR pszOutProperties, [In] uint cbOutPropertiesSize, [Out] uint* pcbBytesReturned, [Out] uint* pcbRequired);
uint ResUtilGetProperties([In] HKEY hkeyClusterKey, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [MemorySize(BytesParamIndex = 3)] [Out] void* pOutPropertyList, [In] uint cbOutPropertyListSize, [Out] uint* pcbBytesReturned, [Out] uint* pcbRequired);
uint ResUtilGetAllProperties([In] HKEY hkeyClusterKey, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [MemorySize(BytesParamIndex = 3)] [Out] void* pOutPropertyList, [In] uint cbOutPropertyListSize, [Out] uint* pcbBytesReturned, [Out] uint* pcbRequired);
uint ResUtilGetPrivateProperties([In] HKEY hkeyClusterKey, [MemorySize(BytesParamIndex = 2)] [Out] void* pOutPropertyList, [In] uint cbOutPropertyListSize, [Out] uint* pcbBytesReturned, [Out] uint* pcbRequired);
uint ResUtilGetPropertySize([In] HKEY hkeyClusterKey, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTableItem, [In] [Out] uint* pcbOutPropertyListSize, [In] [Out] uint* pnPropertyCount);
uint ResUtilGetProperty([In] HKEY hkeyClusterKey, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTableItem, [MemorySize(BytesParamIndex = 3)] [In] [Out] void** pOutPropertyItem, [In] [Out] uint* pcbOutPropertyItemSize);
uint ResUtilVerifyPropertyTable([Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [Reserved] [In] [Out] void* Reserved, [In] BOOL bAllowUnknownProperties, [Const] [MemorySize(BytesParamIndex = 4)] [In] void* pInPropertyList, [In] uint cbInPropertyListSize, [Out] [Optional] byte* pOutParams);
uint ResUtilSetPropertyTable([In] HKEY hkeyClusterKey, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [Reserved] [In] [Out] void* Reserved, [In] BOOL bAllowUnknownProperties, [Const] [MemorySize(BytesParamIndex = 5)] [In] void* pInPropertyList, [In] uint cbInPropertyListSize, [Out] [Optional] byte* pOutParams);
uint ResUtilSetPropertyTableEx([In] HKEY hkeyClusterKey, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [In] [Out] void* Reserved, [In] BOOL bAllowUnknownProperties, [Const] [In] void* pInPropertyList, [In] uint cbInPropertyListSize, [In] BOOL bForceWrite, [In] [Out] byte* pOutParams);
uint ResUtilSetPropertyParameterBlock([In] HKEY hkeyClusterKey, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [In] [Out] void* Reserved, [Const] [In] byte* pInParams, [Const] [In] void* pInPropertyList, [In] uint cbInPropertyListSize, [In] [Out] byte* pOutParams);
uint ResUtilSetPropertyParameterBlockEx([In] HKEY hkeyClusterKey, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [In] [Out] void* Reserved, [Const] [In] byte* pInParams, [Const] [In] void* pInPropertyList, [In] uint cbInPropertyListSize, [In] BOOL bForceWrite, [In] [Out] byte* pOutParams);
uint ResUtilSetUnknownProperties([In] HKEY hkeyClusterKey, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [Const] [MemorySize(BytesParamIndex = 3)] [In] void* pInPropertyList, [In] uint cbInPropertyListSize);
uint ResUtilGetPropertiesToParameterBlock([In] HKEY hkeyClusterKey, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [In] [Out] byte* pOutParams, [In] BOOL bCheckForRequiredProperties, [Out] [Optional] PWSTR* pszNameOfPropInError);
uint ResUtilPropertyListFromParameterBlock([Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [MemorySize(BytesParamIndex = 2)] [Out] [Optional] void* pOutPropertyList, [In] [Out] uint* pcbOutPropertyListSize, [Const] [In] byte* pInParams, [Out] uint* pcbBytesReturned, [Out] uint* pcbRequired);
uint ResUtilDupParameterBlock([In] [Out] byte* pOutParams, [Const] [In] byte* pInParams, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable);
void ResUtilFreeParameterBlock([In] [Out] byte* pOutParams, [Const] [In] byte* pInParams, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable);
uint ResUtilAddUnknownProperties([In] HKEY hkeyClusterKey, [Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [In] [Out] void* pOutPropertyList, [In] uint pcbOutPropertyListSize, [In] [Out] uint* pcbBytesReturned, [In] [Out] uint* pcbRequired);
uint ResUtilSetPrivatePropertyList([In] HKEY hkeyClusterKey, [Const] [MemorySize(BytesParamIndex = 2)] [In] void* pInPropertyList, [In] uint cbInPropertyListSize);
uint ResUtilVerifyPrivatePropertyList([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pInPropertyList, [In] uint cbInPropertyListSize);
PWSTR ResUtilDupString([Const] [In] PWSTR pszInString);
uint ResUtilGetBinaryValue([In] HKEY hkeyClusterKey, [Const] [In] PWSTR pszValueName, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] byte** ppbOutValue, [Out] uint* pcbOutValueSize);
PWSTR ResUtilGetSzValue([In] HKEY hkeyClusterKey, [Const] [In] PWSTR pszValueName);
uint ResUtilGetDwordValue([In] HKEY hkeyClusterKey, [Const] [In] PWSTR pszValueName, [Out] uint* pdwOutValue, [In] uint dwDefaultValue);
uint ResUtilGetQwordValue([In] HKEY hkeyClusterKey, [Const] [In] PWSTR pszValueName, [Out] ulong* pqwOutValue, [In] ulong qwDefaultValue);
uint ResUtilSetBinaryValue([In] HKEY hkeyClusterKey, [Const] [In] PWSTR pszValueName, [Const] [MemorySize(BytesParamIndex = 3)] [In] byte* pbNewValue, [In] uint cbNewValueSize, [MemorySize(BytesParamIndex = 5)] [In] [Out] [Optional] byte** ppbOutValue, [In] [Out] uint* pcbOutValueSize);
uint ResUtilSetSzValue([In] HKEY hkeyClusterKey, [Const] [In] PWSTR pszValueName, [Const] [In] PWSTR pszNewValue, [In] [Out] [Optional] PWSTR* ppszOutString);
uint ResUtilSetExpandSzValue([In] HKEY hkeyClusterKey, [Const] [In] PWSTR pszValueName, [Const] [In] PWSTR pszNewValue, [In] [Out] [Optional] PWSTR* ppszOutString);
uint ResUtilSetMultiSzValue([In] HKEY hkeyClusterKey, [Const] [In] PWSTR pszValueName, [Const] [MemorySize(BytesParamIndex = 3)] [In] PWSTR pszNewValue, [In] uint cbNewValueSize, [MemorySize(BytesParamIndex = 5)] [Out] [Optional] PWSTR* ppszOutValue, [In] [Out] [Optional] uint* pcbOutValueSize);
uint ResUtilSetDwordValue([In] HKEY hkeyClusterKey, [Const] [In] PWSTR pszValueName, [In] uint dwNewValue, [In] [Out] uint* pdwOutValue);
uint ResUtilSetQwordValue([In] HKEY hkeyClusterKey, [Const] [In] PWSTR pszValueName, [In] ulong qwNewValue, [In] [Out] [Optional] ulong* pqwOutValue);
uint ResUtilSetValueEx([In] HKEY hkeyClusterKey, [Const] [In] PWSTR valueName, [In] uint valueType, [Const] [MemorySize(BytesParamIndex = 4)] [In] byte* valueData, [In] uint valueSize, [In] uint flags);
uint ResUtilGetBinaryProperty([Out] byte** ppbOutValue, [Out] uint* pcbOutValueSize, [Const] [In] CLUSPROP_BINARY* pValueStruct, [Const] [MemorySize(BytesParamIndex = 4)] [In] [Optional] byte* pbOldValue, [In] uint cbOldValueSize, [MemorySize(BytesParamIndex = 6)] [In] [Out] byte** ppPropertyList, [In] [Out] uint* pcbPropertyListSize);
uint ResUtilGetSzProperty([Out] PWSTR* ppszOutValue, [Const] [In] CLUSPROP_SZ* pValueStruct, [Const] [In] [Optional] PWSTR pszOldValue, [MemorySize(BytesParamIndex = 4)] [In] [Out] byte** ppPropertyList, [In] [Out] uint* pcbPropertyListSize);
uint ResUtilGetMultiSzProperty([Out] PWSTR* ppszOutValue, [Out] uint* pcbOutValueSize, [Const] [In] CLUSPROP_SZ* pValueStruct, [Const] [MemorySize(BytesParamIndex = 4)] [In] [Optional] PWSTR pszOldValue, [In] uint cbOldValueSize, [MemorySize(BytesParamIndex = 6)] [In] [Out] byte** ppPropertyList, [In] [Out] uint* pcbPropertyListSize);
uint ResUtilGetDwordProperty([In] [Out] uint* pdwOutValue, [Const] [In] CLUSPROP_DWORD* pValueStruct, [In] uint dwOldValue, [In] uint dwMinimum, [In] uint dwMaximum, [In] [Out] byte** ppPropertyList, [In] [Out] uint* pcbPropertyListSize);
uint ResUtilGetLongProperty([In] [Out] int* plOutValue, [Const] [In] CLUSPROP_LONG* pValueStruct, [In] int lOldValue, [In] int lMinimum, [In] int lMaximum, [In] [Out] byte** ppPropertyList, [In] [Out] uint* pcbPropertyListSize);
uint ResUtilGetFileTimeProperty([In] [Out] FILETIME* pftOutValue, [Const] [In] CLUSPROP_FILETIME* pValueStruct, [In] FILETIME ftOldValue, [In] FILETIME ftMinimum, [In] FILETIME ftMaximum, [In] [Out] byte** ppPropertyList, [In] [Out] uint* pcbPropertyListSize);
void* ResUtilGetEnvironmentWithNetName([In] _HRESOURCE* hResource);
uint ResUtilFreeEnvironment([In] [Out] void* lpEnvironment);
PWSTR ResUtilExpandEnvironmentStrings([Const] [In] PWSTR pszSrc);
uint ResUtilSetResourceServiceEnvironment([Const] [In] PWSTR pszServiceName, [In] [Out] _HRESOURCE* hResource, [In] PLOG_EVENT_ROUTINE pfnLogEvent, [In] nint hResourceHandle);
uint ResUtilRemoveResourceServiceEnvironment([Const] [In] PWSTR pszServiceName, [In] PLOG_EVENT_ROUTINE pfnLogEvent, [In] nint hResourceHandle);
uint ResUtilSetResourceServiceStartParameters([Const] [In] PWSTR pszServiceName, [In] SC_HANDLE schSCMHandle, [In] [Out] nint* phService, [In] PLOG_EVENT_ROUTINE pfnLogEvent, [In] nint hResourceHandle);
uint ResUtilFindSzProperty([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pPropertyList, [In] uint cbPropertyListSize, [Const] [In] PWSTR pszPropertyName, [Out] [Optional] PWSTR* pszPropertyValue);
uint ResUtilFindExpandSzProperty([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pPropertyList, [In] uint cbPropertyListSize, [Const] [In] PWSTR pszPropertyName, [Out] [Optional] PWSTR* pszPropertyValue);
uint ResUtilFindExpandedSzProperty([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pPropertyList, [In] uint cbPropertyListSize, [Const] [In] PWSTR pszPropertyName, [Out] [Optional] PWSTR* pszPropertyValue);
uint ResUtilFindDwordProperty([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pPropertyList, [In] uint cbPropertyListSize, [Const] [In] PWSTR pszPropertyName, [Out] uint* pdwPropertyValue);
uint ResUtilFindBinaryProperty([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pPropertyList, [In] uint cbPropertyListSize, [Const] [In] PWSTR pszPropertyName, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] byte** pbPropertyValue, [Out] [Optional] uint* pcbPropertyValueSize);
uint ResUtilFindMultiSzProperty([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pPropertyList, [In] uint cbPropertyListSize, [Const] [In] PWSTR pszPropertyName, [MemorySize(BytesParamIndex = 4)] [Out] PWSTR* pszPropertyValue, [Out] uint* pcbPropertyValueSize);
uint ResUtilFindLongProperty([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pPropertyList, [In] uint cbPropertyListSize, [Const] [In] PWSTR pszPropertyName, [Out] int* plPropertyValue);
uint ResUtilFindULargeIntegerProperty([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pPropertyList, [In] uint cbPropertyListSize, [Const] [In] PWSTR pszPropertyName, [Out] ulong* plPropertyValue);
uint ResUtilFindFileTimeProperty([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pPropertyList, [In] uint cbPropertyListSize, [Const] [In] PWSTR pszPropertyName, [Out] FILETIME* pftPropertyValue);
uint ClusWorkerCreate([In] [Out] CLUS_WORKER* lpWorker, [In] PWORKER_START_ROUTINE lpStartAddress, [In] [Out] void* lpParameter);
BOOL ClusWorkerCheckTerminate([In] [Out] CLUS_WORKER* lpWorker);
void ClusWorkerTerminate([In] CLUS_WORKER* lpWorker);
uint ClusWorkerTerminateEx([In] [Out] CLUS_WORKER* ClusWorker, [In] uint TimeoutInMilliseconds, [In] BOOL WaitOnly);
uint ClusWorkersTerminate([NativeArrayInfo(CountParamIndex = 1)] [In] [Out] CLUS_WORKER** ClusWorkers, [Const] [In] nuint ClusWorkersCount, [In] uint TimeoutInMilliseconds, [In] BOOL WaitOnly);
BOOL ResUtilResourcesEqual([In] [Out] _HRESOURCE* hSelf, [In] [Out] _HRESOURCE* hResource);
BOOL ResUtilResourceTypesEqual([Const] [In] PWSTR lpszResourceTypeName, [In] [Out] _HRESOURCE* hResource);
BOOL ResUtilIsResourceClassEqual([In] [Out] CLUS_RESOURCE_CLASS_INFO* prci, [In] [Out] _HRESOURCE* hResource);
uint ResUtilEnumResources([In] [Out] _HRESOURCE* hSelf, [Const] [In] PWSTR lpszResTypeName, [In] LPRESOURCE_CALLBACK pResCallBack, [In] [Out] void* pParameter);
uint ResUtilEnumResourcesEx([In] [Out] _HCLUSTER* hCluster, [In] [Out] _HRESOURCE* hSelf, [Const] [In] PWSTR lpszResTypeName, [In] LPRESOURCE_CALLBACK_EX pResCallBack, [In] [Out] void* pParameter);
_HRESOURCE* ResUtilGetResourceDependency([In] HANDLE hSelf, [Const] [In] PWSTR lpszResourceType);
_HRESOURCE* ResUtilGetResourceDependencyByName([In] [Out] _HCLUSTER* hCluster, [In] HANDLE hSelf, [Const] [In] PWSTR lpszResourceType, [In] BOOL bRecurse);
_HRESOURCE* ResUtilGetResourceDependencyByClass([In] [Out] _HCLUSTER* hCluster, [In] HANDLE hSelf, [In] [Out] CLUS_RESOURCE_CLASS_INFO* prci, [In] BOOL bRecurse);
_HRESOURCE* ResUtilGetResourceNameDependency([Const] [In] PWSTR lpszResourceName, [Const] [In] PWSTR lpszResourceType);
uint ResUtilGetResourceDependentIPAddressProps([In] _HRESOURCE* hResource, [NativeArrayInfo(CountParamIndex = 2)] [Out] PWSTR pszAddress, [In] [Out] uint* pcchAddress, [NativeArrayInfo(CountParamIndex = 4)] [Out] PWSTR pszSubnetMask, [In] [Out] uint* pcchSubnetMask, [NativeArrayInfo(CountParamIndex = 6)] [Out] PWSTR pszNetwork, [In] [Out] uint* pcchNetwork);
uint ResUtilFindDependentDiskResourceDriveLetter([In] _HCLUSTER* hCluster, [In] _HRESOURCE* hResource, [NativeArrayInfo(CountParamIndex = 3)] [Out] PWSTR pszDriveLetter, [In] [Out] uint* pcchDriveLetter);
uint ResUtilTerminateServiceProcessFromResDll([In] uint dwServicePid, [In] BOOL bOffline, [Out] uint* pdwResourceState, [In] PLOG_EVENT_ROUTINE pfnLogEvent, [In] nint hResourceHandle);
uint ResUtilGetPropertyFormats([Const] [In] RESUTIL_PROPERTY_ITEM* pPropertyTable, [MemorySize(BytesParamIndex = 2)] [Out] void* pOutPropertyFormatList, [In] uint cbPropertyFormatListSize, [Out] uint* pcbBytesReturned, [Out] uint* pcbRequired);
uint ResUtilGetCoreClusterResources([In] _HCLUSTER* hCluster, [Out] _HRESOURCE** phClusterNameResource, [Out] _HRESOURCE** phClusterIPAddressResource, [Out] _HRESOURCE** phClusterQuorumResource);
uint ResUtilGetResourceName([In] _HRESOURCE* hResource, [NativeArrayInfo(CountParamIndex = 2)] [Out] PWSTR pszResourceName, [In] [Out] uint* pcchResourceNameInOut);
CLUSTER_ROLE_STATE ResUtilGetClusterRoleState([In] _HCLUSTER* hCluster, [In] CLUSTER_ROLE eClusterRole);
BOOL ClusterIsPathOnSharedVolume([Const] [In] PWSTR lpszPathName);
BOOL ClusterGetVolumePathName([Const] [In] PWSTR lpszFileName, [Out] PWSTR lpszVolumePathName, [In] uint cchBufferLength);
BOOL ClusterGetVolumeNameForVolumeMountPoint([Const] [In] PWSTR lpszVolumeMountPoint, [Out] PWSTR lpszVolumeName, [In] uint cchBufferLength);
uint ClusterPrepareSharedVolumeForBackup([Const] [In] PWSTR lpszFileName, [Out] PWSTR lpszVolumePathName, [In] [Out] uint* lpcchVolumePathName, [Out] PWSTR lpszVolumeName, [In] [Out] uint* lpcchVolumeName);
uint ClusterClearBackupStateForSharedVolume([Const] [In] PWSTR lpszVolumePathName);
uint ResUtilSetResourceServiceStartParametersEx([Const] [In] PWSTR pszServiceName, [In] SC_HANDLE schSCMHandle, [In] [Out] nint* phService, [In] uint dwDesiredAccess, [In] PLOG_EVENT_ROUTINE pfnLogEvent, [In] nint hResourceHandle);
uint ResUtilEnumResourcesEx2([In] [Out] _HCLUSTER* hCluster, [In] [Out] _HRESOURCE* hSelf, [Const] [In] PWSTR lpszResTypeName, [In] LPRESOURCE_CALLBACK_EX pResCallBack, [In] [Out] void* pParameter, [In] uint dwDesiredAccess);
_HRESOURCE* ResUtilGetResourceDependencyEx([In] HANDLE hSelf, [Const] [In] PWSTR lpszResourceType, [In] uint dwDesiredAccess);
_HRESOURCE* ResUtilGetResourceDependencyByNameEx([In] [Out] _HCLUSTER* hCluster, [In] HANDLE hSelf, [Const] [In] PWSTR lpszResourceType, [In] BOOL bRecurse, [In] uint dwDesiredAccess);
_HRESOURCE* ResUtilGetResourceDependencyByClassEx([In] [Out] _HCLUSTER* hCluster, [In] HANDLE hSelf, [In] [Out] CLUS_RESOURCE_CLASS_INFO* prci, [In] BOOL bRecurse, [In] uint dwDesiredAccess);
_HRESOURCE* ResUtilGetResourceNameDependencyEx([Const] [In] PWSTR lpszResourceName, [Const] [In] PWSTR lpszResourceType, [In] uint dwDesiredAccess);
uint ResUtilGetCoreClusterResourcesEx([In] _HCLUSTER* hClusterIn, [Out] [Optional] _HRESOURCE** phClusterNameResourceOut, [Out] [Optional] _HRESOURCE** phClusterQuorumResourceOut, [In] uint dwDesiredAccess);
_HCLUSCRYPTPROVIDER* OpenClusterCryptProvider([Const] [In] PWSTR lpszResource, [In] sbyte* lpszProvider, [In] uint dwType, [In] uint dwFlags);
_HCLUSCRYPTPROVIDER* OpenClusterCryptProviderEx([Const] [In] PWSTR lpszResource, [Const] [In] PWSTR lpszKeyname, [In] sbyte* lpszProvider, [In] uint dwType, [In] uint dwFlags);
uint CloseClusterCryptProvider([In] _HCLUSCRYPTPROVIDER* hClusCryptProvider);
uint ClusterEncrypt([In] _HCLUSCRYPTPROVIDER* hClusCryptProvider, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* pData, [In] uint cbData, [Out] byte** ppData, [Out] uint* pcbData);
uint ClusterDecrypt([In] _HCLUSCRYPTPROVIDER* hClusCryptProvider, [In] byte* pCryptInput, [In] uint cbCryptInput, [Out] byte** ppCryptOutput, [Out] uint* pcbCryptOutput);
uint FreeClusterCrypt([In] void* pCryptInfo);
uint ResUtilVerifyShutdownSafe([In] uint flags, [In] uint reason, [Out] uint* pResult);
BOOL ResUtilPaxosComparer([Const] [In] PaxosTagCStruct* left, [Const] [In] PaxosTagCStruct* right);
BOOL ResUtilLeftPaxosIsLessThanRight([Const] [In] PaxosTagCStruct* left, [Const] [In] PaxosTagCStruct* right);
uint ResUtilsDeleteKeyTree([In] HKEY key, [Const] [In] PWSTR keyName, [In] BOOL treatNoKeyAsError);
uint ResUtilGroupsEqual([In] [Out] _HGROUP* hSelf, [In] [Out] _HGROUP* hGroup, [In] [Out] BOOL* pEqual);
uint ResUtilEnumGroups([In] [Out] _HCLUSTER* hCluster, [In] [Out] _HGROUP* hSelf, [In] LPGROUP_CALLBACK_EX pResCallBack, [In] [Out] void* pParameter);
uint ResUtilEnumGroupsEx([In] [Out] _HCLUSTER* hCluster, [In] [Out] _HGROUP* hSelf, [In] CLUSGROUP_TYPE groupType, [In] LPGROUP_CALLBACK_EX pResCallBack, [In] [Out] void* pParameter);
uint ResUtilDupGroup([In] [Out] _HGROUP* group, [In] [Out] _HGROUP** copy);
uint ResUtilGetClusterGroupType([In] [Out] _HGROUP* hGroup, [In] [Out] CLUSGROUP_TYPE* groupType);
_HGROUP* ResUtilGetCoreGroup([In] [Out] _HCLUSTER* hCluster);
uint ResUtilResourceDepEnum([In] [Out] _HRESOURCE* hSelf, [In] uint enumType, [In] LPRESOURCE_CALLBACK_EX pResCallBack, [In] [Out] void* pParameter);
uint ResUtilDupResource([In] [Out] _HRESOURCE* group, [In] [Out] _HRESOURCE** copy);
uint ResUtilGetClusterId([In] [Out] _HCLUSTER* hCluster, [In] [Out] Guid* guid);
uint ResUtilNodeEnum([In] [Out] _HCLUSTER* hCluster, [In] LPNODE_CALLBACK pNodeCallBack, [In] [Out] void* pParameter);
