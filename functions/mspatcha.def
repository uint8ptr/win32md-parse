BOOL TestApplyPatchToFileA([Const] [In] PSTR PatchFileName, [Const] [In] PSTR OldFileName, [In] uint ApplyOptionFlags);
BOOL TestApplyPatchToFileW([Const] [In] PWSTR PatchFileName, [Const] [In] PWSTR OldFileName, [In] uint ApplyOptionFlags);
BOOL TestApplyPatchToFileByHandles([In] HANDLE PatchFileHandle, [In] HANDLE OldFileHandle, [In] uint ApplyOptionFlags);
BOOL TestApplyPatchToFileByBuffers([MemorySize(BytesParamIndex = 1)] [In] byte* PatchFileBuffer, [In] uint PatchFileSize, [MemorySize(BytesParamIndex = 3)] [In] [Optional] byte* OldFileBuffer, [In] uint OldFileSize, [Out] [Optional] uint* NewFileSize, [In] uint ApplyOptionFlags);
BOOL ApplyPatchToFileA([Const] [In] PSTR PatchFileName, [Const] [In] [Optional] PSTR OldFileName, [Const] [In] PSTR NewFileName, [In] uint ApplyOptionFlags);
BOOL ApplyPatchToFileW([Const] [In] PWSTR PatchFileName, [Const] [In] [Optional] PWSTR OldFileName, [Const] [In] PWSTR NewFileName, [In] uint ApplyOptionFlags);
BOOL ApplyPatchToFileByHandles([In] HANDLE PatchFileHandle, [In] [Optional] HANDLE OldFileHandle, [In] HANDLE NewFileHandle, [In] uint ApplyOptionFlags);
BOOL ApplyPatchToFileExA([Const] [In] PSTR PatchFileName, [Const] [In] [Optional] PSTR OldFileName, [Const] [In] PSTR NewFileName, [In] uint ApplyOptionFlags, [In] [Optional] PPATCH_PROGRESS_CALLBACK ProgressCallback, [In] [Optional] void* CallbackContext);
BOOL ApplyPatchToFileExW([Const] [In] PWSTR PatchFileName, [Const] [In] [Optional] PWSTR OldFileName, [Const] [In] PWSTR NewFileName, [In] uint ApplyOptionFlags, [In] [Optional] PPATCH_PROGRESS_CALLBACK ProgressCallback, [In] [Optional] void* CallbackContext);
BOOL ApplyPatchToFileByHandlesEx([In] HANDLE PatchFileHandle, [In] [Optional] HANDLE OldFileHandle, [In] HANDLE NewFileHandle, [In] uint ApplyOptionFlags, [In] [Optional] PPATCH_PROGRESS_CALLBACK ProgressCallback, [In] [Optional] void* CallbackContext);
BOOL ApplyPatchToFileByBuffers([MemorySize(BytesParamIndex = 1)] [In] byte* PatchFileMapped, [In] uint PatchFileSize, [MemorySize(BytesParamIndex = 3)] [In] [Optional] byte* OldFileMapped, [In] uint OldFileSize, [MemorySize(BytesParamIndex = 5)] [In] [Out] byte** NewFileBuffer, [In] uint NewFileBufferSize, [Out] [Optional] uint* NewFileActualSize, [Out] [Optional] FILETIME* NewFileTime, [In] uint ApplyOptionFlags, [In] [Optional] PPATCH_PROGRESS_CALLBACK ProgressCallback, [In] [Optional] void* CallbackContext);
BOOL GetFilePatchSignatureA([Const] [In] PSTR FileName, [In] uint OptionFlags, [In] [Optional] void* OptionData, [In] uint IgnoreRangeCount, [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] PATCH_IGNORE_RANGE* IgnoreRangeArray, [In] uint RetainRangeCount, [NativeArrayInfo(CountParamIndex = 5)] [In] [Optional] PATCH_RETAIN_RANGE* RetainRangeArray, [In] uint SignatureBufferSize, [MemorySize(BytesParamIndex = 7)] [Out] PSTR SignatureBuffer);
BOOL GetFilePatchSignatureW([Const] [In] PWSTR FileName, [In] uint OptionFlags, [In] [Optional] void* OptionData, [In] uint IgnoreRangeCount, [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] PATCH_IGNORE_RANGE* IgnoreRangeArray, [In] uint RetainRangeCount, [NativeArrayInfo(CountParamIndex = 5)] [In] [Optional] PATCH_RETAIN_RANGE* RetainRangeArray, [In] uint SignatureBufferSize, [MemorySize(BytesParamIndex = 7)] [Out] PWSTR SignatureBuffer);
BOOL GetFilePatchSignatureByHandle([In] HANDLE FileHandle, [In] uint OptionFlags, [In] [Optional] void* OptionData, [In] uint IgnoreRangeCount, [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] PATCH_IGNORE_RANGE* IgnoreRangeArray, [In] uint RetainRangeCount, [NativeArrayInfo(CountParamIndex = 5)] [In] [Optional] PATCH_RETAIN_RANGE* RetainRangeArray, [In] uint SignatureBufferSize, [MemorySize(BytesParamIndex = 7)] [Out] PSTR SignatureBuffer);
BOOL GetFilePatchSignatureByBuffer([MemorySize(BytesParamIndex = 1)] [In] [Out] byte* FileBufferWritable, [In] uint FileSize, [In] uint OptionFlags, [In] [Optional] void* OptionData, [In] uint IgnoreRangeCount, [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] PATCH_IGNORE_RANGE* IgnoreRangeArray, [In] uint RetainRangeCount, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] PATCH_RETAIN_RANGE* RetainRangeArray, [In] uint SignatureBufferSize, [MemorySize(BytesParamIndex = 8)] [Out] PSTR SignatureBuffer);
int NormalizeFileForPatchSignature([MemorySize(BytesParamIndex = 1)] [In] [Out] void* FileBuffer, [In] uint FileSize, [In] uint OptionFlags, [In] [Optional] PATCH_OPTION_DATA* OptionData, [In] uint NewFileCoffBase, [In] uint NewFileCoffTime, [In] uint IgnoreRangeCount, [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] PATCH_IGNORE_RANGE* IgnoreRangeArray, [In] uint RetainRangeCount, [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] PATCH_RETAIN_RANGE* RetainRangeArray);
