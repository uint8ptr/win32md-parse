NTSTATUS HidP_GetCaps([In] nint PreparsedData, [Out] HIDP_CAPS* Capabilities);
NTSTATUS HidP_GetLinkCollectionNodes([NativeArrayInfo(CountParamIndex = 1)] [Out] HIDP_LINK_COLLECTION_NODE* LinkCollectionNodes, [In] [Out] uint* LinkCollectionNodesLength, [In] nint PreparsedData);
NTSTATUS HidP_GetSpecificButtonCaps([In] HIDP_REPORT_TYPE ReportType, [In] [Optional] ushort UsagePage, [In] [Optional] ushort LinkCollection, [In] [Optional] ushort Usage, [NativeArrayInfo(CountParamIndex = 5)] [Out] HIDP_BUTTON_CAPS* ButtonCaps, [In] [Out] ushort* ButtonCapsLength, [In] nint PreparsedData);
NTSTATUS HidP_GetButtonCaps([In] HIDP_REPORT_TYPE ReportType, [NativeArrayInfo(CountParamIndex = 2)] [Out] HIDP_BUTTON_CAPS* ButtonCaps, [In] [Out] ushort* ButtonCapsLength, [In] nint PreparsedData);
NTSTATUS HidP_GetSpecificValueCaps([In] HIDP_REPORT_TYPE ReportType, [In] [Optional] ushort UsagePage, [In] [Optional] ushort LinkCollection, [In] [Optional] ushort Usage, [NativeArrayInfo(CountParamIndex = 5)] [Out] HIDP_VALUE_CAPS* ValueCaps, [In] [Out] ushort* ValueCapsLength, [In] nint PreparsedData);
NTSTATUS HidP_GetValueCaps([In] HIDP_REPORT_TYPE ReportType, [NativeArrayInfo(CountParamIndex = 2)] [Out] HIDP_VALUE_CAPS* ValueCaps, [In] [Out] ushort* ValueCapsLength, [In] nint PreparsedData);
NTSTATUS HidP_GetExtendedAttributes([In] HIDP_REPORT_TYPE ReportType, [In] ushort DataIndex, [In] nint PreparsedData, [NativeArrayInfo(CountParamIndex = 4)] [Out] HIDP_EXTENDED_ATTRIBUTES* Attributes, [In] [Out] uint* LengthAttributes);
NTSTATUS HidP_InitializeReportForID([In] HIDP_REPORT_TYPE ReportType, [In] byte ReportID, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 4)] [Out] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_SetData([In] HIDP_REPORT_TYPE ReportType, [NativeArrayInfo(CountParamIndex = 2)] [In] [Out] HIDP_DATA* DataList, [In] [Out] uint* DataLength, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 5)] [In] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_GetData([In] HIDP_REPORT_TYPE ReportType, [NativeArrayInfo(CountParamIndex = 2)] [Out] HIDP_DATA* DataList, [In] [Out] uint* DataLength, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 5)] [Out] PSTR Report, [In] uint ReportLength);
uint HidP_MaxDataListLength([In] HIDP_REPORT_TYPE ReportType, [In] nint PreparsedData);
NTSTATUS HidP_SetUsages([In] HIDP_REPORT_TYPE ReportType, [In] ushort UsagePage, [In] [Optional] ushort LinkCollection, [NativeArrayInfo(CountParamIndex = 4)] [In] [Out] ushort* UsageList, [In] [Out] uint* UsageLength, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 7)] [In] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_UnsetUsages([In] HIDP_REPORT_TYPE ReportType, [In] ushort UsagePage, [In] [Optional] ushort LinkCollection, [NativeArrayInfo(CountParamIndex = 4)] [In] [Out] ushort* UsageList, [In] [Out] uint* UsageLength, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 7)] [In] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_GetUsages([In] HIDP_REPORT_TYPE ReportType, [In] ushort UsagePage, [In] [Optional] ushort LinkCollection, [NativeArrayInfo(CountParamIndex = 4)] [Out] ushort* UsageList, [In] [Out] uint* UsageLength, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 7)] [Out] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_GetUsagesEx([In] HIDP_REPORT_TYPE ReportType, [In] [Optional] ushort LinkCollection, [NativeArrayInfo(CountParamIndex = 3)] [In] [Out] USAGE_AND_PAGE* ButtonList, [In] [Out] uint* UsageLength, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 6)] [In] PSTR Report, [In] uint ReportLength);
uint HidP_MaxUsageListLength([In] HIDP_REPORT_TYPE ReportType, [In] [Optional] ushort UsagePage, [In] nint PreparsedData);
NTSTATUS HidP_SetUsageValue([In] HIDP_REPORT_TYPE ReportType, [In] ushort UsagePage, [In] [Optional] ushort LinkCollection, [In] ushort Usage, [In] uint UsageValue, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 7)] [In] [Out] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_SetScaledUsageValue([In] HIDP_REPORT_TYPE ReportType, [In] ushort UsagePage, [In] [Optional] ushort LinkCollection, [In] ushort Usage, [In] int UsageValue, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 7)] [In] [Out] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_SetUsageValueArray([In] HIDP_REPORT_TYPE ReportType, [In] ushort UsagePage, [In] [Optional] ushort LinkCollection, [In] ushort Usage, [NotNullTerminated] [MemorySize(BytesParamIndex = 5)] [In] PSTR UsageValue, [In] ushort UsageValueByteLength, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 8)] [In] [Out] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_GetUsageValue([In] HIDP_REPORT_TYPE ReportType, [In] ushort UsagePage, [In] [Optional] ushort LinkCollection, [In] ushort Usage, [Out] uint* UsageValue, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 7)] [In] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_GetScaledUsageValue([In] HIDP_REPORT_TYPE ReportType, [In] ushort UsagePage, [In] [Optional] ushort LinkCollection, [In] ushort Usage, [Out] int* UsageValue, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 7)] [In] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_GetUsageValueArray([In] HIDP_REPORT_TYPE ReportType, [In] ushort UsagePage, [In] [Optional] ushort LinkCollection, [In] ushort Usage, [NotNullTerminated] [MemorySize(BytesParamIndex = 5)] [In] [Out] PSTR UsageValue, [In] ushort UsageValueByteLength, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 8)] [In] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_UsageListDifference([NativeArrayInfo(CountParamIndex = 4)] [In] ushort* PreviousUsageList, [NativeArrayInfo(CountParamIndex = 4)] [In] ushort* CurrentUsageList, [NativeArrayInfo(CountParamIndex = 4)] [Out] ushort* BreakUsageList, [NativeArrayInfo(CountParamIndex = 4)] [Out] ushort* MakeUsageList, [In] uint UsageListLength);
NTSTATUS HidP_GetButtonArray([In] HIDP_REPORT_TYPE ReportType, [In] ushort UsagePage, [In] [Optional] ushort LinkCollection, [In] ushort Usage, [NativeArrayInfo(CountParamIndex = 5)] [Out] HIDP_BUTTON_ARRAY_DATA* ButtonData, [In] [Out] ushort* ButtonDataLength, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 8)] [In] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_SetButtonArray([In] HIDP_REPORT_TYPE ReportType, [In] ushort UsagePage, [In] [Optional] ushort LinkCollection, [In] ushort Usage, [NativeArrayInfo(CountParamIndex = 5)] [In] HIDP_BUTTON_ARRAY_DATA* ButtonData, [In] ushort ButtonDataLength, [In] nint PreparsedData, [NotNullTerminated] [MemorySize(BytesParamIndex = 8)] [In] [Out] PSTR Report, [In] uint ReportLength);
NTSTATUS HidP_TranslateUsagesToI8042ScanCodes([NativeArrayInfo(CountParamIndex = 1)] [In] ushort* ChangedUsageList, [In] uint UsageListLength, [In] HIDP_KEYBOARD_DIRECTION KeyAction, [In] [Out] HIDP_KEYBOARD_MODIFIER_STATE* ModifierState, [In] PHIDP_INSERT_SCANCODES InsertCodesProcedure, [In] [Optional] void* InsertCodesContext);
BOOLEAN HidD_GetAttributes([In] HANDLE HidDeviceObject, [Out] HIDD_ATTRIBUTES* Attributes);
void HidD_GetHidGuid([Out] Guid* HidGuid);
BOOLEAN HidD_GetPreparsedData([In] HANDLE HidDeviceObject, [Out] nint* PreparsedData);
BOOLEAN HidD_FreePreparsedData([In] nint PreparsedData);
BOOLEAN HidD_FlushQueue([In] HANDLE HidDeviceObject);
BOOLEAN HidD_GetConfiguration([In] HANDLE HidDeviceObject, [MemorySize(BytesParamIndex = 2)] [Out] HIDD_CONFIGURATION* Configuration, [In] uint ConfigurationLength);
BOOLEAN HidD_SetConfiguration([In] HANDLE HidDeviceObject, [MemorySize(BytesParamIndex = 2)] [In] HIDD_CONFIGURATION* Configuration, [In] uint ConfigurationLength);
BOOLEAN HidD_GetFeature([In] HANDLE HidDeviceObject, [MemorySize(BytesParamIndex = 2)] [Out] void* ReportBuffer, [In] uint ReportBufferLength);
BOOLEAN HidD_SetFeature([In] HANDLE HidDeviceObject, [MemorySize(BytesParamIndex = 2)] [In] void* ReportBuffer, [In] uint ReportBufferLength);
BOOLEAN HidD_GetInputReport([In] HANDLE HidDeviceObject, [MemorySize(BytesParamIndex = 2)] [Out] void* ReportBuffer, [In] uint ReportBufferLength);
BOOLEAN HidD_SetOutputReport([In] HANDLE HidDeviceObject, [MemorySize(BytesParamIndex = 2)] [In] void* ReportBuffer, [In] uint ReportBufferLength);
BOOLEAN HidD_GetNumInputBuffers([In] HANDLE HidDeviceObject, [Out] uint* NumberBuffers);
BOOLEAN HidD_SetNumInputBuffers([In] HANDLE HidDeviceObject, [In] uint NumberBuffers);
BOOLEAN HidD_GetPhysicalDescriptor([In] HANDLE HidDeviceObject, [MemorySize(BytesParamIndex = 2)] [Out] void* Buffer, [In] uint BufferLength);
BOOLEAN HidD_GetManufacturerString([In] HANDLE HidDeviceObject, [MemorySize(BytesParamIndex = 2)] [Out] void* Buffer, [In] uint BufferLength);
BOOLEAN HidD_GetProductString([In] HANDLE HidDeviceObject, [MemorySize(BytesParamIndex = 2)] [Out] void* Buffer, [In] uint BufferLength);
BOOLEAN HidD_GetIndexedString([In] HANDLE HidDeviceObject, [In] uint StringIndex, [MemorySize(BytesParamIndex = 3)] [Out] void* Buffer, [In] uint BufferLength);
BOOLEAN HidD_GetSerialNumberString([In] HANDLE HidDeviceObject, [MemorySize(BytesParamIndex = 2)] [Out] void* Buffer, [In] uint BufferLength);
BOOLEAN HidD_GetMsGenreDescriptor([In] HANDLE HidDeviceObject, [MemorySize(BytesParamIndex = 2)] [Out] void* Buffer, [In] uint BufferLength);
