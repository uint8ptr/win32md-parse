uint TcRegisterClient([In] uint TciVersion, [In] HANDLE ClRegCtx, [In] TCI_CLIENT_FUNC_LIST* ClientHandlerList, [Out] HANDLE* pClientHandle);
uint TcEnumerateInterfaces([In] HANDLE ClientHandle, [In] [Out] uint* pBufferSize, [Out] TC_IFC_DESCRIPTOR* InterfaceBuffer);
uint TcOpenInterfaceA([In] PSTR pInterfaceName, [In] HANDLE ClientHandle, [In] HANDLE ClIfcCtx, [Out] HANDLE* pIfcHandle);
uint TcOpenInterfaceW([In] PWSTR pInterfaceName, [In] HANDLE ClientHandle, [In] HANDLE ClIfcCtx, [Out] HANDLE* pIfcHandle);
uint TcCloseInterface([In] HANDLE IfcHandle);
uint TcQueryInterface([In] HANDLE IfcHandle, [In] Guid* pGuidParam, [In] BOOLEAN NotifyChange, [In] [Out] uint* pBufferSize, [MemorySize(BytesParamIndex = 3)] [Out] void* Buffer);
uint TcSetInterface([In] HANDLE IfcHandle, [In] Guid* pGuidParam, [In] uint BufferSize, [MemorySize(BytesParamIndex = 2)] [In] void* Buffer);
uint TcQueryFlowA([In] PSTR pFlowName, [In] Guid* pGuidParam, [In] [Out] uint* pBufferSize, [MemorySize(BytesParamIndex = 2)] [Out] void* Buffer);
uint TcQueryFlowW([In] PWSTR pFlowName, [In] Guid* pGuidParam, [In] [Out] uint* pBufferSize, [MemorySize(BytesParamIndex = 2)] [Out] void* Buffer);
uint TcSetFlowA([In] PSTR pFlowName, [In] Guid* pGuidParam, [In] uint BufferSize, [MemorySize(BytesParamIndex = 2)] [In] void* Buffer);
uint TcSetFlowW([In] PWSTR pFlowName, [In] Guid* pGuidParam, [In] uint BufferSize, [MemorySize(BytesParamIndex = 2)] [In] void* Buffer);
uint TcAddFlow([In] HANDLE IfcHandle, [In] HANDLE ClFlowCtx, [In] uint Flags, [In] TC_GEN_FLOW* pGenericFlow, [Out] HANDLE* pFlowHandle);
uint TcGetFlowNameA([In] HANDLE FlowHandle, [In] uint StrSize, [NativeArrayInfo(CountParamIndex = 1)] [Out] PSTR pFlowName);
uint TcGetFlowNameW([In] HANDLE FlowHandle, [In] uint StrSize, [NativeArrayInfo(CountParamIndex = 1)] [Out] PWSTR pFlowName);
uint TcModifyFlow([In] HANDLE FlowHandle, [In] TC_GEN_FLOW* pGenericFlow);
uint TcAddFilter([In] HANDLE FlowHandle, [In] TC_GEN_FILTER* pGenericFilter, [Out] HANDLE* pFilterHandle);
uint TcDeregisterClient([In] HANDLE ClientHandle);
uint TcDeleteFlow([In] HANDLE FlowHandle);
uint TcDeleteFilter([In] HANDLE FilterHandle);
uint TcEnumerateFlows([In] HANDLE IfcHandle, [In] [Out] HANDLE* pEnumHandle, [In] [Out] uint* pFlowCount, [In] [Out] uint* pBufSize, [Out] ENUMERATION_BUFFER* Buffer);
