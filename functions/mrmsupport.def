HRESULT CreateResourceIndexer([Const] [In] PWSTR projectRoot, [Const] [In] [Optional] PWSTR extensionDllPath, [Out] void** ppResourceIndexer);
void DestroyResourceIndexer([In] [Optional] void* resourceIndexer);
HRESULT IndexFilePath([In] void* resourceIndexer, [Const] [In] PWSTR filePath, [Out] PWSTR* ppResourceUri, [Out] uint* pQualifierCount, [NativeArrayInfo(CountParamIndex = 3)] [Out] IndexedResourceQualifier** ppQualifiers);
void DestroyIndexedResults([In] [Optional] PWSTR resourceUri, [In] uint qualifierCount, [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] IndexedResourceQualifier* qualifiers);
HRESULT MrmCreateResourceIndexer([Const] [In] [Optional] PWSTR packageFamilyName, [Const] [In] PWSTR projectRoot, [In] MrmPlatformVersion platformVersion, [Const] [In] [Optional] PWSTR defaultQualifiers, [In] [Out] MrmResourceIndexerHandle* indexer);
HRESULT MrmCreateResourceIndexerFromPreviousSchemaFile([Const] [In] PWSTR projectRoot, [In] MrmPlatformVersion platformVersion, [Const] [In] [Optional] PWSTR defaultQualifiers, [Const] [In] PWSTR schemaFile, [In] [Out] MrmResourceIndexerHandle* indexer);
HRESULT MrmCreateResourceIndexerFromPreviousPriFile([Const] [In] PWSTR projectRoot, [In] MrmPlatformVersion platformVersion, [Const] [In] [Optional] PWSTR defaultQualifiers, [Const] [In] PWSTR priFile, [In] [Out] MrmResourceIndexerHandle* indexer);
HRESULT MrmCreateResourceIndexerFromPreviousSchemaData([Const] [In] PWSTR projectRoot, [In] MrmPlatformVersion platformVersion, [Const] [In] [Optional] PWSTR defaultQualifiers, [MemorySize(BytesParamIndex = 4)] [In] byte* schemaXmlData, [In] uint schemaXmlSize, [In] [Out] MrmResourceIndexerHandle* indexer);
HRESULT MrmCreateResourceIndexerFromPreviousPriData([Const] [In] PWSTR projectRoot, [In] MrmPlatformVersion platformVersion, [Const] [In] [Optional] PWSTR defaultQualifiers, [MemorySize(BytesParamIndex = 4)] [In] byte* priData, [In] uint priSize, [In] [Out] MrmResourceIndexerHandle* indexer);
HRESULT MrmCreateResourceIndexerWithFlags([Const] [In] [Optional] PWSTR packageFamilyName, [Const] [In] PWSTR projectRoot, [In] MrmPlatformVersion platformVersion, [Const] [In] [Optional] PWSTR defaultQualifiers, [In] MrmIndexerFlags flags, [In] [Out] MrmResourceIndexerHandle* indexer);
HRESULT MrmIndexString([In] MrmResourceIndexerHandle indexer, [Const] [In] PWSTR resourceUri, [Const] [In] PWSTR resourceString, [Const] [In] [Optional] PWSTR qualifiers);
HRESULT MrmIndexEmbeddedData([In] MrmResourceIndexerHandle indexer, [Const] [In] PWSTR resourceUri, [Const] [MemorySize(BytesParamIndex = 3)] [In] byte* embeddedData, [In] uint embeddedDataSize, [Const] [In] [Optional] PWSTR qualifiers);
HRESULT MrmIndexFile([In] MrmResourceIndexerHandle indexer, [Const] [In] PWSTR resourceUri, [Const] [In] PWSTR filePath, [Const] [In] [Optional] PWSTR qualifiers);
HRESULT MrmIndexFileAutoQualifiers([In] MrmResourceIndexerHandle indexer, [Const] [In] [Optional] PWSTR filePath);
HRESULT MrmIndexResourceContainerAutoQualifiers([In] MrmResourceIndexerHandle indexer, [Const] [In] PWSTR containerPath);
HRESULT MrmCreateResourceFile([In] MrmResourceIndexerHandle indexer, [In] MrmPackagingMode packagingMode, [In] MrmPackagingOptions packagingOptions, [Const] [In] PWSTR outputDirectory);
HRESULT MrmCreateResourceFileWithChecksum([In] MrmResourceIndexerHandle indexer, [In] MrmPackagingMode packagingMode, [In] MrmPackagingOptions packagingOptions, [In] uint checksum, [Const] [In] PWSTR outputDirectory);
HRESULT MrmCreateResourceFileInMemory([In] MrmResourceIndexerHandle indexer, [In] MrmPackagingMode packagingMode, [In] MrmPackagingOptions packagingOptions, [Out] byte** outputPriData, [Out] uint* outputPriSize);
HRESULT MrmPeekResourceIndexerMessages([In] MrmResourceIndexerHandle handle, [NativeArrayInfo(CountParamIndex = 2)] [Out] MrmResourceIndexerMessage** messages, [Out] uint* numMsgs);
HRESULT MrmDestroyIndexerAndMessages([In] MrmResourceIndexerHandle indexer);
HRESULT MrmFreeMemory([In] byte* data);
HRESULT MrmDumpPriFile([Const] [In] PWSTR indexFileName, [Const] [In] [Optional] PWSTR schemaPriFile, [In] MrmDumpType dumpType, [Const] [In] PWSTR outputXmlFile);
HRESULT MrmDumpPriFileInMemory([Const] [In] PWSTR indexFileName, [Const] [In] [Optional] PWSTR schemaPriFile, [In] MrmDumpType dumpType, [Out] byte** outputXmlData, [Out] uint* outputXmlSize);
HRESULT MrmDumpPriDataInMemory([MemorySize(BytesParamIndex = 1)] [In] byte* inputPriData, [In] uint inputPriSize, [MemorySize(BytesParamIndex = 3)] [In] [Optional] byte* schemaPriData, [In] uint schemaPriSize, [In] MrmDumpType dumpType, [Out] byte** outputXmlData, [Out] uint* outputXmlSize);
HRESULT MrmCreateConfig([In] MrmPlatformVersion platformVersion, [Const] [In] [Optional] PWSTR defaultQualifiers, [Const] [In] PWSTR outputXmlFile);
HRESULT MrmCreateConfigInMemory([In] MrmPlatformVersion platformVersion, [Const] [In] [Optional] PWSTR defaultQualifiers, [Out] byte** outputXmlData, [Out] uint* outputXmlSize);
HRESULT MrmGetPriFileContentChecksum([Const] [In] PWSTR priFile, [Out] uint* checksum);
