uint SnmpGetTranslateMode([In] [Out] SNMP_API_TRANSLATE_MODE* nTranslateMode);
uint SnmpSetTranslateMode([In] SNMP_API_TRANSLATE_MODE nTranslateMode);
uint SnmpGetRetransmitMode([In] [Out] SNMP_STATUS* nRetransmitMode);
uint SnmpSetRetransmitMode([In] SNMP_STATUS nRetransmitMode);
uint SnmpGetTimeout([In] nint hEntity, [In] [Out] uint* nPolicyTimeout, [In] [Out] uint* nActualTimeout);
uint SnmpSetTimeout([In] nint hEntity, [In] uint nPolicyTimeout);
uint SnmpGetRetry([In] nint hEntity, [In] [Out] uint* nPolicyRetry, [In] [Out] uint* nActualRetry);
uint SnmpSetRetry([In] nint hEntity, [In] uint nPolicyRetry);
uint SnmpGetVendorInfo([In] [Out] smiVENDORINFO* vendorInfo);
uint SnmpStartup([In] [Out] uint* nMajorVersion, [In] [Out] uint* nMinorVersion, [In] [Out] uint* nLevel, [In] [Out] SNMP_API_TRANSLATE_MODE* nTranslateMode, [In] [Out] SNMP_STATUS* nRetransmitMode);
uint SnmpCleanup();
nint SnmpOpen([In] HWND hWnd, [In] uint wMsg);
uint SnmpClose([In] nint session);
uint SnmpSendMsg([In] nint session, [In] nint srcEntity, [In] nint dstEntity, [In] nint context, [In] nint PDU);
uint SnmpRecvMsg([In] nint session, [In] [Out] nint* srcEntity, [In] [Out] nint* dstEntity, [In] [Out] nint* context, [In] [Out] nint* PDU);
uint SnmpRegister([In] nint session, [In] nint srcEntity, [In] nint dstEntity, [In] nint context, [In] [Out] smiOID* notification, [In] SNMP_STATUS state);
nint SnmpCreateSession([In] HWND hWnd, [In] uint wMsg, [In] SNMPAPI_CALLBACK fCallBack, [In] [Out] void* lpClientData);
uint SnmpListen([In] nint hEntity, [In] SNMP_STATUS lStatus);
uint SnmpListenEx([In] nint hEntity, [In] uint lStatus, [In] uint nUseEntityAddr);
uint SnmpCancelMsg([In] nint session, [In] int reqId);
uint SnmpStartupEx([In] [Out] uint* nMajorVersion, [In] [Out] uint* nMinorVersion, [In] [Out] uint* nLevel, [In] [Out] SNMP_API_TRANSLATE_MODE* nTranslateMode, [In] [Out] SNMP_STATUS* nRetransmitMode);
uint SnmpCleanupEx();
nint SnmpStrToEntity([In] nint session, [Const] [In] PSTR string);
uint SnmpEntityToStr([In] nint entity, [In] uint size, [NativeArrayInfo(CountParamIndex = 1)] [Out] PSTR string);
uint SnmpFreeEntity([In] nint entity);
nint SnmpStrToContext([In] nint session, [In] [Out] smiOCTETS* string);
uint SnmpContextToStr([In] nint context, [In] [Out] smiOCTETS* string);
uint SnmpFreeContext([In] nint context);
uint SnmpSetPort([In] nint hEntity, [In] uint nPort);
nint SnmpCreatePdu([In] nint session, [In] SNMP_PDU_TYPE PDU_type, [In] int request_id, [In] int error_status, [In] int error_index, [In] nint varbindlist);
uint SnmpGetPduData([In] nint PDU, [In] [Out] SNMP_PDU_TYPE* PDU_type, [In] [Out] int* request_id, [In] [Out] SNMP_ERROR* error_status, [In] [Out] int* error_index, [In] [Out] nint* varbindlist);
uint SnmpSetPduData([In] nint PDU, [Const] [In] int* PDU_type, [Const] [In] int* request_id, [Const] [In] int* non_repeaters, [Const] [In] int* max_repetitions, [Const] [In] nint* varbindlist);
nint SnmpDuplicatePdu([In] nint session, [In] nint PDU);
uint SnmpFreePdu([In] nint PDU);
nint SnmpCreateVbl([In] nint session, [In] [Out] smiOID* name, [In] [Out] smiVALUE* value);
nint SnmpDuplicateVbl([In] nint session, [In] nint vbl);
uint SnmpFreeVbl([In] nint vbl);
uint SnmpCountVbl([In] nint vbl);
uint SnmpGetVb([In] nint vbl, [In] uint index, [In] [Out] smiOID* name, [In] [Out] smiVALUE* value);
uint SnmpSetVb([In] nint vbl, [In] uint index, [In] [Out] smiOID* name, [In] [Out] smiVALUE* value);
uint SnmpDeleteVb([In] nint vbl, [In] uint index);
uint SnmpGetLastError([In] nint session);
uint SnmpStrToOid([Const] [In] PSTR string, [In] [Out] smiOID* dstOID);
uint SnmpOidToStr([In] smiOID* srcOID, [In] uint size, [NativeArrayInfo(CountParamIndex = 1)] [Out] PSTR string);
uint SnmpOidCopy([In] [Out] smiOID* srcOID, [In] [Out] smiOID* dstOID);
uint SnmpOidCompare([In] [Out] smiOID* xOID, [In] [Out] smiOID* yOID, [In] uint maxlen, [In] [Out] int* result);
uint SnmpEncodeMsg([In] nint session, [In] nint srcEntity, [In] nint dstEntity, [In] nint context, [In] nint pdu, [In] [Out] smiOCTETS* msgBufDesc);
uint SnmpDecodeMsg([In] nint session, [In] [Out] nint* srcEntity, [In] [Out] nint* dstEntity, [In] [Out] nint* context, [In] [Out] nint* pdu, [In] [Out] smiOCTETS* msgBufDesc);
uint SnmpFreeDescriptor([In] uint syntax, [In] [Out] smiOCTETS* descriptor);
