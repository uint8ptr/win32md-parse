HRESULT ADsGetObject([Const] [In] PWSTR lpszPathName, [Const] [In] Guid* riid, [In] [Out] void** ppObject);
HRESULT ADsBuildEnumerator([In] IADsContainer pADsContainer, [Out] IEnumVARIANT* ppEnumVariant);
HRESULT ADsFreeEnumerator([In] IEnumVARIANT pEnumVariant);
HRESULT ADsEnumerateNext([In] IEnumVARIANT pEnumVariant, [In] uint cElements, [In] [Out] VARIANT* pvar, [In] [Out] uint* pcElementsFetched);
HRESULT ADsBuildVarArrayStr([NativeArrayInfo(CountParamIndex = 1)] [In] PWSTR* lppPathNames, [In] uint dwPathNames, [In] [Out] VARIANT* pVar);
HRESULT ADsBuildVarArrayInt([In] [Out] uint* lpdwObjectTypes, [In] uint dwObjectTypes, [In] [Out] VARIANT* pVar);
HRESULT ADsOpenObject([Const] [In] PWSTR lpszPathName, [Const] [In] PWSTR lpszUserName, [Const] [In] PWSTR lpszPassword, [In] ADS_AUTHENTICATION_ENUM dwReserved, [Const] [In] Guid* riid, [In] [Out] void** ppObject);
HRESULT ADsGetLastError([In] [Out] uint* lpError, [NativeArrayInfo(CountParamIndex = 2)] [Out] PWSTR lpErrorBuf, [In] uint dwErrorBufLen, [NativeArrayInfo(CountParamIndex = 4)] [Out] PWSTR lpNameBuf, [In] uint dwNameBufLen);
void ADsSetLastError([In] uint dwErr, [Const] [In] PWSTR pszError, [Const] [In] PWSTR pszProvider);
void* AllocADsMem([In] uint cb);
BOOL FreeADsMem([In] [Out] void* pMem);
void* ReallocADsMem([In] [Out] void* pOldMem, [In] uint cbOld, [In] uint cbNew);
PWSTR AllocADsStr([Const] [In] PWSTR pStr);
BOOL FreeADsStr([In] PWSTR pStr);
BOOL ReallocADsStr([In] [Out] PWSTR* ppStr, [In] PWSTR pStr);
HRESULT ADsEncodeBinaryData([In] [Out] byte* pbSrcData, [In] uint dwSrcLen, [Out] PWSTR* ppszDestData);
HRESULT ADsDecodeBinaryData([Const] [In] PWSTR szSrcData, [In] [Out] byte** ppbDestData, [In] [Out] uint* pdwDestLen);
HRESULT PropVariantToAdsType([In] [Out] VARIANT* pVariant, [In] uint dwNumVariant, [In] [Out] ADSVALUE** ppAdsValues, [In] [Out] uint* pdwNumValues);
HRESULT AdsTypeToPropVariant([In] [Out] ADSVALUE* pAdsValues, [In] uint dwNumValues, [In] [Out] VARIANT* pVariant);
void AdsFreeAdsValues([In] [Out] ADSVALUE* pAdsValues, [In] uint dwNumValues);
HRESULT BinarySDToSecurityDescriptor([In] PSECURITY_DESCRIPTOR pSecurityDescriptor, [In] [Out] VARIANT* pVarsec, [Const] [In] PWSTR pszServerName, [Const] [In] PWSTR userName, [Const] [In] PWSTR passWord, [In] uint dwFlags);
HRESULT SecurityDescriptorToBinarySD([In] VARIANT vVarSecDes, [In] [Out] PSECURITY_DESCRIPTOR* ppSecurityDescriptor, [In] [Out] uint* pdwSDLength, [Const] [In] PWSTR pszServerName, [Const] [In] PWSTR userName, [Const] [In] PWSTR passWord, [In] uint dwFlags);
