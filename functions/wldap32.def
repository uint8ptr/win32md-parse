LDAP* ldap_openW([Const] [In] PWSTR HostName, [In] uint PortNumber);
LDAP* ldap_openA([Const] [In] PSTR HostName, [In] uint PortNumber);
LDAP* ldap_initW([Const] [In] PWSTR HostName, [In] uint PortNumber);
LDAP* ldap_initA([Const] [In] PSTR HostName, [In] uint PortNumber);
LDAP* ldap_sslinitW([In] PWSTR HostName, [In] uint PortNumber, [In] int secure);
LDAP* ldap_sslinitA([In] PSTR HostName, [In] uint PortNumber, [In] int secure);
uint ldap_connect([In] [Out] LDAP* ld, [In] [Out] LDAP_TIMEVAL* timeout);
LDAP* ldap_open([In] PSTR HostName, [In] uint PortNumber);
LDAP* ldap_init([In] PSTR HostName, [In] uint PortNumber);
LDAP* ldap_sslinit([In] PSTR HostName, [In] uint PortNumber, [In] int secure);
LDAP* cldap_openW([In] PWSTR HostName, [In] uint PortNumber);
LDAP* cldap_openA([In] PSTR HostName, [In] uint PortNumber);
LDAP* cldap_open([In] PSTR HostName, [In] uint PortNumber);
uint ldap_unbind([In] [Out] LDAP* ld);
uint ldap_unbind_s([In] [Out] LDAP* ld);
uint ldap_get_option([In] [Out] LDAP* ld, [In] int option, [In] [Out] void* outvalue);
uint ldap_get_optionW([In] [Out] LDAP* ld, [In] int option, [In] [Out] void* outvalue);
uint ldap_set_option([In] [Out] LDAP* ld, [In] int option, [Const] [In] void* invalue);
uint ldap_set_optionW([In] [Out] LDAP* ld, [In] int option, [Const] [In] void* invalue);
uint ldap_simple_bindW([In] [Out] LDAP* ld, [In] [Optional] PWSTR dn, [In] [Optional] PWSTR passwd);
uint ldap_simple_bindA([In] [Out] LDAP* ld, [In] [Optional] PSTR dn, [In] [Optional] PSTR passwd);
uint ldap_simple_bind_sW([In] [Out] LDAP* ld, [In] [Optional] PWSTR dn, [In] [Optional] PWSTR passwd);
uint ldap_simple_bind_sA([In] [Out] LDAP* ld, [In] [Optional] PSTR dn, [In] [Optional] PSTR passwd);
uint ldap_bindW([In] [Out] LDAP* ld, [In] [Optional] PWSTR dn, [NotNullTerminated] [In] [Optional] PWSTR cred, [In] uint method);
uint ldap_bindA([In] [Out] LDAP* ld, [In] [Optional] PSTR dn, [NotNullTerminated] [In] [Optional] PSTR cred, [In] uint method);
uint ldap_bind_sW([In] [Out] LDAP* ld, [In] [Optional] PWSTR dn, [NotNullTerminated] [In] [Optional] PWSTR cred, [In] uint method);
uint ldap_bind_sA([In] [Out] LDAP* ld, [In] [Optional] PSTR dn, [NotNullTerminated] [In] [Optional] PSTR cred, [In] uint method);
int ldap_sasl_bindA([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistName, [Const] [In] PSTR AuthMechanism, [Const] [In] LDAP_BERVAL* cred, [In] [Out] LDAPControlA** ServerCtrls, [In] [Out] LDAPControlA** ClientCtrls, [In] [Out] int* MessageNumber);
int ldap_sasl_bindW([In] [Out] LDAP* ExternalHandle, [Const] [In] PWSTR DistName, [Const] [In] PWSTR AuthMechanism, [Const] [In] LDAP_BERVAL* cred, [In] [Out] LDAPControlW** ServerCtrls, [In] [Out] LDAPControlW** ClientCtrls, [In] [Out] int* MessageNumber);
int ldap_sasl_bind_sA([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistName, [Const] [In] PSTR AuthMechanism, [Const] [In] LDAP_BERVAL* cred, [In] [Out] LDAPControlA** ServerCtrls, [In] [Out] LDAPControlA** ClientCtrls, [In] [Out] LDAP_BERVAL** ServerData);
int ldap_sasl_bind_sW([In] [Out] LDAP* ExternalHandle, [Const] [In] PWSTR DistName, [Const] [In] PWSTR AuthMechanism, [Const] [In] LDAP_BERVAL* cred, [In] [Out] LDAPControlW** ServerCtrls, [In] [Out] LDAPControlW** ClientCtrls, [In] [Out] LDAP_BERVAL** ServerData);
uint ldap_simple_bind([In] [Out] LDAP* ld, [Const] [In] [Optional] PSTR dn, [Const] [In] [Optional] PSTR passwd);
uint ldap_simple_bind_s([In] [Out] LDAP* ld, [Const] [In] [Optional] PSTR dn, [Const] [In] [Optional] PSTR passwd);
uint ldap_bind([In] [Out] LDAP* ld, [Const] [In] [Optional] PSTR dn, [Const] [In] [Optional] PSTR cred, [In] uint method);
uint ldap_bind_s([In] [Out] LDAP* ld, [Const] [In] [Optional] PSTR dn, [Const] [In] [Optional] PSTR cred, [In] uint method);
uint ldap_searchW([In] [Out] LDAP* ld, [Const] [In] [Optional] PWSTR base, [In] uint scope, [Const] [In] PWSTR filter, [In] ushort** attrs, [In] uint attrsonly);
uint ldap_searchA([In] [Out] LDAP* ld, [Const] [In] [Optional] PSTR base, [In] uint scope, [Const] [In] PSTR filter, [In] sbyte** attrs, [In] uint attrsonly);
uint ldap_search_sW([In] [Out] LDAP* ld, [Const] [In] [Optional] PWSTR base, [In] uint scope, [Const] [In] PWSTR filter, [In] ushort** attrs, [In] uint attrsonly, [Out] [Optional] LDAPMessage** res);
uint ldap_search_sA([In] [Out] LDAP* ld, [Const] [In] [Optional] PSTR base, [In] uint scope, [Const] [In] PSTR filter, [In] sbyte** attrs, [In] uint attrsonly, [Out] [Optional] LDAPMessage** res);
uint ldap_search_stW([In] [Out] LDAP* ld, [Const] [In] [Optional] PWSTR base, [In] uint scope, [Const] [In] PWSTR filter, [In] ushort** attrs, [In] uint attrsonly, [In] [Out] LDAP_TIMEVAL* timeout, [Out] [Optional] LDAPMessage** res);
uint ldap_search_stA([In] [Out] LDAP* ld, [Const] [In] [Optional] PSTR base, [In] uint scope, [Const] [In] PSTR filter, [In] sbyte** attrs, [In] uint attrsonly, [In] [Out] LDAP_TIMEVAL* timeout, [Out] [Optional] LDAPMessage** res);
uint ldap_search_extW([In] [Out] LDAP* ld, [Const] [In] [Optional] PWSTR base, [In] uint scope, [Const] [In] PWSTR filter, [In] ushort** attrs, [In] uint attrsonly, [In] [Optional] LDAPControlW** ServerControls, [In] [Optional] LDAPControlW** ClientControls, [In] uint TimeLimit, [In] uint SizeLimit, [In] [Out] uint* MessageNumber);
uint ldap_search_extA([In] [Out] LDAP* ld, [Const] [In] [Optional] PSTR base, [In] uint scope, [Const] [In] PSTR filter, [In] sbyte** attrs, [In] uint attrsonly, [In] [Optional] LDAPControlA** ServerControls, [In] [Optional] LDAPControlA** ClientControls, [In] uint TimeLimit, [In] uint SizeLimit, [In] [Out] uint* MessageNumber);
uint ldap_search_ext_sW([In] [Out] LDAP* ld, [Const] [In] [Optional] PWSTR base, [In] uint scope, [Const] [In] PWSTR filter, [In] ushort** attrs, [In] uint attrsonly, [In] [Optional] LDAPControlW** ServerControls, [In] [Optional] LDAPControlW** ClientControls, [In] [Out] LDAP_TIMEVAL* timeout, [In] uint SizeLimit, [Out] [Optional] LDAPMessage** res);
uint ldap_search_ext_sA([In] [Out] LDAP* ld, [Const] [In] [Optional] PSTR base, [In] uint scope, [Const] [In] PSTR filter, [In] sbyte** attrs, [In] uint attrsonly, [In] [Optional] LDAPControlA** ServerControls, [In] [Optional] LDAPControlA** ClientControls, [In] [Out] LDAP_TIMEVAL* timeout, [In] uint SizeLimit, [Out] [Optional] LDAPMessage** res);
uint ldap_search([In] [Out] LDAP* ld, [In] [Optional] PSTR base, [In] uint scope, [In] PSTR filter, [In] sbyte** attrs, [In] uint attrsonly);
uint ldap_search_s([In] [Out] LDAP* ld, [In] [Optional] PSTR base, [In] uint scope, [In] PSTR filter, [In] sbyte** attrs, [In] uint attrsonly, [Out] [Optional] LDAPMessage** res);
uint ldap_search_st([In] [Out] LDAP* ld, [In] [Optional] PSTR base, [In] uint scope, [In] PSTR filter, [In] sbyte** attrs, [In] uint attrsonly, [In] [Out] LDAP_TIMEVAL* timeout, [Out] [Optional] LDAPMessage** res);
uint ldap_search_ext([In] [Out] LDAP* ld, [In] [Optional] PSTR base, [In] uint scope, [In] PSTR filter, [In] sbyte** attrs, [In] uint attrsonly, [In] [Optional] LDAPControlA** ServerControls, [In] [Optional] LDAPControlA** ClientControls, [In] uint TimeLimit, [In] uint SizeLimit, [In] [Out] uint* MessageNumber);
uint ldap_search_ext_s([In] [Out] LDAP* ld, [In] [Optional] PSTR base, [In] uint scope, [In] PSTR filter, [In] sbyte** attrs, [In] uint attrsonly, [In] [Optional] LDAPControlA** ServerControls, [In] [Optional] LDAPControlA** ClientControls, [In] [Out] LDAP_TIMEVAL* timeout, [In] uint SizeLimit, [Out] [Optional] LDAPMessage** res);
uint ldap_check_filterW([In] [Out] LDAP* ld, [In] PWSTR SearchFilter);
uint ldap_check_filterA([In] [Out] LDAP* ld, [In] PSTR SearchFilter);
uint ldap_modifyW([In] [Out] LDAP* ld, [In] PWSTR dn, [In] [Out] LDAPModW** mods);
uint ldap_modifyA([In] [Out] LDAP* ld, [In] PSTR dn, [In] [Out] LDAPModA** mods);
uint ldap_modify_sW([In] [Out] LDAP* ld, [In] PWSTR dn, [In] [Out] LDAPModW** mods);
uint ldap_modify_sA([In] [Out] LDAP* ld, [In] PSTR dn, [In] [Out] LDAPModA** mods);
uint ldap_modify_extW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [In] [Out] LDAPModW** mods, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_modify_extA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPModA** mods, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_modify_ext_sW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [In] [Out] LDAPModW** mods, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls);
uint ldap_modify_ext_sA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPModA** mods, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls);
uint ldap_modify([In] [Out] LDAP* ld, [In] PSTR dn, [In] [Out] LDAPModA** mods);
uint ldap_modify_s([In] [Out] LDAP* ld, [In] PSTR dn, [In] [Out] LDAPModA** mods);
uint ldap_modify_ext([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPModA** mods, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_modify_ext_s([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPModA** mods, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls);
uint ldap_modrdn2W([In] [Out] LDAP* ExternalHandle, [Const] [In] PWSTR DistinguishedName, [Const] [In] PWSTR NewDistinguishedName, [In] int DeleteOldRdn);
uint ldap_modrdn2A([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistinguishedName, [Const] [In] PSTR NewDistinguishedName, [In] int DeleteOldRdn);
uint ldap_modrdnW([In] [Out] LDAP* ExternalHandle, [Const] [In] PWSTR DistinguishedName, [Const] [In] PWSTR NewDistinguishedName);
uint ldap_modrdnA([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistinguishedName, [Const] [In] PSTR NewDistinguishedName);
uint ldap_modrdn2_sW([In] [Out] LDAP* ExternalHandle, [Const] [In] PWSTR DistinguishedName, [Const] [In] PWSTR NewDistinguishedName, [In] int DeleteOldRdn);
uint ldap_modrdn2_sA([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistinguishedName, [Const] [In] PSTR NewDistinguishedName, [In] int DeleteOldRdn);
uint ldap_modrdn_sW([In] [Out] LDAP* ExternalHandle, [Const] [In] PWSTR DistinguishedName, [Const] [In] PWSTR NewDistinguishedName);
uint ldap_modrdn_sA([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistinguishedName, [Const] [In] PSTR NewDistinguishedName);
uint ldap_modrdn2([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistinguishedName, [Const] [In] PSTR NewDistinguishedName, [In] int DeleteOldRdn);
uint ldap_modrdn([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistinguishedName, [Const] [In] PSTR NewDistinguishedName);
uint ldap_modrdn2_s([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistinguishedName, [Const] [In] PSTR NewDistinguishedName, [In] int DeleteOldRdn);
uint ldap_modrdn_s([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistinguishedName, [Const] [In] PSTR NewDistinguishedName);
uint ldap_rename_extW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [Const] [In] PWSTR NewRDN, [Const] [In] [Optional] PWSTR NewParent, [In] int DeleteOldRdn, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_rename_extA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR NewRDN, [Const] [In] [Optional] PSTR NewParent, [In] int DeleteOldRdn, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_rename_ext_sW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [Const] [In] PWSTR NewRDN, [Const] [In] [Optional] PWSTR NewParent, [In] int DeleteOldRdn, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls);
uint ldap_rename_ext_sA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR NewRDN, [Const] [In] [Optional] PSTR NewParent, [In] int DeleteOldRdn, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls);
uint ldap_rename_ext([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR NewRDN, [Const] [In] PSTR NewParent, [In] int DeleteOldRdn, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_rename_ext_s([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR NewRDN, [Const] [In] PSTR NewParent, [In] int DeleteOldRdn, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls);
uint ldap_addW([In] [Out] LDAP* ld, [In] PWSTR dn, [In] [Out] LDAPModW** attrs);
uint ldap_addA([In] [Out] LDAP* ld, [In] PSTR dn, [In] [Out] LDAPModA** attrs);
uint ldap_add_sW([In] [Out] LDAP* ld, [In] PWSTR dn, [In] [Out] LDAPModW** attrs);
uint ldap_add_sA([In] [Out] LDAP* ld, [In] PSTR dn, [In] [Out] LDAPModA** attrs);
uint ldap_add_extW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [In] [Out] LDAPModW** attrs, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_add_extA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPModA** attrs, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_add_ext_sW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [In] [Out] LDAPModW** attrs, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls);
uint ldap_add_ext_sA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPModA** attrs, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls);
uint ldap_add([In] [Out] LDAP* ld, [In] PSTR dn, [In] [Out] LDAPModA** attrs);
uint ldap_add_s([In] [Out] LDAP* ld, [In] PSTR dn, [In] [Out] LDAPModA** attrs);
uint ldap_add_ext([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPModA** attrs, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_add_ext_s([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPModA** attrs, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls);
uint ldap_compareW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [Const] [In] PWSTR attr, [In] PWSTR value);
uint ldap_compareA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR attr, [In] PSTR value);
uint ldap_compare_sW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [Const] [In] PWSTR attr, [In] PWSTR value);
uint ldap_compare_sA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR attr, [In] PSTR value);
uint ldap_compare([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR attr, [In] PSTR value);
uint ldap_compare_s([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR attr, [In] PSTR value);
uint ldap_compare_extW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [Const] [In] PWSTR Attr, [Const] [In] [Optional] PWSTR Value, [In] [Optional] LDAP_BERVAL* Data, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_compare_extA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR Attr, [Const] [In] [Optional] PSTR Value, [In] [Optional] LDAP_BERVAL* Data, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_compare_ext_sW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [Const] [In] PWSTR Attr, [Const] [In] [Optional] PWSTR Value, [In] [Optional] LDAP_BERVAL* Data, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls);
uint ldap_compare_ext_sA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR Attr, [Const] [In] [Optional] PSTR Value, [In] [Optional] LDAP_BERVAL* Data, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls);
uint ldap_compare_ext([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR Attr, [Const] [In] PSTR Value, [In] [Out] LDAP_BERVAL* Data, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_compare_ext_s([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [Const] [In] PSTR Attr, [Const] [In] PSTR Value, [In] [Out] LDAP_BERVAL* Data, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls);
uint ldap_deleteW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn);
uint ldap_deleteA([In] [Out] LDAP* ld, [Const] [In] PSTR dn);
uint ldap_delete_sW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn);
uint ldap_delete_sA([In] [Out] LDAP* ld, [Const] [In] PSTR dn);
uint ldap_delete_extW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_delete_extA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_delete_ext_sW([In] [Out] LDAP* ld, [Const] [In] PWSTR dn, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls);
uint ldap_delete_ext_sA([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls);
uint ldap_delete([In] [Out] LDAP* ld, [In] PSTR dn);
uint ldap_delete_s([In] [Out] LDAP* ld, [In] PSTR dn);
uint ldap_delete_ext([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_delete_ext_s([In] [Out] LDAP* ld, [Const] [In] PSTR dn, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls);
uint ldap_abandon([In] [Out] LDAP* ld, [In] uint msgid);
uint ldap_result([In] [Out] LDAP* ld, [In] uint msgid, [In] uint all, [In] [Optional] LDAP_TIMEVAL* timeout, [Out] [Optional] LDAPMessage** res);
uint ldap_msgfree([In] [Out] LDAPMessage* res);
uint ldap_result2error([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* res, [In] uint freeit);
uint ldap_parse_resultW([In] [Out] LDAP* Connection, [In] [Out] LDAPMessage* ResultMessage, [In] [Out] uint* ReturnCode, [Out] [Optional] PWSTR* MatchedDNs, [Out] [Optional] PWSTR* ErrorMessage, [Out] [Optional] ushort*** Referrals, [In] [Out] LDAPControlW*** ServerControls, [In] BOOLEAN Freeit);
uint ldap_parse_resultA([In] [Out] LDAP* Connection, [In] [Out] LDAPMessage* ResultMessage, [In] [Out] uint* ReturnCode, [Out] [Optional] PSTR* MatchedDNs, [Out] [Optional] PSTR* ErrorMessage, [Out] [Optional] sbyte*** Referrals, [In] [Out] LDAPControlA*** ServerControls, [In] BOOLEAN Freeit);
uint ldap_parse_extended_resultA([In] [Out] LDAP* Connection, [In] [Out] LDAPMessage* ResultMessage, [Out] [Optional] PSTR* ResultOID, [In] [Out] LDAP_BERVAL** ResultData, [In] BOOLEAN Freeit);
uint ldap_parse_extended_resultW([In] [Out] LDAP* Connection, [In] [Out] LDAPMessage* ResultMessage, [Out] [Optional] PWSTR* ResultOID, [In] [Out] LDAP_BERVAL** ResultData, [In] BOOLEAN Freeit);
uint ldap_controls_freeA([In] [Out] LDAPControlA** Controls);
uint ldap_control_freeA([In] [Out] LDAPControlA* Controls);
uint ldap_controls_freeW([In] [Out] LDAPControlW** Control);
uint ldap_control_freeW([In] [Out] LDAPControlW* Control);
uint ldap_free_controlsW([In] [Out] LDAPControlW** Controls);
uint ldap_free_controlsA([In] [Out] LDAPControlA** Controls);
uint ldap_parse_result([In] [Out] LDAP* Connection, [In] [Out] LDAPMessage* ResultMessage, [In] [Out] uint* ReturnCode, [Out] [Optional] PSTR* MatchedDNs, [Out] [Optional] PSTR* ErrorMessage, [Out] [Optional] PSTR** Referrals, [In] [Out] LDAPControlA*** ServerControls, [In] BOOLEAN Freeit);
uint ldap_controls_free([In] [Out] LDAPControlA** Controls);
uint ldap_control_free([In] [Out] LDAPControlA* Control);
uint ldap_free_controls([In] [Out] LDAPControlA** Controls);
PWSTR ldap_err2stringW([In] uint err);
PSTR ldap_err2stringA([In] uint err);
PSTR ldap_err2string([In] uint err);
void ldap_perror([In] [Out] LDAP* ld, [Const] [In] PSTR msg);
LDAPMessage* ldap_first_entry([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* res);
LDAPMessage* ldap_next_entry([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry);
uint ldap_count_entries([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* res);
PWSTR ldap_first_attributeW([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry, [In] [Out] BerElement** ptr);
PSTR ldap_first_attributeA([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry, [In] [Out] BerElement** ptr);
PSTR ldap_first_attribute([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry, [In] [Out] BerElement** ptr);
PWSTR ldap_next_attributeW([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry, [In] [Out] BerElement* ptr);
PSTR ldap_next_attributeA([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry, [In] [Out] BerElement* ptr);
PSTR ldap_next_attribute([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry, [In] [Out] BerElement* ptr);
PWSTR* ldap_get_valuesW([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry, [Const] [In] PWSTR attr);
PSTR* ldap_get_valuesA([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry, [Const] [In] PSTR attr);
PSTR* ldap_get_values([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry, [Const] [In] PSTR attr);
LDAP_BERVAL** ldap_get_values_lenW([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPMessage* Message, [Const] [In] PWSTR attr);
LDAP_BERVAL** ldap_get_values_lenA([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPMessage* Message, [Const] [In] PSTR attr);
LDAP_BERVAL** ldap_get_values_len([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPMessage* Message, [Const] [In] PSTR attr);
uint ldap_count_valuesW([In] [Optional] PWSTR* vals);
uint ldap_count_valuesA([In] [Optional] PSTR* vals);
uint ldap_count_values([In] [Optional] PSTR* vals);
uint ldap_count_values_len([In] [Out] LDAP_BERVAL** vals);
uint ldap_value_freeW([In] [Optional] PWSTR* vals);
uint ldap_value_freeA([In] [Optional] PSTR* vals);
uint ldap_value_free([In] [Optional] PSTR* vals);
uint ldap_value_free_len([In] [Out] LDAP_BERVAL** vals);
PWSTR ldap_get_dnW([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry);
PSTR ldap_get_dnA([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry);
PSTR ldap_get_dn([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry);
PWSTR* ldap_explode_dnW([Const] [In] PWSTR dn, [In] uint notypes);
PSTR* ldap_explode_dnA([Const] [In] PSTR dn, [In] uint notypes);
PSTR* ldap_explode_dn([Const] [In] PSTR dn, [In] uint notypes);
PWSTR ldap_dn2ufnW([Const] [In] PWSTR dn);
PSTR ldap_dn2ufnA([Const] [In] PSTR dn);
PSTR ldap_dn2ufn([Const] [In] PSTR dn);
void ldap_memfreeW([NotNullTerminated] [In] PWSTR Block);
void ldap_memfreeA([NotNullTerminated] [In] PSTR Block);
void ber_bvfree([In] [Out] LDAP_BERVAL* bv);
void ldap_memfree([NotNullTerminated] [In] PSTR Block);
uint ldap_ufn2dnW([Const] [In] PWSTR ufn, [Out] PWSTR* pDn);
uint ldap_ufn2dnA([Const] [In] PSTR ufn, [Out] PSTR* pDn);
uint ldap_ufn2dn([Const] [In] PSTR ufn, [Out] PSTR* pDn);
uint ldap_startup([In] [Out] LDAP_VERSION_INFO* version, [In] [Out] HANDLE* Instance);
uint ldap_cleanup([In] HANDLE hInstance);
uint ldap_escape_filter_elementW([NotNullTerminated] [MemorySize(BytesParamIndex = 1)] [In] PSTR sourceFilterElement, [In] uint sourceLength, [NotNullTerminated] [MemorySize(BytesParamIndex = 3)] [Out] [Optional] PWSTR destFilterElement, [In] uint destLength);
uint ldap_escape_filter_elementA([NotNullTerminated] [MemorySize(BytesParamIndex = 1)] [In] PSTR sourceFilterElement, [In] uint sourceLength, [NotNullTerminated] [MemorySize(BytesParamIndex = 3)] [Out] [Optional] PSTR destFilterElement, [In] uint destLength);
uint ldap_escape_filter_element([NotNullTerminated] [MemorySize(BytesParamIndex = 1)] [In] PSTR sourceFilterElement, [In] uint sourceLength, [NotNullTerminated] [MemorySize(BytesParamIndex = 3)] [Out] [Optional] PSTR destFilterElement, [In] uint destLength);
uint ldap_set_dbg_flags([In] uint NewFlags);
void ldap_set_dbg_routine([In] DBGPRINT DebugPrintRoutine);
int LdapUTF8ToUnicode([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] PSTR lpSrcStr, [In] int cchSrc, [NativeArrayInfo(CountParamIndex = 3)] [Out] PWSTR lpDestStr, [In] int cchDest);
int LdapUnicodeToUTF8([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] PWSTR lpSrcStr, [In] int cchSrc, [NativeArrayInfo(CountParamIndex = 3)] [Out] PSTR lpDestStr, [In] int cchDest);
uint ldap_create_sort_controlA([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPSortKeyA** SortKeys, [In] byte IsCritical, [In] [Out] LDAPControlA** Control);
uint ldap_create_sort_controlW([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPSortKeyW** SortKeys, [In] byte IsCritical, [In] [Out] LDAPControlW** Control);
uint ldap_parse_sort_controlA([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPControlA** Control, [In] [Out] uint* Result, [Out] [Optional] PSTR* Attribute);
uint ldap_parse_sort_controlW([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPControlW** Control, [In] [Out] uint* Result, [Out] [Optional] PWSTR* Attribute);
uint ldap_create_sort_control([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPSortKeyA** SortKeys, [In] byte IsCritical, [In] [Out] LDAPControlA** Control);
uint ldap_parse_sort_control([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPControlA** Control, [In] [Out] uint* Result, [In] [Out] PSTR* Attribute);
uint ldap_encode_sort_controlW([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPSortKeyW** SortKeys, [In] [Out] LDAPControlW* Control, [In] BOOLEAN Criticality);
uint ldap_encode_sort_controlA([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPSortKeyA** SortKeys, [In] [Out] LDAPControlA* Control, [In] BOOLEAN Criticality);
uint ldap_create_page_controlW([In] [Out] LDAP* ExternalHandle, [In] uint PageSize, [In] [Out] LDAP_BERVAL* Cookie, [In] byte IsCritical, [In] [Out] LDAPControlW** Control);
uint ldap_create_page_controlA([In] [Out] LDAP* ExternalHandle, [In] uint PageSize, [In] [Out] LDAP_BERVAL* Cookie, [In] byte IsCritical, [In] [Out] LDAPControlA** Control);
uint ldap_parse_page_controlW([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPControlW** ServerControls, [In] [Out] uint* TotalCount, [In] [Out] LDAP_BERVAL** Cookie);
uint ldap_parse_page_controlA([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPControlA** ServerControls, [In] [Out] uint* TotalCount, [In] [Out] LDAP_BERVAL** Cookie);
uint ldap_create_page_control([In] [Out] LDAP* ExternalHandle, [In] uint PageSize, [In] [Out] LDAP_BERVAL* Cookie, [In] byte IsCritical, [In] [Out] LDAPControlA** Control);
uint ldap_parse_page_control([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPControlA** ServerControls, [In] [Out] uint* TotalCount, [In] [Out] LDAP_BERVAL** Cookie);
LDAPSearch* ldap_search_init_pageW([In] [Out] LDAP* ExternalHandle, [Const] [In] PWSTR DistinguishedName, [In] uint ScopeOfSearch, [Const] [In] PWSTR SearchFilter, [In] ushort** AttributeList, [In] uint AttributesOnly, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls, [In] uint PageTimeLimit, [In] uint TotalSizeLimit, [In] [Out] LDAPSortKeyW** SortKeys);
LDAPSearch* ldap_search_init_pageA([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistinguishedName, [In] uint ScopeOfSearch, [Const] [In] PSTR SearchFilter, [In] sbyte** AttributeList, [In] uint AttributesOnly, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] uint PageTimeLimit, [In] uint TotalSizeLimit, [In] [Out] LDAPSortKeyA** SortKeys);
LDAPSearch* ldap_search_init_page([In] [Out] LDAP* ExternalHandle, [Const] [In] PSTR DistinguishedName, [In] uint ScopeOfSearch, [Const] [In] PSTR SearchFilter, [In] [Out] sbyte** AttributeList, [In] uint AttributesOnly, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] uint PageTimeLimit, [In] uint TotalSizeLimit, [In] [Out] LDAPSortKeyA** SortKeys);
uint ldap_get_next_page([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPSearch* SearchHandle, [In] uint PageSize, [In] [Out] uint* MessageNumber);
uint ldap_get_next_page_s([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPSearch* SearchHandle, [In] [Out] LDAP_TIMEVAL* timeout, [In] uint PageSize, [In] [Out] uint* TotalCount, [In] [Out] LDAPMessage** Results);
uint ldap_get_paged_count([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPSearch* SearchBlock, [In] [Out] uint* TotalCount, [In] [Out] LDAPMessage* Results);
uint ldap_search_abandon_page([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPSearch* SearchBlock);
int ldap_create_vlv_controlW([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPVLVInfo* VlvInfo, [In] byte IsCritical, [In] [Out] LDAPControlW** Control);
int ldap_create_vlv_controlA([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPVLVInfo* VlvInfo, [In] byte IsCritical, [In] [Out] LDAPControlA** Control);
int ldap_parse_vlv_controlW([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPControlW** Control, [In] [Out] uint* TargetPos, [In] [Out] uint* ListCount, [In] [Out] LDAP_BERVAL** Context, [In] [Out] int* ErrCode);
int ldap_parse_vlv_controlA([In] [Out] LDAP* ExternalHandle, [In] [Out] LDAPControlA** Control, [In] [Out] uint* TargetPos, [In] [Out] uint* ListCount, [In] [Out] LDAP_BERVAL** Context, [In] [Out] int* ErrCode);
uint ldap_start_tls_sW([In] [Out] LDAP* ExternalHandle, [In] [Out] uint* ServerReturnValue, [In] [Out] LDAPMessage** result, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls);
uint ldap_start_tls_sA([In] [Out] LDAP* ExternalHandle, [In] [Out] uint* ServerReturnValue, [In] [Out] LDAPMessage** result, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls);
BOOLEAN ldap_stop_tls_s([In] [Out] LDAP* ExternalHandle);
LDAPMessage* ldap_first_reference([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* res);
LDAPMessage* ldap_next_reference([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* entry);
uint ldap_count_references([In] [Out] LDAP* ld, [In] [Out] LDAPMessage* res);
uint ldap_parse_referenceW([In] [Out] LDAP* Connection, [In] [Out] LDAPMessage* ResultMessage, [Out] PWSTR** Referrals);
uint ldap_parse_referenceA([In] [Out] LDAP* Connection, [In] [Out] LDAPMessage* ResultMessage, [Out] PSTR** Referrals);
uint ldap_parse_reference([In] [Out] LDAP* Connection, [In] [Out] LDAPMessage* ResultMessage, [In] [Out] PSTR** Referrals);
uint ldap_extended_operationW([In] [Out] LDAP* ld, [Const] [In] PWSTR Oid, [In] [Out] LDAP_BERVAL* Data, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_extended_operationA([In] [Out] LDAP* ld, [Const] [In] PSTR Oid, [In] [Out] LDAP_BERVAL* Data, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_extended_operation_sA([In] [Out] LDAP* ExternalHandle, [In] PSTR Oid, [In] [Out] LDAP_BERVAL* Data, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [Out] PSTR* ReturnedOid, [In] [Out] LDAP_BERVAL** ReturnedData);
uint ldap_extended_operation_sW([In] [Out] LDAP* ExternalHandle, [In] PWSTR Oid, [In] [Out] LDAP_BERVAL* Data, [In] [Out] LDAPControlW** ServerControls, [In] [Out] LDAPControlW** ClientControls, [Out] PWSTR* ReturnedOid, [In] [Out] LDAP_BERVAL** ReturnedData);
uint ldap_extended_operation([In] [Out] LDAP* ld, [Const] [In] PSTR Oid, [In] [Out] LDAP_BERVAL* Data, [In] [Out] LDAPControlA** ServerControls, [In] [Out] LDAPControlA** ClientControls, [In] [Out] uint* MessageNumber);
uint ldap_close_extended_op([In] [Out] LDAP* ld, [In] uint MessageNumber);
uint LdapGetLastError();
WIN32_ERROR LdapMapErrorToWin32([In] LDAP_RETCODE LdapError);
LDAP* ldap_conn_from_msg([In] [Out] LDAP* PrimaryConn, [In] [Out] LDAPMessage* res);
BerElement* ber_init([In] [Out] LDAP_BERVAL* pBerVal);
void ber_free([In] [Out] BerElement* pBerElement, [In] int fbuf);
void ber_bvecfree([In] [Out] LDAP_BERVAL** pBerVal);
LDAP_BERVAL* ber_bvdup([In] [Out] LDAP_BERVAL* pBerVal);
BerElement* ber_alloc_t([In] int options);
uint ber_skip_tag([In] [Out] BerElement* pBerElement, [In] [Out] uint* pLen);
uint ber_peek_tag([In] [Out] BerElement* pBerElement, [In] [Out] uint* pLen);
uint ber_first_element([In] [Out] BerElement* pBerElement, [In] [Out] uint* pLen, [Out] CHAR** ppOpaque);
uint ber_next_element([In] [Out] BerElement* pBerElement, [In] [Out] uint* pLen, [In] PSTR opaque);
int ber_flatten([In] [Out] BerElement* pBerElement, [In] [Out] LDAP_BERVAL** pBerVal);
int ber_printf([In] [Out] BerElement* pBerElement, [In] PSTR fmt, ...);
uint ber_scanf([In] [Out] BerElement* pBerElement, [In] PSTR fmt, ...);
