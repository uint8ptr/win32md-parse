uint DhcpAddFilterV4([Const] [In] [Optional] PWSTR ServerIpAddress, [In] DHCP_FILTER_ADD_INFO* AddFilterInfo, [In] BOOL ForceFlag);
uint DhcpDeleteFilterV4([Const] [In] [Optional] PWSTR ServerIpAddress, [In] DHCP_ADDR_PATTERN* DeleteFilterInfo);
uint DhcpSetFilterV4([Const] [In] [Optional] PWSTR ServerIpAddress, [In] DHCP_FILTER_GLOBAL_INFO* GlobalFilterInfo);
uint DhcpGetFilterV4([Const] [In] [Optional] PWSTR ServerIpAddress, [Out] DHCP_FILTER_GLOBAL_INFO* GlobalFilterInfo);
uint DhcpEnumFilterV4([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] DHCP_ADDR_PATTERN* ResumeHandle, [In] uint PreferredMaximum, [In] DHCP_FILTER_LIST_TYPE ListType, [Out] DHCP_FILTER_ENUM_INFO** EnumFilterInfo, [Out] uint* ElementsRead, [Out] uint* ElementsTotal);
uint DhcpCreateSubnet([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [Const] [In] DHCP_SUBNET_INFO* SubnetInfo);
uint DhcpSetSubnetInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [Const] [In] DHCP_SUBNET_INFO* SubnetInfo);
uint DhcpGetSubnetInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] [Out] DHCP_SUBNET_INFO** SubnetInfo);
uint DhcpEnumSubnets([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [Out] DHCP_IP_ARRAY** EnumInfo, [Out] uint* ElementsRead, [Out] uint* ElementsTotal);
uint DhcpAddSubnetElement([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [Const] [In] DHCP_SUBNET_ELEMENT_DATA* AddElementInfo);
uint DhcpEnumSubnetElements([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] DHCP_SUBNET_ELEMENT_TYPE EnumElementType, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_SUBNET_ELEMENT_INFO_ARRAY** EnumElementInfo, [In] [Out] uint* ElementsRead, [In] [Out] uint* ElementsTotal);
uint DhcpRemoveSubnetElement([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [Const] [In] DHCP_SUBNET_ELEMENT_DATA* RemoveElementInfo, [In] DHCP_FORCE_FLAG ForceFlag);
uint DhcpDeleteSubnet([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] DHCP_FORCE_FLAG ForceFlag);
uint DhcpCreateOption([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint OptionID, [Const] [In] DHCP_OPTION* OptionInfo);
uint DhcpSetOptionInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint OptionID, [Const] [In] DHCP_OPTION* OptionInfo);
uint DhcpGetOptionInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint OptionID, [In] [Out] DHCP_OPTION** OptionInfo);
uint DhcpEnumOptions([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_OPTION_ARRAY** Options, [In] [Out] uint* OptionsRead, [In] [Out] uint* OptionsTotal);
uint DhcpRemoveOption([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint OptionID);
uint DhcpSetOptionValue([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint OptionID, [Const] [In] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [Const] [In] DHCP_OPTION_DATA* OptionValue);
uint DhcpSetOptionValues([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [Const] [In] DHCP_OPTION_VALUE_ARRAY* OptionValues);
uint DhcpGetOptionValue([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint OptionID, [Const] [In] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [In] [Out] DHCP_OPTION_VALUE** OptionValue);
uint DhcpEnumOptionValues([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_OPTION_VALUE_ARRAY** OptionValues, [In] [Out] uint* OptionsRead, [In] [Out] uint* OptionsTotal);
uint DhcpRemoveOptionValue([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint OptionID, [Const] [In] DHCP_OPTION_SCOPE_INFO* ScopeInfo);
uint DhcpCreateClientInfoVQ([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_CLIENT_INFO_VQ* ClientInfo);
uint DhcpSetClientInfoVQ([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_CLIENT_INFO_VQ* ClientInfo);
uint DhcpGetClientInfoVQ([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_SEARCH_INFO* SearchInfo, [In] [Out] DHCP_CLIENT_INFO_VQ** ClientInfo);
uint DhcpEnumSubnetClientsVQ([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_CLIENT_INFO_ARRAY_VQ** ClientInfo, [In] [Out] uint* ClientsRead, [In] [Out] uint* ClientsTotal);
uint DhcpEnumSubnetClientsFilterStatusInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_CLIENT_FILTER_STATUS_INFO_ARRAY** ClientInfo, [In] [Out] uint* ClientsRead, [In] [Out] uint* ClientsTotal);
uint DhcpCreateClientInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_CLIENT_INFO* ClientInfo);
uint DhcpSetClientInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_CLIENT_INFO* ClientInfo);
uint DhcpGetClientInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_SEARCH_INFO* SearchInfo, [In] [Out] DHCP_CLIENT_INFO** ClientInfo);
uint DhcpDeleteClientInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_SEARCH_INFO* ClientInfo);
uint DhcpEnumSubnetClients([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_CLIENT_INFO_ARRAY** ClientInfo, [In] [Out] uint* ClientsRead, [In] [Out] uint* ClientsTotal);
uint DhcpGetClientOptions([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint ClientIpAddress, [In] uint ClientSubnetMask, [In] [Out] DHCP_OPTION_LIST** ClientOptions);
uint DhcpGetMibInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] DHCP_MIB_INFO** MibInfo);
uint DhcpServerSetConfig([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint FieldsToSet, [In] [Out] DHCP_SERVER_CONFIG_INFO* ConfigInfo);
uint DhcpServerGetConfig([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] DHCP_SERVER_CONFIG_INFO** ConfigInfo);
uint DhcpScanDatabase([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] uint FixFlag, [In] [Out] DHCP_SCAN_LIST** ScanList);
void DhcpRpcFreeMemory([In] [Out] void* BufferPointer);
uint DhcpGetVersion([In] [Optional] PWSTR ServerIpAddress, [In] [Out] uint* MajorVersion, [In] [Out] uint* MinorVersion);
uint DhcpAddSubnetElementV4([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [Const] [In] DHCP_SUBNET_ELEMENT_DATA_V4* AddElementInfo);
uint DhcpEnumSubnetElementsV4([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] DHCP_SUBNET_ELEMENT_TYPE EnumElementType, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_SUBNET_ELEMENT_INFO_ARRAY_V4** EnumElementInfo, [In] [Out] uint* ElementsRead, [In] [Out] uint* ElementsTotal);
uint DhcpRemoveSubnetElementV4([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [Const] [In] DHCP_SUBNET_ELEMENT_DATA_V4* RemoveElementInfo, [In] DHCP_FORCE_FLAG ForceFlag);
uint DhcpCreateClientInfoV4([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_CLIENT_INFO_V4* ClientInfo);
uint DhcpSetClientInfoV4([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_CLIENT_INFO_V4* ClientInfo);
uint DhcpGetClientInfoV4([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_SEARCH_INFO* SearchInfo, [In] [Out] DHCP_CLIENT_INFO_V4** ClientInfo);
uint DhcpEnumSubnetClientsV4([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_CLIENT_INFO_ARRAY_V4** ClientInfo, [In] [Out] uint* ClientsRead, [In] [Out] uint* ClientsTotal);
uint DhcpServerSetConfigV4([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint FieldsToSet, [In] [Out] DHCP_SERVER_CONFIG_INFO_V4* ConfigInfo);
uint DhcpServerGetConfigV4([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] DHCP_SERVER_CONFIG_INFO_V4** ConfigInfo);
uint DhcpSetSuperScopeV4([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] uint SubnetAddress, [Const] [In] [Optional] PWSTR SuperScopeName, [Const] [In] BOOL ChangeExisting);
uint DhcpDeleteSuperScopeV4([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] PWSTR SuperScopeName);
uint DhcpGetSuperScopeInfoV4([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] DHCP_SUPER_SCOPE_TABLE** SuperScopeTable);
uint DhcpEnumSubnetClientsV5([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_CLIENT_INFO_ARRAY_V5** ClientInfo, [In] [Out] uint* ClientsRead, [In] [Out] uint* ClientsTotal);
uint DhcpCreateOptionV5([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionId, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION* OptionInfo);
uint DhcpSetOptionInfoV5([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION* OptionInfo);
uint DhcpGetOptionInfoV5([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION** OptionInfo);
uint DhcpEnumOptionsV5([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_OPTION_ARRAY** Options, [In] [Out] uint* OptionsRead, [In] [Out] uint* OptionsTotal);
uint DhcpRemoveOptionV5([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName);
uint DhcpSetOptionValueV5([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionId, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [In] [Out] DHCP_OPTION_DATA* OptionValue);
uint DhcpSetOptionValuesV5([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [In] [Out] DHCP_OPTION_VALUE_ARRAY* OptionValues);
uint DhcpGetOptionValueV5([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [In] [Out] DHCP_OPTION_VALUE** OptionValue);
uint DhcpGetOptionValueV6([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO6* ScopeInfo, [In] [Out] DHCP_OPTION_VALUE** OptionValue);
uint DhcpEnumOptionValuesV5([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_OPTION_VALUE_ARRAY** OptionValues, [In] [Out] uint* OptionsRead, [In] [Out] uint* OptionsTotal);
uint DhcpRemoveOptionValueV5([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO* ScopeInfo);
uint DhcpCreateClass([In] [Optional] PWSTR ServerIpAddress, [In] uint ReservedMustBeZero, [In] [Out] DHCP_CLASS_INFO* ClassInfo);
uint DhcpModifyClass([In] [Optional] PWSTR ServerIpAddress, [In] uint ReservedMustBeZero, [In] [Out] DHCP_CLASS_INFO* ClassInfo);
uint DhcpDeleteClass([In] [Optional] PWSTR ServerIpAddress, [In] uint ReservedMustBeZero, [In] PWSTR ClassName);
uint DhcpGetClassInfo([In] [Optional] PWSTR ServerIpAddress, [In] uint ReservedMustBeZero, [In] [Out] DHCP_CLASS_INFO* PartialClassInfo, [In] [Out] DHCP_CLASS_INFO** FilledClassInfo);
uint DhcpEnumClasses([In] [Optional] PWSTR ServerIpAddress, [In] uint ReservedMustBeZero, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_CLASS_INFO_ARRAY** ClassInfoArray, [In] [Out] uint* nRead, [In] [Out] uint* nTotal);
uint DhcpGetAllOptions([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Out] DHCP_ALL_OPTIONS** OptionStruct);
uint DhcpGetAllOptionsV6([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Out] DHCP_ALL_OPTIONS** OptionStruct);
uint DhcpGetAllOptionValues([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Out] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [In] [Out] DHCP_ALL_OPTION_VALUES** Values);
uint DhcpGetAllOptionValuesV6([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Out] DHCP_OPTION_SCOPE_INFO6* ScopeInfo, [In] [Out] DHCP_ALL_OPTION_VALUES** Values);
uint DhcpEnumServers([In] uint Flags, [In] [Out] void* IdInfo, [In] [Out] DHCPDS_SERVERS** Servers, [In] [Out] void* CallbackFn, [In] [Out] void* CallbackData);
uint DhcpAddServer([In] uint Flags, [In] [Out] void* IdInfo, [In] [Out] DHCPDS_SERVER* NewServer, [In] [Out] void* CallbackFn, [In] [Out] void* CallbackData);
uint DhcpDeleteServer([In] uint Flags, [In] [Out] void* IdInfo, [In] [Out] DHCPDS_SERVER* NewServer, [In] [Out] void* CallbackFn, [In] [Out] void* CallbackData);
uint DhcpGetServerBindingInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Out] DHCP_BIND_ELEMENT_ARRAY** BindElementsInfo);
uint DhcpSetServerBindingInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Out] DHCP_BIND_ELEMENT_ARRAY* BindElementInfo);
uint DhcpAddSubnetElementV5([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [Const] [In] DHCP_SUBNET_ELEMENT_DATA_V5* AddElementInfo);
uint DhcpEnumSubnetElementsV5([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] DHCP_SUBNET_ELEMENT_TYPE EnumElementType, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_SUBNET_ELEMENT_INFO_ARRAY_V5** EnumElementInfo, [In] [Out] uint* ElementsRead, [In] [Out] uint* ElementsTotal);
uint DhcpRemoveSubnetElementV5([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [Const] [In] DHCP_SUBNET_ELEMENT_DATA_V5* RemoveElementInfo, [In] DHCP_FORCE_FLAG ForceFlag);
uint DhcpV4EnumSubnetReservations([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [Out] DHCP_RESERVATION_INFO_ARRAY** EnumElementInfo, [Out] uint* ElementsRead, [Out] uint* ElementsTotal);
uint DhcpCreateOptionV6([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionId, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION* OptionInfo);
uint DhcpRemoveOptionV6([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName);
uint DhcpEnumOptionsV6([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_OPTION_ARRAY** Options, [In] [Out] uint* OptionsRead, [In] [Out] uint* OptionsTotal);
uint DhcpRemoveOptionValueV6([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO6* ScopeInfo);
uint DhcpGetOptionInfoV6([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION** OptionInfo);
uint DhcpSetOptionInfoV6([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION* OptionInfo);
uint DhcpSetOptionValueV6([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionId, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO6* ScopeInfo, [In] [Out] DHCP_OPTION_DATA* OptionValue);
uint DhcpGetSubnetInfoVQ([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [Out] DHCP_SUBNET_INFO_VQ** SubnetInfo);
uint DhcpCreateSubnetVQ([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [Const] [In] DHCP_SUBNET_INFO_VQ* SubnetInfo);
uint DhcpSetSubnetInfoVQ([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [Const] [In] DHCP_SUBNET_INFO_VQ* SubnetInfo);
uint DhcpEnumOptionValuesV6([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Optional] PWSTR ClassName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO6* ScopeInfo, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_OPTION_VALUE_ARRAY** OptionValues, [In] [Out] uint* OptionsRead, [In] [Out] uint* OptionsTotal);
uint DhcpDsInit();
void DhcpDsCleanup();
uint DhcpSetThreadOptions([In] uint Flags, [In] [Out] void* Reserved);
uint DhcpGetThreadOptions([In] [Out] uint* pFlags, [In] [Out] void* Reserved);
uint DhcpServerQueryAttribute([In] [Optional] PWSTR ServerIpAddr, [In] uint dwReserved, [In] uint DhcpAttribId, [In] [Out] DHCP_ATTRIB** pDhcpAttrib);
uint DhcpServerQueryAttributes([In] [Optional] PWSTR ServerIpAddr, [In] uint dwReserved, [In] uint dwAttribCount, [In] [Out] uint* pDhcpAttribs, [In] [Out] DHCP_ATTRIB_ARRAY** pDhcpAttribArr);
uint DhcpServerRedoAuthorization([In] [Optional] PWSTR ServerIpAddr, [In] uint dwReserved);
uint DhcpAuditLogSetParams([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Optional] PWSTR AuditLogDir, [In] uint DiskCheckInterval, [In] uint MaxLogFilesSize, [In] uint MinSpaceOnDisk);
uint DhcpAuditLogGetParams([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [Out] [Optional] PWSTR* AuditLogDir, [In] [Out] uint* DiskCheckInterval, [In] [Out] uint* MaxLogFilesSize, [In] [Out] uint* MinSpaceOnDisk);
uint DhcpServerQueryDnsRegCredentials([In] [Optional] PWSTR ServerIpAddress, [In] uint UnameSize, [NativeArrayInfo(CountParamIndex = 1)] [Out] PWSTR Uname, [In] uint DomainSize, [NativeArrayInfo(CountParamIndex = 3)] [Out] PWSTR Domain);
uint DhcpServerSetDnsRegCredentials([In] [Optional] PWSTR ServerIpAddress, [In] [Optional] PWSTR Uname, [In] [Optional] PWSTR Domain, [In] [Optional] PWSTR Passwd);
uint DhcpServerSetDnsRegCredentialsV5([In] [Optional] PWSTR ServerIpAddress, [In] [Optional] PWSTR Uname, [In] [Optional] PWSTR Domain, [In] [Optional] PWSTR Passwd);
uint DhcpServerBackupDatabase([In] [Optional] PWSTR ServerIpAddress, [In] PWSTR Path);
uint DhcpServerRestoreDatabase([In] [Optional] PWSTR ServerIpAddress, [In] PWSTR Path);
uint DhcpServerSetConfigVQ([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint FieldsToSet, [In] [Out] DHCP_SERVER_CONFIG_INFO_VQ* ConfigInfo);
uint DhcpServerGetConfigVQ([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] DHCP_SERVER_CONFIG_INFO_VQ** ConfigInfo);
uint DhcpGetServerSpecificStrings([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] DHCP_SERVER_SPECIFIC_STRINGS** ServerSpecificStrings);
void DhcpServerAuditlogParamsFree([In] [Out] DHCP_SERVER_CONFIG_INFO_VQ* ConfigInfo);
uint DhcpCreateSubnetV6([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_IPV6_ADDRESS SubnetAddress, [In] [Out] DHCP_SUBNET_INFO_V6* SubnetInfo);
uint DhcpDeleteSubnetV6([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_IPV6_ADDRESS SubnetAddress, [In] DHCP_FORCE_FLAG ForceFlag);
uint DhcpEnumSubnetsV6([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCPV6_IP_ARRAY** EnumInfo, [In] [Out] uint* ElementsRead, [In] [Out] uint* ElementsTotal);
uint DhcpAddSubnetElementV6([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_IPV6_ADDRESS SubnetAddress, [In] [Out] DHCP_SUBNET_ELEMENT_DATA_V6* AddElementInfo);
uint DhcpRemoveSubnetElementV6([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_IPV6_ADDRESS SubnetAddress, [In] [Out] DHCP_SUBNET_ELEMENT_DATA_V6* RemoveElementInfo, [In] DHCP_FORCE_FLAG ForceFlag);
uint DhcpEnumSubnetElementsV6([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_IPV6_ADDRESS SubnetAddress, [In] DHCP_SUBNET_ELEMENT_TYPE_V6 EnumElementType, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_SUBNET_ELEMENT_INFO_ARRAY_V6** EnumElementInfo, [In] [Out] uint* ElementsRead, [In] [Out] uint* ElementsTotal);
uint DhcpGetSubnetInfoV6([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_IPV6_ADDRESS SubnetAddress, [In] [Out] DHCP_SUBNET_INFO_V6** SubnetInfo);
uint DhcpEnumSubnetClientsV6([Const] [In] [Optional] PWSTR ServerIpAddress, [In] DHCP_IPV6_ADDRESS SubnetAddress, [In] [Out] DHCP_IPV6_ADDRESS* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_CLIENT_INFO_ARRAY_V6** ClientInfo, [In] [Out] uint* ClientsRead, [In] [Out] uint* ClientsTotal);
uint DhcpServerGetConfigV6([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] DHCP_OPTION_SCOPE_INFO6* ScopeInfo, [In] [Out] DHCP_SERVER_CONFIG_INFO_V6** ConfigInfo);
uint DhcpServerSetConfigV6([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] DHCP_OPTION_SCOPE_INFO6* ScopeInfo, [In] uint FieldsToSet, [In] [Out] DHCP_SERVER_CONFIG_INFO_V6* ConfigInfo);
uint DhcpSetSubnetInfoV6([Const] [In] [Optional] PWSTR ServerIpAddress, [In] DHCP_IPV6_ADDRESS SubnetAddress, [In] [Out] DHCP_SUBNET_INFO_V6* SubnetInfo);
uint DhcpGetMibInfoV6([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] DHCP_MIB_INFO_V6** MibInfo);
uint DhcpGetServerBindingInfoV6([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Out] DHCPV6_BIND_ELEMENT_ARRAY** BindElementsInfo);
uint DhcpSetServerBindingInfoV6([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Out] DHCPV6_BIND_ELEMENT_ARRAY* BindElementInfo);
uint DhcpSetClientInfoV6([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_CLIENT_INFO_V6* ClientInfo);
uint DhcpGetClientInfoV6([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_SEARCH_INFO_V6* SearchInfo, [In] [Out] DHCP_CLIENT_INFO_V6** ClientInfo);
uint DhcpDeleteClientInfoV6([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_SEARCH_INFO_V6* ClientInfo);
uint DhcpCreateClassV6([In] [Optional] PWSTR ServerIpAddress, [In] uint ReservedMustBeZero, [In] [Out] DHCP_CLASS_INFO_V6* ClassInfo);
uint DhcpModifyClassV6([In] [Optional] PWSTR ServerIpAddress, [In] uint ReservedMustBeZero, [In] [Out] DHCP_CLASS_INFO_V6* ClassInfo);
uint DhcpDeleteClassV6([In] [Optional] PWSTR ServerIpAddress, [In] uint ReservedMustBeZero, [In] PWSTR ClassName);
uint DhcpEnumClassesV6([In] [Optional] PWSTR ServerIpAddress, [In] uint ReservedMustBeZero, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] [Out] DHCP_CLASS_INFO_ARRAY_V6** ClassInfoArray, [In] [Out] uint* nRead, [In] [Out] uint* nTotal);
uint DhcpSetSubnetDelayOffer([In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] ushort TimeDelayInMilliseconds);
uint DhcpGetSubnetDelayOffer([In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] [Out] ushort* TimeDelayInMilliseconds);
uint DhcpGetMibInfoV5([Const] [In] [Optional] PWSTR ServerIpAddress, [In] [Out] DHCP_MIB_INFO_V5** MibInfo);
uint DhcpAddSecurityGroup([In] [Optional] PWSTR pServer);
uint DhcpV4GetOptionValue([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR PolicyName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [In] [Out] DHCP_OPTION_VALUE** OptionValue);
uint DhcpV4SetOptionValue([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionId, [In] [Optional] PWSTR PolicyName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [In] [Out] DHCP_OPTION_DATA* OptionValue);
uint DhcpV4SetOptionValues([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Optional] PWSTR PolicyName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [In] [Out] DHCP_OPTION_VALUE_ARRAY* OptionValues);
uint DhcpV4RemoveOptionValue([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] uint OptionID, [In] [Optional] PWSTR PolicyName, [In] [Optional] PWSTR VendorName, [In] [Out] DHCP_OPTION_SCOPE_INFO* ScopeInfo);
uint DhcpV4GetAllOptionValues([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] [Out] DHCP_OPTION_SCOPE_INFO* ScopeInfo, [In] [Out] DHCP_ALL_OPTION_VALUES_PB** Values);
uint DhcpV4FailoverCreateRelationship([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_FAILOVER_RELATIONSHIP* pRelationship);
uint DhcpV4FailoverSetRelationship([In] [Optional] PWSTR ServerIpAddress, [In] uint Flags, [In] DHCP_FAILOVER_RELATIONSHIP* pRelationship);
uint DhcpV4FailoverDeleteRelationship([In] [Optional] PWSTR ServerIpAddress, [In] PWSTR pRelationshipName);
uint DhcpV4FailoverGetRelationship([In] [Optional] PWSTR ServerIpAddress, [In] PWSTR pRelationshipName, [Out] DHCP_FAILOVER_RELATIONSHIP** pRelationship);
uint DhcpV4FailoverEnumRelationship([In] [Optional] PWSTR ServerIpAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [Out] DHCP_FAILOVER_RELATIONSHIP_ARRAY** pRelationship, [Out] uint* RelationshipRead, [Out] uint* RelationshipTotal);
uint DhcpV4FailoverAddScopeToRelationship([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_FAILOVER_RELATIONSHIP* pRelationship);
uint DhcpV4FailoverDeleteScopeFromRelationship([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_FAILOVER_RELATIONSHIP* pRelationship);
uint DhcpV4FailoverGetScopeRelationship([In] [Optional] PWSTR ServerIpAddress, [In] uint ScopeId, [Out] DHCP_FAILOVER_RELATIONSHIP** pRelationship);
uint DhcpV4FailoverGetScopeStatistics([In] [Optional] PWSTR ServerIpAddress, [In] uint ScopeId, [Out] DHCP_FAILOVER_STATISTICS** pStats);
uint DhcpV4FailoverGetClientInfo([In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_SEARCH_INFO* SearchInfo, [Out] DHCPV4_FAILOVER_CLIENT_INFO** ClientInfo);
uint DhcpV4FailoverGetSystemTime([In] [Optional] PWSTR ServerIpAddress, [Out] uint* pTime, [Out] uint* pMaxAllowedDeltaTime);
uint DhcpV4FailoverGetAddressStatus([In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] [Out] uint* pStatus);
uint DhcpV4FailoverTriggerAddrAllocation([In] [Optional] PWSTR ServerIpAddress, [In] PWSTR pFailRelName);
uint DhcpHlprCreateV4Policy([In] PWSTR PolicyName, [In] BOOL fGlobalPolicy, [In] uint Subnet, [In] uint ProcessingOrder, [In] DHCP_POL_LOGIC_OPER RootOperator, [In] PWSTR Description, [In] BOOL Enabled, [Out] DHCP_POLICY** Policy);
uint DhcpHlprCreateV4PolicyEx([In] PWSTR PolicyName, [In] BOOL fGlobalPolicy, [In] uint Subnet, [In] uint ProcessingOrder, [In] DHCP_POL_LOGIC_OPER RootOperator, [In] PWSTR Description, [In] BOOL Enabled, [Out] DHCP_POLICY_EX** Policy);
uint DhcpHlprAddV4PolicyExpr([In] [Out] DHCP_POLICY* Policy, [In] uint ParentExpr, [In] DHCP_POL_LOGIC_OPER Operator, [Out] uint* ExprIndex);
uint DhcpHlprAddV4PolicyCondition([In] [Out] DHCP_POLICY* Policy, [In] uint ParentExpr, [In] DHCP_POL_ATTR_TYPE Type, [In] uint OptionID, [In] uint SubOptionID, [In] [Optional] PWSTR VendorName, [In] DHCP_POL_COMPARATOR Operator, [MemorySize(BytesParamIndex = 8)] [In] byte* Value, [In] uint ValueLength, [Out] uint* ConditionIndex);
uint DhcpHlprAddV4PolicyRange([In] [Out] DHCP_POLICY* Policy, [In] DHCP_IP_RANGE* Range);
uint DhcpHlprResetV4PolicyExpr([In] [Out] DHCP_POLICY* Policy);
uint DhcpHlprModifyV4PolicyExpr([In] [Out] DHCP_POLICY* Policy, [In] DHCP_POL_LOGIC_OPER Operator);
void DhcpHlprFreeV4Policy([In] [Out] DHCP_POLICY* Policy);
void DhcpHlprFreeV4PolicyArray([In] [Out] DHCP_POLICY_ARRAY* PolicyArray);
void DhcpHlprFreeV4PolicyEx([In] [Out] DHCP_POLICY_EX* PolicyEx);
void DhcpHlprFreeV4PolicyExArray([In] [Out] DHCP_POLICY_EX_ARRAY* PolicyExArray);
void DhcpHlprFreeV4DhcpProperty([In] [Out] DHCP_PROPERTY* Property);
void DhcpHlprFreeV4DhcpPropertyArray([In] [Out] DHCP_PROPERTY_ARRAY* PropertyArray);
DHCP_PROPERTY* DhcpHlprFindV4DhcpProperty([In] DHCP_PROPERTY_ARRAY* PropertyArray, [In] DHCP_PROPERTY_ID ID, [In] DHCP_PROPERTY_TYPE Type);
BOOL DhcpHlprIsV4PolicySingleUC([In] DHCP_POLICY* Policy);
uint DhcpV4QueryPolicyEnforcement([In] [Optional] PWSTR ServerIpAddress, [In] BOOL fGlobalPolicy, [In] uint SubnetAddress, [Out] BOOL* Enabled);
uint DhcpV4SetPolicyEnforcement([In] [Optional] PWSTR ServerIpAddress, [In] BOOL fGlobalPolicy, [In] uint SubnetAddress, [In] BOOL Enable);
BOOL DhcpHlprIsV4PolicyWellFormed([In] DHCP_POLICY* pPolicy);
uint DhcpHlprIsV4PolicyValid([In] DHCP_POLICY* pPolicy);
uint DhcpV4CreatePolicy([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_POLICY* pPolicy);
uint DhcpV4GetPolicy([In] [Optional] PWSTR ServerIpAddress, [In] BOOL fGlobalPolicy, [In] uint SubnetAddress, [In] PWSTR PolicyName, [Out] DHCP_POLICY** Policy);
uint DhcpV4SetPolicy([In] [Optional] PWSTR ServerIpAddress, [In] uint FieldsModified, [In] BOOL fGlobalPolicy, [In] uint SubnetAddress, [In] PWSTR PolicyName, [In] DHCP_POLICY* Policy);
uint DhcpV4DeletePolicy([In] [Optional] PWSTR ServerIpAddress, [In] BOOL fGlobalPolicy, [In] uint SubnetAddress, [In] PWSTR PolicyName);
uint DhcpV4EnumPolicies([In] [Optional] PWSTR ServerIpAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] BOOL fGlobalPolicy, [In] uint SubnetAddress, [Out] DHCP_POLICY_ARRAY** EnumInfo, [Out] uint* ElementsRead, [Out] uint* ElementsTotal);
uint DhcpV4AddPolicyRange([In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] PWSTR PolicyName, [In] DHCP_IP_RANGE* Range);
uint DhcpV4RemovePolicyRange([In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] PWSTR PolicyName, [In] DHCP_IP_RANGE* Range);
uint DhcpV6SetStatelessStoreParams([In] [Optional] PWSTR ServerIpAddress, [In] BOOL fServerLevel, [In] DHCP_IPV6_ADDRESS SubnetAddress, [In] uint FieldModified, [In] DHCPV6_STATELESS_PARAMS* Params);
uint DhcpV6GetStatelessStoreParams([In] [Optional] PWSTR ServerIpAddress, [In] BOOL fServerLevel, [In] DHCP_IPV6_ADDRESS SubnetAddress, [Out] DHCPV6_STATELESS_PARAMS** Params);
uint DhcpV6GetStatelessStatistics([In] [Optional] PWSTR ServerIpAddress, [Out] DHCPV6_STATELESS_STATS** StatelessStats);
uint DhcpV4CreateClientInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_CLIENT_INFO_PB* ClientInfo);
uint DhcpV4EnumSubnetClients([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [Out] DHCP_CLIENT_INFO_PB_ARRAY** ClientInfo, [Out] uint* ClientsRead, [Out] uint* ClientsTotal);
uint DhcpV4GetClientInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_SEARCH_INFO* SearchInfo, [Out] DHCP_CLIENT_INFO_PB** ClientInfo);
uint DhcpV6CreateClientInfo([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_CLIENT_INFO_V6* ClientInfo);
uint DhcpV4GetFreeIPAddress([In] [Optional] PWSTR ServerIpAddress, [In] uint ScopeId, [In] uint StartIP, [In] uint EndIP, [In] uint NumFreeAddrReq, [Out] DHCP_IP_ARRAY** IPAddrList);
uint DhcpV6GetFreeIPAddress([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_IPV6_ADDRESS ScopeId, [In] DHCP_IPV6_ADDRESS StartIP, [In] DHCP_IPV6_ADDRESS EndIP, [In] uint NumFreeAddrReq, [Out] DHCPV6_IP_ARRAY** IPAddrList);
uint DhcpV4CreateClientInfoEx([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_CLIENT_INFO_EX* ClientInfo);
uint DhcpV4EnumSubnetClientsEx([Const] [In] [Optional] PWSTR ServerIpAddress, [In] uint SubnetAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [Out] DHCP_CLIENT_INFO_EX_ARRAY** ClientInfo, [Out] uint* ClientsRead, [Out] uint* ClientsTotal);
uint DhcpV4GetClientInfoEx([Const] [In] [Optional] PWSTR ServerIpAddress, [Const] [In] DHCP_SEARCH_INFO* SearchInfo, [Out] DHCP_CLIENT_INFO_EX** ClientInfo);
uint DhcpV4CreatePolicyEx([In] [Optional] PWSTR ServerIpAddress, [In] DHCP_POLICY_EX* PolicyEx);
uint DhcpV4GetPolicyEx([In] [Optional] PWSTR ServerIpAddress, [In] BOOL GlobalPolicy, [In] uint SubnetAddress, [In] PWSTR PolicyName, [Out] DHCP_POLICY_EX** Policy);
uint DhcpV4SetPolicyEx([In] [Optional] PWSTR ServerIpAddress, [In] uint FieldsModified, [In] BOOL GlobalPolicy, [In] uint SubnetAddress, [In] PWSTR PolicyName, [In] DHCP_POLICY_EX* Policy);
uint DhcpV4EnumPoliciesEx([In] [Optional] PWSTR ServerIpAddress, [In] [Out] uint* ResumeHandle, [In] uint PreferredMaximum, [In] BOOL GlobalPolicy, [In] uint SubnetAddress, [Out] DHCP_POLICY_EX_ARRAY** EnumInfo, [Out] uint* ElementsRead, [Out] uint* ElementsTotal);
