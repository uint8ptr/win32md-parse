HRESULT FilterLoad([Const] [In] PWSTR lpFilterName);
HRESULT FilterUnload([Const] [In] PWSTR lpFilterName);
HRESULT FilterCreate([Const] [In] PWSTR lpFilterName, [Out] HFILTER* hFilter);
HRESULT FilterClose([In] HFILTER hFilter);
HRESULT FilterInstanceCreate([Const] [In] PWSTR lpFilterName, [Const] [In] PWSTR lpVolumeName, [Const] [In] [Optional] PWSTR lpInstanceName, [Out] HFILTER_INSTANCE* hInstance);
HRESULT FilterInstanceClose([In] HFILTER_INSTANCE hInstance);
HRESULT FilterAttach([Const] [In] PWSTR lpFilterName, [Const] [In] PWSTR lpVolumeName, [Const] [In] [Optional] PWSTR lpInstanceName, [In] [Optional] uint dwCreatedInstanceNameLength, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] PWSTR lpCreatedInstanceName);
HRESULT FilterAttachAtAltitude([Const] [In] PWSTR lpFilterName, [Const] [In] PWSTR lpVolumeName, [Const] [In] PWSTR lpAltitude, [Const] [In] [Optional] PWSTR lpInstanceName, [In] [Optional] uint dwCreatedInstanceNameLength, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] PWSTR lpCreatedInstanceName);
HRESULT FilterDetach([Const] [In] PWSTR lpFilterName, [Const] [In] PWSTR lpVolumeName, [Const] [In] [Optional] PWSTR lpInstanceName);
HRESULT FilterFindFirst([In] FILTER_INFORMATION_CLASS dwInformationClass, [MemorySize(BytesParamIndex = 2)] [Out] void* lpBuffer, [In] uint dwBufferSize, [Out] uint* lpBytesReturned, [Out] FilterFindHandle* lpFilterFind);
HRESULT FilterFindNext([In] HANDLE hFilterFind, [In] FILTER_INFORMATION_CLASS dwInformationClass, [MemorySize(BytesParamIndex = 3)] [Out] void* lpBuffer, [In] uint dwBufferSize, [Out] uint* lpBytesReturned);
HRESULT FilterFindClose([In] HANDLE hFilterFind);
HRESULT FilterVolumeFindFirst([In] FILTER_VOLUME_INFORMATION_CLASS dwInformationClass, [MemorySize(BytesParamIndex = 2)] [Out] void* lpBuffer, [In] uint dwBufferSize, [Out] uint* lpBytesReturned, [Out] FilterVolumeFindHandle* lpVolumeFind);
HRESULT FilterVolumeFindNext([In] HANDLE hVolumeFind, [In] FILTER_VOLUME_INFORMATION_CLASS dwInformationClass, [MemorySize(BytesParamIndex = 3)] [Out] void* lpBuffer, [In] uint dwBufferSize, [Out] uint* lpBytesReturned);
HRESULT FilterVolumeFindClose([In] HANDLE hVolumeFind);
HRESULT FilterInstanceFindFirst([Const] [In] PWSTR lpFilterName, [In] INSTANCE_INFORMATION_CLASS dwInformationClass, [MemorySize(BytesParamIndex = 3)] [Out] void* lpBuffer, [In] uint dwBufferSize, [Out] uint* lpBytesReturned, [Out] FilterInstanceFindHandle* lpFilterInstanceFind);
HRESULT FilterInstanceFindNext([In] HANDLE hFilterInstanceFind, [In] INSTANCE_INFORMATION_CLASS dwInformationClass, [MemorySize(BytesParamIndex = 3)] [Out] void* lpBuffer, [In] uint dwBufferSize, [Out] uint* lpBytesReturned);
HRESULT FilterInstanceFindClose([In] HANDLE hFilterInstanceFind);
HRESULT FilterVolumeInstanceFindFirst([Const] [In] PWSTR lpVolumeName, [In] INSTANCE_INFORMATION_CLASS dwInformationClass, [MemorySize(BytesParamIndex = 3)] [Out] void* lpBuffer, [In] uint dwBufferSize, [Out] uint* lpBytesReturned, [Out] FilterVolumeInstanceFindHandle* lpVolumeInstanceFind);
HRESULT FilterVolumeInstanceFindNext([In] HANDLE hVolumeInstanceFind, [In] INSTANCE_INFORMATION_CLASS dwInformationClass, [MemorySize(BytesParamIndex = 3)] [Out] void* lpBuffer, [In] uint dwBufferSize, [Out] uint* lpBytesReturned);
HRESULT FilterVolumeInstanceFindClose([In] HANDLE hVolumeInstanceFind);
HRESULT FilterGetInformation([In] HFILTER hFilter, [In] FILTER_INFORMATION_CLASS dwInformationClass, [MemorySize(BytesParamIndex = 3)] [Out] void* lpBuffer, [In] uint dwBufferSize, [Out] uint* lpBytesReturned);
HRESULT FilterInstanceGetInformation([In] HFILTER_INSTANCE hInstance, [In] INSTANCE_INFORMATION_CLASS dwInformationClass, [MemorySize(BytesParamIndex = 3)] [Out] void* lpBuffer, [In] uint dwBufferSize, [Out] uint* lpBytesReturned);
HRESULT FilterConnectCommunicationPort([Const] [In] PWSTR lpPortName, [In] uint dwOptions, [Const] [MemorySize(BytesParamIndex = 3)] [In] [Optional] void* lpContext, [In] ushort wSizeOfContext, [In] [Optional] SECURITY_ATTRIBUTES* lpSecurityAttributes, [Out] HANDLE* hPort);
HRESULT FilterSendMessage([In] HANDLE hPort, [MemorySize(BytesParamIndex = 2)] [In] void* lpInBuffer, [In] uint dwInBufferSize, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* lpOutBuffer, [In] uint dwOutBufferSize, [Out] uint* lpBytesReturned);
HRESULT FilterGetMessage([In] HANDLE hPort, [MemorySize(BytesParamIndex = 2)] [Out] FILTER_MESSAGE_HEADER* lpMessageBuffer, [In] uint dwMessageBufferSize, [In] [Out] [Optional] OVERLAPPED* lpOverlapped);
HRESULT FilterReplyMessage([In] HANDLE hPort, [MemorySize(BytesParamIndex = 2)] [In] FILTER_REPLY_HEADER* lpReplyBuffer, [In] uint dwReplyBufferSize);
HRESULT FilterGetDosName([Const] [In] PWSTR lpVolumeName, [NativeArrayInfo(CountParamIndex = 2)] [Out] PWSTR lpDosName, [In] uint dwDosNameBufferSize);
