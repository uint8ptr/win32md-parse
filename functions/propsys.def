HRESULT StgSerializePropVariant([Const] [In] PROPVARIANT* ppropvar, [Out] SERIALIZEDPROPERTYVALUE** ppProp, [Out] uint* pcb);
HRESULT StgDeserializePropVariant([Const] [In] SERIALIZEDPROPERTYVALUE* pprop, [In] uint cbMax, [Out] PROPVARIANT* ppropvar);
HRESULT PropVariantToWinRTPropertyValue([Const] [In] PROPVARIANT* propvar, [Const] [In] Guid* riid, [ComOutPtr] [Out] [Optional] void** ppv);
HRESULT WinRTPropertyValueToPropVariant([In] [Optional] IUnknown punkPropertyValue, [Out] PROPVARIANT* ppropvar);
HRESULT PSFormatForDisplay([Const] [In] PROPERTYKEY* propkey, [Const] [In] PROPVARIANT* propvar, [In] PROPDESC_FORMAT_FLAGS pdfFlags, [NativeArrayInfo(CountParamIndex = 4)] [Out] PWSTR pwszText, [In] uint cchText);
HRESULT PSFormatForDisplayAlloc([Const] [In] PROPERTYKEY* key, [Const] [In] PROPVARIANT* propvar, [In] PROPDESC_FORMAT_FLAGS pdff, [Out] PWSTR* ppszDisplay);
HRESULT PSFormatPropertyValue([In] IPropertyStore pps, [In] IPropertyDescription ppd, [In] PROPDESC_FORMAT_FLAGS pdff, [Out] PWSTR* ppszDisplay);
HRESULT PSGetImageReferenceForValue([Const] [In] PROPERTYKEY* propkey, [Const] [In] PROPVARIANT* propvar, [Out] PWSTR* ppszImageRes);
HRESULT PSStringFromPropertyKey([Const] [In] PROPERTYKEY* pkey, [NativeArrayInfo(CountParamIndex = 2)] [Out] PWSTR psz, [In] uint cch);
HRESULT PSPropertyKeyFromString([Const] [In] PWSTR pszString, [Out] PROPERTYKEY* pkey);
HRESULT PSCreateMemoryPropertyStore([Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSCreateDelayedMultiplexPropertyStore([In] GETPROPERTYSTOREFLAGS flags, [In] IDelayedPropertyStoreFactory pdpsf, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] uint* rgStoreIds, [In] uint cStores, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSCreateMultiplexPropertyStore([NativeArrayInfo(CountParamIndex = 1)] [In] IUnknown* prgpunkStores, [In] uint cStores, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSCreatePropertyChangeArray([Const] [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] PROPERTYKEY* rgpropkey, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] PKA_FLAGS* rgflags, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] PROPVARIANT* rgpropvar, [In] uint cChanges, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSCreateSimplePropertyChange([In] PKA_FLAGS flags, [Const] [In] PROPERTYKEY* key, [Const] [In] PROPVARIANT* propvar, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSGetPropertyDescription([Const] [In] PROPERTYKEY* propkey, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSGetPropertyDescriptionByName([Const] [In] PWSTR pszCanonicalName, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSLookupPropertyHandlerCLSID([Const] [In] PWSTR pszFilePath, [Out] Guid* pclsid);
HRESULT PSGetItemPropertyHandler([In] IUnknown punkItem, [In] BOOL fReadWrite, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSGetItemPropertyHandlerWithCreateObject([In] IUnknown punkItem, [In] BOOL fReadWrite, [In] IUnknown punkCreateObject, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSGetPropertyValue([In] IPropertyStore pps, [In] IPropertyDescription ppd, [Out] PROPVARIANT* ppropvar);
HRESULT PSSetPropertyValue([In] IPropertyStore pps, [In] IPropertyDescription ppd, [Const] [In] PROPVARIANT* propvar);
HRESULT PSRegisterPropertySchema([Const] [In] PWSTR pszPath);
HRESULT PSUnregisterPropertySchema([Const] [In] PWSTR pszPath);
HRESULT PSRefreshPropertySchema();
HRESULT PSEnumeratePropertyDescriptions([In] PROPDESC_ENUMFILTER filterOn, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSGetPropertyKeyFromName([Const] [In] PWSTR pszName, [Out] PROPERTYKEY* ppropkey);
HRESULT PSGetNameFromPropertyKey([Const] [In] PROPERTYKEY* propkey, [Out] PWSTR* ppszCanonicalName);
HRESULT PSCoerceToCanonicalValue([Const] [In] PROPERTYKEY* key, [In] [Out] PROPVARIANT* ppropvar);
HRESULT PSGetPropertyDescriptionListFromString([Const] [In] PWSTR pszPropList, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSCreatePropertyStoreFromPropertySetStorage([In] IPropertySetStorage ppss, [In] uint grfMode, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSCreatePropertyStoreFromObject([In] IUnknown punk, [In] uint grfMode, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSCreateAdapterFromPropertyStore([In] IPropertyStore pps, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSGetPropertySystem([Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSGetPropertyFromPropertyStorage([MemorySize(BytesParamIndex = 1)] [In] SERIALIZEDPROPSTORAGE* psps, [In] uint cb, [Const] [In] PROPERTYKEY* rpkey, [Out] PROPVARIANT* ppropvar);
HRESULT PSGetNamedPropertyFromPropertyStorage([MemorySize(BytesParamIndex = 1)] [In] SERIALIZEDPROPSTORAGE* psps, [In] uint cb, [Const] [In] PWSTR pszName, [Out] PROPVARIANT* ppropvar);
HRESULT PSPropertyBag_ReadType([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] VARIANT* var, [In] VARENUM type);
HRESULT PSPropertyBag_ReadStr([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [NativeArrayInfo(CountParamIndex = 3)] [Out] PWSTR value, [In] int characterCount);
HRESULT PSPropertyBag_ReadStrAlloc([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] PWSTR* value);
HRESULT PSPropertyBag_ReadBSTR([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] BSTR* value);
HRESULT PSPropertyBag_WriteStr([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Const] [In] PWSTR value);
HRESULT PSPropertyBag_WriteBSTR([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [In] BSTR value);
HRESULT PSPropertyBag_ReadInt([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] int* value);
HRESULT PSPropertyBag_WriteInt([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [In] int value);
HRESULT PSPropertyBag_ReadSHORT([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] short* value);
HRESULT PSPropertyBag_WriteSHORT([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [In] short value);
HRESULT PSPropertyBag_ReadLONG([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] int* value);
HRESULT PSPropertyBag_WriteLONG([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [In] int value);
HRESULT PSPropertyBag_ReadDWORD([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] uint* value);
HRESULT PSPropertyBag_WriteDWORD([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [In] uint value);
HRESULT PSPropertyBag_ReadBOOL([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] BOOL* value);
HRESULT PSPropertyBag_WriteBOOL([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [In] BOOL value);
HRESULT PSPropertyBag_ReadPOINTL([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] POINTL* value);
HRESULT PSPropertyBag_WritePOINTL([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Const] [In] POINTL* value);
HRESULT PSPropertyBag_ReadPOINTS([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] POINTS* value);
HRESULT PSPropertyBag_WritePOINTS([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Const] [In] POINTS* value);
HRESULT PSPropertyBag_ReadRECTL([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] RECTL* value);
HRESULT PSPropertyBag_WriteRECTL([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Const] [In] RECTL* value);
HRESULT PSPropertyBag_ReadStream([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] IStream* value);
HRESULT PSPropertyBag_WriteStream([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [In] IStream value);
HRESULT PSPropertyBag_Delete([In] IPropertyBag propBag, [Const] [In] PWSTR propName);
HRESULT PSPropertyBag_ReadULONGLONG([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] ulong* value);
HRESULT PSPropertyBag_WriteULONGLONG([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [In] ulong value);
HRESULT PSPropertyBag_ReadUnknown([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Const] [In] Guid* riid, [Out] void** ppv);
HRESULT PSPropertyBag_WriteUnknown([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [In] IUnknown punk);
HRESULT PSPropertyBag_ReadGUID([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] Guid* value);
HRESULT PSPropertyBag_WriteGUID([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Const] [In] Guid* value);
HRESULT PSPropertyBag_ReadPropertyKey([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Out] PROPERTYKEY* value);
HRESULT PSPropertyBag_WritePropertyKey([In] IPropertyBag propBag, [Const] [In] PWSTR propName, [Const] [In] PROPERTYKEY* value);
HRESULT InitPropVariantFromResource([In] HINSTANCE hinst, [In] uint id, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromBuffer([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pv, [In] uint cb, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromCLSID([Const] [In] Guid* clsid, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromGUIDAsString([Const] [In] Guid* guid, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromFileTime([Const] [In] FILETIME* pftIn, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromPropVariantVectorElem([Const] [In] PROPVARIANT* propvarIn, [In] uint iElem, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantVectorFromPropVariant([Const] [In] PROPVARIANT* propvarSingle, [Out] PROPVARIANT* ppropvarVector);
HRESULT InitPropVariantFromStrRet([In] [Out] STRRET* pstrret, [In] [Optional] ITEMIDLIST* pidl, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromBooleanVector([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] BOOL* prgf, [In] uint cElems, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromInt16Vector([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] short* prgn, [In] uint cElems, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromUInt16Vector([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] ushort* prgn, [In] uint cElems, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromInt32Vector([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] int* prgn, [In] uint cElems, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromUInt32Vector([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] uint* prgn, [In] uint cElems, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromInt64Vector([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] long* prgn, [In] uint cElems, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromUInt64Vector([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] ulong* prgn, [In] uint cElems, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromDoubleVector([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] double* prgn, [In] uint cElems, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromFileTimeVector([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] FILETIME* prgft, [In] uint cElems, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromStringVector([NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] PWSTR* prgsz, [In] uint cElems, [Out] PROPVARIANT* ppropvar);
HRESULT InitPropVariantFromStringAsVector([Const] [In] [Optional] PWSTR psz, [Out] PROPVARIANT* ppropvar);
BOOL PropVariantToBooleanWithDefault([Const] [In] PROPVARIANT* propvarIn, [In] BOOL fDefault);
short PropVariantToInt16WithDefault([Const] [In] PROPVARIANT* propvarIn, [In] short iDefault);
ushort PropVariantToUInt16WithDefault([Const] [In] PROPVARIANT* propvarIn, [In] ushort uiDefault);
int PropVariantToInt32WithDefault([Const] [In] PROPVARIANT* propvarIn, [In] int lDefault);
uint PropVariantToUInt32WithDefault([Const] [In] PROPVARIANT* propvarIn, [In] uint ulDefault);
long PropVariantToInt64WithDefault([Const] [In] PROPVARIANT* propvarIn, [In] long llDefault);
ulong PropVariantToUInt64WithDefault([Const] [In] PROPVARIANT* propvarIn, [In] ulong ullDefault);
double PropVariantToDoubleWithDefault([Const] [In] PROPVARIANT* propvarIn, [In] double dblDefault);
PWSTR PropVariantToStringWithDefault([Const] [In] PROPVARIANT* propvarIn, [Const] [In] [Optional] PWSTR pszDefault);
HRESULT PropVariantToBoolean([Const] [In] PROPVARIANT* propvarIn, [Out] BOOL* pfRet);
HRESULT PropVariantToInt16([Const] [In] PROPVARIANT* propvarIn, [Out] short* piRet);
HRESULT PropVariantToUInt16([Const] [In] PROPVARIANT* propvarIn, [Out] ushort* puiRet);
HRESULT PropVariantToInt32([Const] [In] PROPVARIANT* propvarIn, [Out] int* plRet);
HRESULT PropVariantToUInt32([Const] [In] PROPVARIANT* propvarIn, [Out] uint* pulRet);
HRESULT PropVariantToInt64([Const] [In] PROPVARIANT* propvarIn, [Out] long* pllRet);
HRESULT PropVariantToUInt64([Const] [In] PROPVARIANT* propvarIn, [Out] ulong* pullRet);
HRESULT PropVariantToDouble([Const] [In] PROPVARIANT* propvarIn, [Out] double* pdblRet);
HRESULT PropVariantToBuffer([Const] [In] PROPVARIANT* propvar, [MemorySize(BytesParamIndex = 2)] [Out] void* pv, [In] uint cb);
HRESULT PropVariantToString([Const] [In] PROPVARIANT* propvar, [NativeArrayInfo(CountParamIndex = 2)] [Out] PWSTR psz, [In] uint cch);
HRESULT PropVariantToGUID([Const] [In] PROPVARIANT* propvar, [Out] Guid* pguid);
HRESULT PropVariantToStringAlloc([Const] [In] PROPVARIANT* propvar, [Out] PWSTR* ppszOut);
HRESULT PropVariantToBSTR([Const] [In] PROPVARIANT* propvar, [Out] BSTR* pbstrOut);
HRESULT PropVariantToStrRet([Const] [In] PROPVARIANT* propvar, [Out] STRRET* pstrret);
HRESULT PropVariantToFileTime([Const] [In] PROPVARIANT* propvar, [In] PSTIME_FLAGS pstfOut, [Out] FILETIME* pftOut);
uint PropVariantGetElementCount([Const] [In] PROPVARIANT* propvar);
HRESULT PropVariantToBooleanVector([Const] [In] PROPVARIANT* propvar, [NativeArrayInfo(CountParamIndex = 2)] [Out] BOOL* prgf, [In] uint crgf, [Out] uint* pcElem);
HRESULT PropVariantToInt16Vector([Const] [In] PROPVARIANT* propvar, [NativeArrayInfo(CountParamIndex = 2)] [Out] short* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT PropVariantToUInt16Vector([Const] [In] PROPVARIANT* propvar, [NativeArrayInfo(CountParamIndex = 2)] [Out] ushort* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT PropVariantToInt32Vector([Const] [In] PROPVARIANT* propvar, [NativeArrayInfo(CountParamIndex = 2)] [Out] int* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT PropVariantToUInt32Vector([Const] [In] PROPVARIANT* propvar, [NativeArrayInfo(CountParamIndex = 2)] [Out] uint* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT PropVariantToInt64Vector([Const] [In] PROPVARIANT* propvar, [NativeArrayInfo(CountParamIndex = 2)] [Out] long* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT PropVariantToUInt64Vector([Const] [In] PROPVARIANT* propvar, [NativeArrayInfo(CountParamIndex = 2)] [Out] ulong* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT PropVariantToDoubleVector([Const] [In] PROPVARIANT* propvar, [NativeArrayInfo(CountParamIndex = 2)] [Out] double* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT PropVariantToFileTimeVector([Const] [In] PROPVARIANT* propvar, [NativeArrayInfo(CountParamIndex = 2)] [Out] FILETIME* prgft, [In] uint crgft, [Out] uint* pcElem);
HRESULT PropVariantToStringVector([Const] [In] PROPVARIANT* propvar, [NativeArrayInfo(CountParamIndex = 2)] [Out] PWSTR* prgsz, [In] uint crgsz, [Out] uint* pcElem);
HRESULT PropVariantToBooleanVectorAlloc([Const] [In] PROPVARIANT* propvar, [Out] BOOL** pprgf, [Out] uint* pcElem);
HRESULT PropVariantToInt16VectorAlloc([Const] [In] PROPVARIANT* propvar, [Out] short** pprgn, [Out] uint* pcElem);
HRESULT PropVariantToUInt16VectorAlloc([Const] [In] PROPVARIANT* propvar, [Out] ushort** pprgn, [Out] uint* pcElem);
HRESULT PropVariantToInt32VectorAlloc([Const] [In] PROPVARIANT* propvar, [Out] int** pprgn, [Out] uint* pcElem);
HRESULT PropVariantToUInt32VectorAlloc([Const] [In] PROPVARIANT* propvar, [Out] uint** pprgn, [Out] uint* pcElem);
HRESULT PropVariantToInt64VectorAlloc([Const] [In] PROPVARIANT* propvar, [Out] long** pprgn, [Out] uint* pcElem);
HRESULT PropVariantToUInt64VectorAlloc([Const] [In] PROPVARIANT* propvar, [Out] ulong** pprgn, [Out] uint* pcElem);
HRESULT PropVariantToDoubleVectorAlloc([Const] [In] PROPVARIANT* propvar, [Out] double** pprgn, [Out] uint* pcElem);
HRESULT PropVariantToFileTimeVectorAlloc([Const] [In] PROPVARIANT* propvar, [Out] FILETIME** pprgft, [Out] uint* pcElem);
HRESULT PropVariantToStringVectorAlloc([Const] [In] PROPVARIANT* propvar, [Out] PWSTR** pprgsz, [Out] uint* pcElem);
HRESULT PropVariantGetBooleanElem([Const] [In] PROPVARIANT* propvar, [In] uint iElem, [Out] BOOL* pfVal);
HRESULT PropVariantGetInt16Elem([Const] [In] PROPVARIANT* propvar, [In] uint iElem, [Out] short* pnVal);
HRESULT PropVariantGetUInt16Elem([Const] [In] PROPVARIANT* propvar, [In] uint iElem, [Out] ushort* pnVal);
HRESULT PropVariantGetInt32Elem([Const] [In] PROPVARIANT* propvar, [In] uint iElem, [Out] int* pnVal);
HRESULT PropVariantGetUInt32Elem([Const] [In] PROPVARIANT* propvar, [In] uint iElem, [Out] uint* pnVal);
HRESULT PropVariantGetInt64Elem([Const] [In] PROPVARIANT* propvar, [In] uint iElem, [Out] long* pnVal);
HRESULT PropVariantGetUInt64Elem([Const] [In] PROPVARIANT* propvar, [In] uint iElem, [Out] ulong* pnVal);
HRESULT PropVariantGetDoubleElem([Const] [In] PROPVARIANT* propvar, [In] uint iElem, [Out] double* pnVal);
HRESULT PropVariantGetFileTimeElem([Const] [In] PROPVARIANT* propvar, [In] uint iElem, [Out] FILETIME* pftVal);
HRESULT PropVariantGetStringElem([Const] [In] PROPVARIANT* propvar, [In] uint iElem, [Out] PWSTR* ppszVal);
void ClearPropVariantArray([NativeArrayInfo(CountParamIndex = 1)] [In] [Out] PROPVARIANT* rgPropVar, [In] uint cVars);
int PropVariantCompareEx([Const] [In] PROPVARIANT* propvar1, [Const] [In] PROPVARIANT* propvar2, [In] PROPVAR_COMPARE_UNIT unit, [In] PROPVAR_COMPARE_FLAGS flags);
HRESULT PropVariantChangeType([Out] PROPVARIANT* ppropvarDest, [Const] [In] PROPVARIANT* propvarSrc, [In] PROPVAR_CHANGE_FLAGS flags, [In] VARENUM vt);
HRESULT PropVariantToVariant([Const] [In] PROPVARIANT* pPropVar, [Out] VARIANT* pVar);
HRESULT VariantToPropVariant([Const] [In] VARIANT* pVar, [Out] PROPVARIANT* pPropVar);
HRESULT InitVariantFromResource([In] HINSTANCE hinst, [In] uint id, [Out] VARIANT* pvar);
HRESULT InitVariantFromBuffer([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pv, [In] uint cb, [Out] VARIANT* pvar);
HRESULT InitVariantFromGUIDAsString([Const] [In] Guid* guid, [Out] VARIANT* pvar);
HRESULT InitVariantFromFileTime([Const] [In] FILETIME* pft, [Out] VARIANT* pvar);
HRESULT InitVariantFromFileTimeArray([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] FILETIME* prgft, [In] uint cElems, [Out] VARIANT* pvar);
HRESULT InitVariantFromStrRet([In] STRRET* pstrret, [In] ITEMIDLIST* pidl, [Out] VARIANT* pvar);
HRESULT InitVariantFromVariantArrayElem([Const] [In] VARIANT* varIn, [In] uint iElem, [Out] VARIANT* pvar);
HRESULT InitVariantFromBooleanArray([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] BOOL* prgf, [In] uint cElems, [Out] VARIANT* pvar);
HRESULT InitVariantFromInt16Array([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] short* prgn, [In] uint cElems, [Out] VARIANT* pvar);
HRESULT InitVariantFromUInt16Array([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] ushort* prgn, [In] uint cElems, [Out] VARIANT* pvar);
HRESULT InitVariantFromInt32Array([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] int* prgn, [In] uint cElems, [Out] VARIANT* pvar);
HRESULT InitVariantFromUInt32Array([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] uint* prgn, [In] uint cElems, [Out] VARIANT* pvar);
HRESULT InitVariantFromInt64Array([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] long* prgn, [In] uint cElems, [Out] VARIANT* pvar);
HRESULT InitVariantFromUInt64Array([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] ulong* prgn, [In] uint cElems, [Out] VARIANT* pvar);
HRESULT InitVariantFromDoubleArray([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] double* prgn, [In] uint cElems, [Out] VARIANT* pvar);
HRESULT InitVariantFromStringArray([NativeArrayInfo(CountParamIndex = 1)] [In] PWSTR* prgsz, [In] uint cElems, [Out] VARIANT* pvar);
BOOL VariantToBooleanWithDefault([Const] [In] VARIANT* varIn, [In] BOOL fDefault);
short VariantToInt16WithDefault([Const] [In] VARIANT* varIn, [In] short iDefault);
ushort VariantToUInt16WithDefault([Const] [In] VARIANT* varIn, [In] ushort uiDefault);
int VariantToInt32WithDefault([Const] [In] VARIANT* varIn, [In] int lDefault);
uint VariantToUInt32WithDefault([Const] [In] VARIANT* varIn, [In] uint ulDefault);
long VariantToInt64WithDefault([Const] [In] VARIANT* varIn, [In] long llDefault);
ulong VariantToUInt64WithDefault([Const] [In] VARIANT* varIn, [In] ulong ullDefault);
double VariantToDoubleWithDefault([Const] [In] VARIANT* varIn, [In] double dblDefault);
PWSTR VariantToStringWithDefault([Const] [In] VARIANT* varIn, [Const] [In] [Optional] PWSTR pszDefault);
HRESULT VariantToBoolean([Const] [In] VARIANT* varIn, [Out] BOOL* pfRet);
HRESULT VariantToInt16([Const] [In] VARIANT* varIn, [Out] short* piRet);
HRESULT VariantToUInt16([Const] [In] VARIANT* varIn, [Out] ushort* puiRet);
HRESULT VariantToInt32([Const] [In] VARIANT* varIn, [Out] int* plRet);
HRESULT VariantToUInt32([Const] [In] VARIANT* varIn, [Out] uint* pulRet);
HRESULT VariantToInt64([Const] [In] VARIANT* varIn, [Out] long* pllRet);
HRESULT VariantToUInt64([Const] [In] VARIANT* varIn, [Out] ulong* pullRet);
HRESULT VariantToDouble([Const] [In] VARIANT* varIn, [Out] double* pdblRet);
HRESULT VariantToBuffer([Const] [In] VARIANT* varIn, [MemorySize(BytesParamIndex = 2)] [Out] void* pv, [In] uint cb);
HRESULT VariantToGUID([Const] [In] VARIANT* varIn, [Out] Guid* pguid);
HRESULT VariantToString([Const] [In] VARIANT* varIn, [NativeArrayInfo(CountParamIndex = 2)] [Out] PWSTR pszBuf, [In] uint cchBuf);
HRESULT VariantToStringAlloc([Const] [In] VARIANT* varIn, [Out] PWSTR* ppszBuf);
HRESULT VariantToDosDateTime([Const] [In] VARIANT* varIn, [Out] ushort* pwDate, [Out] ushort* pwTime);
HRESULT VariantToStrRet([Const] [In] VARIANT* varIn, [Out] STRRET* pstrret);
HRESULT VariantToFileTime([Const] [In] VARIANT* varIn, [In] PSTIME_FLAGS stfOut, [Out] FILETIME* pftOut);
uint VariantGetElementCount([Const] [In] VARIANT* varIn);
HRESULT VariantToBooleanArray([Const] [In] VARIANT* var, [NativeArrayInfo(CountParamIndex = 2)] [Out] BOOL* prgf, [In] uint crgn, [Out] uint* pcElem);
HRESULT VariantToInt16Array([Const] [In] VARIANT* var, [NativeArrayInfo(CountParamIndex = 2)] [Out] short* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT VariantToUInt16Array([Const] [In] VARIANT* var, [NativeArrayInfo(CountParamIndex = 2)] [Out] ushort* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT VariantToInt32Array([Const] [In] VARIANT* var, [NativeArrayInfo(CountParamIndex = 2)] [Out] int* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT VariantToUInt32Array([Const] [In] VARIANT* var, [NativeArrayInfo(CountParamIndex = 2)] [Out] uint* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT VariantToInt64Array([Const] [In] VARIANT* var, [NativeArrayInfo(CountParamIndex = 2)] [Out] long* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT VariantToUInt64Array([Const] [In] VARIANT* var, [NativeArrayInfo(CountParamIndex = 2)] [Out] ulong* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT VariantToDoubleArray([Const] [In] VARIANT* var, [NativeArrayInfo(CountParamIndex = 2)] [Out] double* prgn, [In] uint crgn, [Out] uint* pcElem);
HRESULT VariantToStringArray([Const] [In] VARIANT* var, [NativeArrayInfo(CountParamIndex = 2)] [Out] PWSTR* prgsz, [In] uint crgsz, [Out] uint* pcElem);
HRESULT VariantToBooleanArrayAlloc([Const] [In] VARIANT* var, [Out] BOOL** pprgf, [Out] uint* pcElem);
HRESULT VariantToInt16ArrayAlloc([Const] [In] VARIANT* var, [Out] short** pprgn, [Out] uint* pcElem);
HRESULT VariantToUInt16ArrayAlloc([Const] [In] VARIANT* var, [Out] ushort** pprgn, [Out] uint* pcElem);
HRESULT VariantToInt32ArrayAlloc([Const] [In] VARIANT* var, [Out] int** pprgn, [Out] uint* pcElem);
HRESULT VariantToUInt32ArrayAlloc([Const] [In] VARIANT* var, [Out] uint** pprgn, [Out] uint* pcElem);
HRESULT VariantToInt64ArrayAlloc([Const] [In] VARIANT* var, [Out] long** pprgn, [Out] uint* pcElem);
HRESULT VariantToUInt64ArrayAlloc([Const] [In] VARIANT* var, [Out] ulong** pprgn, [Out] uint* pcElem);
HRESULT VariantToDoubleArrayAlloc([Const] [In] VARIANT* var, [Out] double** pprgn, [Out] uint* pcElem);
HRESULT VariantToStringArrayAlloc([Const] [In] VARIANT* var, [Out] PWSTR** pprgsz, [Out] uint* pcElem);
HRESULT VariantGetBooleanElem([Const] [In] VARIANT* var, [In] uint iElem, [Out] BOOL* pfVal);
HRESULT VariantGetInt16Elem([Const] [In] VARIANT* var, [In] uint iElem, [Out] short* pnVal);
HRESULT VariantGetUInt16Elem([Const] [In] VARIANT* var, [In] uint iElem, [Out] ushort* pnVal);
HRESULT VariantGetInt32Elem([Const] [In] VARIANT* var, [In] uint iElem, [Out] int* pnVal);
HRESULT VariantGetUInt32Elem([Const] [In] VARIANT* var, [In] uint iElem, [Out] uint* pnVal);
HRESULT VariantGetInt64Elem([Const] [In] VARIANT* var, [In] uint iElem, [Out] long* pnVal);
HRESULT VariantGetUInt64Elem([Const] [In] VARIANT* var, [In] uint iElem, [Out] ulong* pnVal);
HRESULT VariantGetDoubleElem([Const] [In] VARIANT* var, [In] uint iElem, [Out] double* pnVal);
HRESULT VariantGetStringElem([Const] [In] VARIANT* var, [In] uint iElem, [Out] PWSTR* ppszVal);
void ClearVariantArray([NativeArrayInfo(CountParamIndex = 1)] [In] [Out] VARIANT* pvars, [In] uint cvars);
int VariantCompare([Const] [In] VARIANT* var1, [Const] [In] VARIANT* var2);
