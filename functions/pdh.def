uint PdhGetDllVersion([Out] [Optional] PDH_DLL_VERSION* lpdwVersion);
uint PdhOpenQueryW([Const] [In] [Optional] PWSTR szDataSource, [In] nuint dwUserData, [Out] nint* phQuery);
uint PdhOpenQueryA([Const] [In] [Optional] PSTR szDataSource, [In] nuint dwUserData, [Out] nint* phQuery);
uint PdhAddCounterW([In] nint hQuery, [Const] [In] PWSTR szFullCounterPath, [In] nuint dwUserData, [Out] nint* phCounter);
uint PdhAddCounterA([In] nint hQuery, [Const] [In] PSTR szFullCounterPath, [In] nuint dwUserData, [Out] nint* phCounter);
uint PdhAddEnglishCounterW([In] nint hQuery, [Const] [In] PWSTR szFullCounterPath, [In] nuint dwUserData, [Out] nint* phCounter);
uint PdhAddEnglishCounterA([In] nint hQuery, [Const] [In] PSTR szFullCounterPath, [In] nuint dwUserData, [Out] nint* phCounter);
uint PdhCollectQueryDataWithTime([In] nint hQuery, [Out] long* pllTimeStamp);
uint PdhValidatePathExW([In] [Optional] nint hDataSource, [Const] [In] PWSTR szFullPathBuffer);
uint PdhValidatePathExA([In] [Optional] nint hDataSource, [Const] [In] PSTR szFullPathBuffer);
uint PdhRemoveCounter([In] nint hCounter);
uint PdhCollectQueryData([In] nint hQuery);
uint PdhCloseQuery([In] nint hQuery);
uint PdhGetFormattedCounterValue([In] nint hCounter, [In] PDH_FMT dwFormat, [Out] [Optional] uint* lpdwType, [Out] PDH_FMT_COUNTERVALUE* pValue);
uint PdhGetFormattedCounterArrayA([In] nint hCounter, [In] PDH_FMT dwFormat, [In] [Out] uint* lpdwBufferSize, [Out] uint* lpdwItemCount, [Out] [Optional] PDH_FMT_COUNTERVALUE_ITEM_A* ItemBuffer);
uint PdhGetFormattedCounterArrayW([In] nint hCounter, [In] PDH_FMT dwFormat, [In] [Out] uint* lpdwBufferSize, [Out] uint* lpdwItemCount, [Out] [Optional] PDH_FMT_COUNTERVALUE_ITEM_W* ItemBuffer);
uint PdhGetRawCounterValue([In] nint hCounter, [Out] [Optional] uint* lpdwType, [Out] PDH_RAW_COUNTER* pValue);
uint PdhGetRawCounterArrayA([In] nint hCounter, [In] [Out] uint* lpdwBufferSize, [Out] uint* lpdwItemCount, [Out] [Optional] PDH_RAW_COUNTER_ITEM_A* ItemBuffer);
uint PdhGetRawCounterArrayW([In] nint hCounter, [In] [Out] uint* lpdwBufferSize, [Out] uint* lpdwItemCount, [Out] [Optional] PDH_RAW_COUNTER_ITEM_W* ItemBuffer);
uint PdhCalculateCounterFromRawValue([In] nint hCounter, [In] PDH_FMT dwFormat, [In] PDH_RAW_COUNTER* rawValue1, [In] PDH_RAW_COUNTER* rawValue2, [Out] PDH_FMT_COUNTERVALUE* fmtValue);
uint PdhComputeCounterStatistics([In] nint hCounter, [In] PDH_FMT dwFormat, [In] uint dwFirstEntry, [In] uint dwNumEntries, [In] PDH_RAW_COUNTER* lpRawValueArray, [Out] PDH_STATISTICS* data);
uint PdhGetCounterInfoW([In] nint hCounter, [In] BOOLEAN bRetrieveExplainText, [In] [Out] uint* pdwBufferSize, [Out] [Optional] PDH_COUNTER_INFO_W* lpBuffer);
uint PdhGetCounterInfoA([In] nint hCounter, [In] BOOLEAN bRetrieveExplainText, [In] [Out] uint* pdwBufferSize, [Out] [Optional] PDH_COUNTER_INFO_A* lpBuffer);
uint PdhSetCounterScaleFactor([In] nint hCounter, [In] int lFactor);
uint PdhConnectMachineW([Const] [In] [Optional] PWSTR szMachineName);
uint PdhConnectMachineA([Const] [In] [Optional] PSTR szMachineName);
uint PdhEnumMachinesW([Const] [In] [Optional] PWSTR szDataSource, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszMachineList, [In] [Out] uint* pcchBufferSize);
uint PdhEnumMachinesA([Const] [In] [Optional] PSTR szDataSource, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszMachineList, [In] [Out] uint* pcchBufferSize);
uint PdhEnumObjectsW([Const] [In] [Optional] PWSTR szDataSource, [Const] [In] [Optional] PWSTR szMachineName, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszObjectList, [In] [Out] uint* pcchBufferSize, [In] PERF_DETAIL dwDetailLevel, [In] BOOL bRefresh);
uint PdhEnumObjectsA([Const] [In] [Optional] PSTR szDataSource, [Const] [In] [Optional] PSTR szMachineName, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszObjectList, [In] [Out] uint* pcchBufferSize, [In] PERF_DETAIL dwDetailLevel, [In] BOOL bRefresh);
uint PdhEnumObjectItemsW([Const] [In] [Optional] PWSTR szDataSource, [Const] [In] [Optional] PWSTR szMachineName, [Const] [In] PWSTR szObjectName, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszCounterList, [In] [Out] uint* pcchCounterListLength, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszInstanceList, [In] [Out] uint* pcchInstanceListLength, [In] PERF_DETAIL dwDetailLevel, [In] uint dwFlags);
uint PdhEnumObjectItemsA([Const] [In] [Optional] PSTR szDataSource, [Const] [In] [Optional] PSTR szMachineName, [Const] [In] PSTR szObjectName, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszCounterList, [In] [Out] uint* pcchCounterListLength, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszInstanceList, [In] [Out] uint* pcchInstanceListLength, [In] PERF_DETAIL dwDetailLevel, [In] uint dwFlags);
uint PdhMakeCounterPathW([In] PDH_COUNTER_PATH_ELEMENTS_W* pCounterPathElements, [Out] [Optional] PWSTR szFullPathBuffer, [In] [Out] uint* pcchBufferSize, [In] PDH_PATH_FLAGS dwFlags);
uint PdhMakeCounterPathA([In] PDH_COUNTER_PATH_ELEMENTS_A* pCounterPathElements, [Out] [Optional] PSTR szFullPathBuffer, [In] [Out] uint* pcchBufferSize, [In] PDH_PATH_FLAGS dwFlags);
uint PdhParseCounterPathW([Const] [In] PWSTR szFullPathBuffer, [Out] [Optional] PDH_COUNTER_PATH_ELEMENTS_W* pCounterPathElements, [In] [Out] uint* pdwBufferSize, [In] uint dwFlags);
uint PdhParseCounterPathA([Const] [In] PSTR szFullPathBuffer, [Out] [Optional] PDH_COUNTER_PATH_ELEMENTS_A* pCounterPathElements, [In] [Out] uint* pdwBufferSize, [In] uint dwFlags);
uint PdhParseInstanceNameW([Const] [In] PWSTR szInstanceString, [Out] [Optional] PWSTR szInstanceName, [In] [Out] uint* pcchInstanceNameLength, [Out] [Optional] PWSTR szParentName, [In] [Out] uint* pcchParentNameLength, [Out] uint* lpIndex);
uint PdhParseInstanceNameA([Const] [In] PSTR szInstanceString, [Out] [Optional] PSTR szInstanceName, [In] [Out] uint* pcchInstanceNameLength, [Out] [Optional] PSTR szParentName, [In] [Out] uint* pcchParentNameLength, [Out] uint* lpIndex);
uint PdhValidatePathW([Const] [In] PWSTR szFullPathBuffer);
uint PdhValidatePathA([Const] [In] PSTR szFullPathBuffer);
uint PdhGetDefaultPerfObjectW([Const] [In] [Optional] PWSTR szDataSource, [Const] [In] [Optional] PWSTR szMachineName, [Out] [Optional] PWSTR szDefaultObjectName, [In] [Out] uint* pcchBufferSize);
uint PdhGetDefaultPerfObjectA([Const] [In] [Optional] PSTR szDataSource, [Const] [In] [Optional] PSTR szMachineName, [Out] [Optional] PSTR szDefaultObjectName, [In] [Out] uint* pcchBufferSize);
uint PdhGetDefaultPerfCounterW([Const] [In] [Optional] PWSTR szDataSource, [Const] [In] [Optional] PWSTR szMachineName, [Const] [In] PWSTR szObjectName, [Out] [Optional] PWSTR szDefaultCounterName, [In] [Out] uint* pcchBufferSize);
uint PdhGetDefaultPerfCounterA([Const] [In] [Optional] PSTR szDataSource, [Const] [In] [Optional] PSTR szMachineName, [Const] [In] PSTR szObjectName, [Out] [Optional] PSTR szDefaultCounterName, [In] [Out] uint* pcchBufferSize);
uint PdhBrowseCountersW([In] PDH_BROWSE_DLG_CONFIG_W* pBrowseDlgData);
uint PdhBrowseCountersA([In] PDH_BROWSE_DLG_CONFIG_A* pBrowseDlgData);
uint PdhExpandCounterPathW([Const] [In] PWSTR szWildCardPath, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszExpandedPathList, [In] [Out] uint* pcchPathListLength);
uint PdhExpandCounterPathA([Const] [In] PSTR szWildCardPath, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszExpandedPathList, [In] [Out] uint* pcchPathListLength);
uint PdhLookupPerfNameByIndexW([Const] [In] [Optional] PWSTR szMachineName, [In] uint dwNameIndex, [Out] [Optional] PWSTR szNameBuffer, [In] [Out] uint* pcchNameBufferSize);
uint PdhLookupPerfNameByIndexA([Const] [In] [Optional] PSTR szMachineName, [In] uint dwNameIndex, [Out] [Optional] PSTR szNameBuffer, [In] [Out] uint* pcchNameBufferSize);
uint PdhLookupPerfIndexByNameW([Const] [In] [Optional] PWSTR szMachineName, [Const] [In] PWSTR szNameBuffer, [Out] uint* pdwIndex);
uint PdhLookupPerfIndexByNameA([Const] [In] [Optional] PSTR szMachineName, [Const] [In] PSTR szNameBuffer, [Out] uint* pdwIndex);
uint PdhExpandWildCardPathA([Const] [In] [Optional] PSTR szDataSource, [Const] [In] PSTR szWildCardPath, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszExpandedPathList, [In] [Out] uint* pcchPathListLength, [In] uint dwFlags);
uint PdhExpandWildCardPathW([Const] [In] [Optional] PWSTR szDataSource, [Const] [In] PWSTR szWildCardPath, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszExpandedPathList, [In] [Out] uint* pcchPathListLength, [In] uint dwFlags);
uint PdhOpenLogW([Const] [In] PWSTR szLogFileName, [In] PDH_LOG dwAccessFlags, [In] [Out] PDH_LOG_TYPE* lpdwLogType, [In] [Optional] nint hQuery, [In] uint dwMaxSize, [Const] [In] [Optional] PWSTR szUserCaption, [Out] nint* phLog);
uint PdhOpenLogA([Const] [In] PSTR szLogFileName, [In] PDH_LOG dwAccessFlags, [In] [Out] PDH_LOG_TYPE* lpdwLogType, [In] [Optional] nint hQuery, [In] uint dwMaxSize, [Const] [In] [Optional] PSTR szUserCaption, [Out] nint* phLog);
uint PdhUpdateLogW([In] nint hLog, [Const] [In] [Optional] PWSTR szUserString);
uint PdhUpdateLogA([In] nint hLog, [Const] [In] [Optional] PSTR szUserString);
uint PdhUpdateLogFileCatalog([In] nint hLog);
uint PdhGetLogFileSize([In] nint hLog, [Out] long* llSize);
uint PdhCloseLog([In] nint hLog, [In] uint dwFlags);
uint PdhSelectDataSourceW([In] HWND hWndOwner, [In] PDH_SELECT_DATA_SOURCE_FLAGS dwFlags, [In] [Out] PWSTR szDataSource, [In] [Out] uint* pcchBufferLength);
uint PdhSelectDataSourceA([In] HWND hWndOwner, [In] PDH_SELECT_DATA_SOURCE_FLAGS dwFlags, [In] [Out] PSTR szDataSource, [In] [Out] uint* pcchBufferLength);
BOOL PdhIsRealTimeQuery([In] nint hQuery);
uint PdhSetQueryTimeRange([In] nint hQuery, [In] PDH_TIME_INFO* pInfo);
uint PdhGetDataSourceTimeRangeW([Const] [In] [Optional] PWSTR szDataSource, [Out] uint* pdwNumEntries, [Out] PDH_TIME_INFO* pInfo, [In] [Out] uint* pdwBufferSize);
uint PdhGetDataSourceTimeRangeA([Const] [In] [Optional] PSTR szDataSource, [Out] uint* pdwNumEntries, [Out] PDH_TIME_INFO* pInfo, [In] [Out] uint* pdwBufferSize);
uint PdhCollectQueryDataEx([In] nint hQuery, [In] uint dwIntervalTime, [In] HANDLE hNewDataEvent);
uint PdhFormatFromRawValue([In] uint dwCounterType, [In] PDH_FMT dwFormat, [In] [Optional] long* pTimeBase, [In] PDH_RAW_COUNTER* pRawValue1, [In] PDH_RAW_COUNTER* pRawValue2, [Out] PDH_FMT_COUNTERVALUE* pFmtValue);
uint PdhGetCounterTimeBase([In] nint hCounter, [Out] long* pTimeBase);
uint PdhReadRawLogRecord([In] nint hLog, [In] FILETIME ftRecord, [Out] [Optional] PDH_RAW_LOG_RECORD* pRawLogRecord, [In] [Out] uint* pdwBufferLength);
uint PdhSetDefaultRealTimeDataSource([In] REAL_TIME_DATA_SOURCE_ID_FLAGS dwDataSourceId);
uint PdhBindInputDataSourceW([Out] nint* phDataSource, [Const] [In] [Optional] PWSTR LogFileNameList);
uint PdhBindInputDataSourceA([Out] nint* phDataSource, [Const] [In] [Optional] PSTR LogFileNameList);
uint PdhOpenQueryH([In] [Optional] nint hDataSource, [In] nuint dwUserData, [Out] nint* phQuery);
uint PdhEnumMachinesHW([In] [Optional] nint hDataSource, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszMachineList, [In] [Out] uint* pcchBufferSize);
uint PdhEnumMachinesHA([In] [Optional] nint hDataSource, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszMachineList, [In] [Out] uint* pcchBufferSize);
uint PdhEnumObjectsHW([In] [Optional] nint hDataSource, [Const] [In] [Optional] PWSTR szMachineName, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszObjectList, [In] [Out] uint* pcchBufferSize, [In] PERF_DETAIL dwDetailLevel, [In] BOOL bRefresh);
uint PdhEnumObjectsHA([In] [Optional] nint hDataSource, [Const] [In] [Optional] PSTR szMachineName, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszObjectList, [In] [Out] uint* pcchBufferSize, [In] PERF_DETAIL dwDetailLevel, [In] BOOL bRefresh);
uint PdhEnumObjectItemsHW([In] [Optional] nint hDataSource, [Const] [In] [Optional] PWSTR szMachineName, [Const] [In] PWSTR szObjectName, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszCounterList, [In] [Out] uint* pcchCounterListLength, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszInstanceList, [In] [Out] uint* pcchInstanceListLength, [In] PERF_DETAIL dwDetailLevel, [In] uint dwFlags);
uint PdhEnumObjectItemsHA([In] [Optional] nint hDataSource, [Const] [In] [Optional] PSTR szMachineName, [Const] [In] PSTR szObjectName, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszCounterList, [In] [Out] uint* pcchCounterListLength, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszInstanceList, [In] [Out] uint* pcchInstanceListLength, [In] PERF_DETAIL dwDetailLevel, [In] uint dwFlags);
uint PdhExpandWildCardPathHW([In] [Optional] nint hDataSource, [Const] [In] PWSTR szWildCardPath, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszExpandedPathList, [In] [Out] uint* pcchPathListLength, [In] uint dwFlags);
uint PdhExpandWildCardPathHA([In] [Optional] nint hDataSource, [Const] [In] PSTR szWildCardPath, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszExpandedPathList, [In] [Out] uint* pcchPathListLength, [In] uint dwFlags);
uint PdhGetDataSourceTimeRangeH([In] [Optional] nint hDataSource, [Out] uint* pdwNumEntries, [Out] PDH_TIME_INFO* pInfo, [In] [Out] uint* pdwBufferSize);
uint PdhGetDefaultPerfObjectHW([In] [Optional] nint hDataSource, [Const] [In] [Optional] PWSTR szMachineName, [Out] [Optional] PWSTR szDefaultObjectName, [In] [Out] uint* pcchBufferSize);
uint PdhGetDefaultPerfObjectHA([In] [Optional] nint hDataSource, [Const] [In] [Optional] PSTR szMachineName, [Out] [Optional] PSTR szDefaultObjectName, [In] [Out] uint* pcchBufferSize);
uint PdhGetDefaultPerfCounterHW([In] [Optional] nint hDataSource, [Const] [In] [Optional] PWSTR szMachineName, [Const] [In] PWSTR szObjectName, [Out] [Optional] PWSTR szDefaultCounterName, [In] [Out] uint* pcchBufferSize);
uint PdhGetDefaultPerfCounterHA([In] [Optional] nint hDataSource, [Const] [In] [Optional] PSTR szMachineName, [Const] [In] PSTR szObjectName, [Out] [Optional] PSTR szDefaultCounterName, [In] [Out] uint* pcchBufferSize);
uint PdhBrowseCountersHW([In] PDH_BROWSE_DLG_CONFIG_HW* pBrowseDlgData);
uint PdhBrowseCountersHA([In] PDH_BROWSE_DLG_CONFIG_HA* pBrowseDlgData);
uint PdhVerifySQLDBW([Const] [In] PWSTR szDataSource);
uint PdhVerifySQLDBA([Const] [In] PSTR szDataSource);
uint PdhCreateSQLTablesW([Const] [In] PWSTR szDataSource);
uint PdhCreateSQLTablesA([Const] [In] PSTR szDataSource);
uint PdhEnumLogSetNamesW([Const] [In] PWSTR szDataSource, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PWSTR mszDataSetNameList, [In] [Out] uint* pcchBufferLength);
uint PdhEnumLogSetNamesA([Const] [In] PSTR szDataSource, [NotNullTerminated] [NullNullTerminated] [Out] [Optional] PSTR mszDataSetNameList, [In] [Out] uint* pcchBufferLength);
uint PdhGetLogSetGUID([In] nint hLog, [Out] [Optional] Guid* pGuid, [Out] [Optional] int* pRunId);
uint PdhSetLogSetRunID([In] nint hLog, [In] int RunId);
