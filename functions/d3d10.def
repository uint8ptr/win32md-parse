HRESULT D3D10CreateDevice([In] [Optional] IDXGIAdapter pAdapter, [In] D3D10_DRIVER_TYPE DriverType, [In] HINSTANCE Software, [In] uint Flags, [In] uint SDKVersion, [Out] [Optional] ID3D10Device* ppDevice);
HRESULT D3D10CreateDeviceAndSwapChain([In] [Optional] IDXGIAdapter pAdapter, [In] D3D10_DRIVER_TYPE DriverType, [In] HINSTANCE Software, [In] uint Flags, [In] uint SDKVersion, [In] [Optional] DXGI_SWAP_CHAIN_DESC* pSwapChainDesc, [Out] [Optional] IDXGISwapChain* ppSwapChain, [Out] [Optional] ID3D10Device* ppDevice);
HRESULT D3D10CreateBlob([In] nuint NumBytes, [Out] ID3DBlob* ppBuffer);
HRESULT D3D10CompileShader([Const] [MemorySize(BytesParamIndex = 1)] [In] PSTR pSrcData, [In] nuint SrcDataSize, [Const] [In] [Optional] PSTR pFileName, [Const] [In] [Optional] D3D_SHADER_MACRO* pDefines, [In] [Optional] ID3DInclude pInclude, [Const] [In] PSTR pFunctionName, [Const] [In] PSTR pProfile, [In] uint Flags, [Out] ID3DBlob* ppShader, [Out] [Optional] ID3DBlob* ppErrorMsgs);
HRESULT D3D10DisassembleShader([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pShader, [In] nuint BytecodeLength, [In] BOOL EnableColorCode, [Const] [In] [Optional] PSTR pComments, [Out] ID3DBlob* ppDisassembly);
PSTR D3D10GetPixelShaderProfile([In] ID3D10Device pDevice);
PSTR D3D10GetVertexShaderProfile([In] ID3D10Device pDevice);
PSTR D3D10GetGeometryShaderProfile([In] ID3D10Device pDevice);
HRESULT D3D10ReflectShader([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pShaderBytecode, [In] nuint BytecodeLength, [Out] ID3D10ShaderReflection* ppReflector);
HRESULT D3D10PreprocessShader([Const] [MemorySize(BytesParamIndex = 1)] [In] PSTR pSrcData, [In] nuint SrcDataSize, [Const] [In] [Optional] PSTR pFileName, [Const] [In] [Optional] D3D_SHADER_MACRO* pDefines, [In] [Optional] ID3DInclude pInclude, [Out] ID3DBlob* ppShaderText, [Out] [Optional] ID3DBlob* ppErrorMsgs);
HRESULT D3D10GetInputSignatureBlob([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pShaderBytecode, [In] nuint BytecodeLength, [Out] ID3DBlob* ppSignatureBlob);
HRESULT D3D10GetOutputSignatureBlob([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pShaderBytecode, [In] nuint BytecodeLength, [Out] ID3DBlob* ppSignatureBlob);
HRESULT D3D10GetInputAndOutputSignatureBlob([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pShaderBytecode, [In] nuint BytecodeLength, [Out] ID3DBlob* ppSignatureBlob);
HRESULT D3D10GetShaderDebugInfo([Const] [MemorySize(BytesParamIndex = 1)] [In] void* pShaderBytecode, [In] nuint BytecodeLength, [Out] ID3DBlob* ppDebugInfo);
HRESULT D3D10StateBlockMaskUnion([In] D3D10_STATE_BLOCK_MASK* pA, [In] D3D10_STATE_BLOCK_MASK* pB, [Out] D3D10_STATE_BLOCK_MASK* pResult);
HRESULT D3D10StateBlockMaskIntersect([In] D3D10_STATE_BLOCK_MASK* pA, [In] D3D10_STATE_BLOCK_MASK* pB, [Out] D3D10_STATE_BLOCK_MASK* pResult);
HRESULT D3D10StateBlockMaskDifference([In] D3D10_STATE_BLOCK_MASK* pA, [In] D3D10_STATE_BLOCK_MASK* pB, [Out] D3D10_STATE_BLOCK_MASK* pResult);
HRESULT D3D10StateBlockMaskEnableCapture([In] [Out] D3D10_STATE_BLOCK_MASK* pMask, [In] D3D10_DEVICE_STATE_TYPES StateType, [In] uint RangeStart, [In] uint RangeLength);
HRESULT D3D10StateBlockMaskDisableCapture([In] [Out] D3D10_STATE_BLOCK_MASK* pMask, [In] D3D10_DEVICE_STATE_TYPES StateType, [In] uint RangeStart, [In] uint RangeLength);
HRESULT D3D10StateBlockMaskEnableAll([Out] D3D10_STATE_BLOCK_MASK* pMask);
HRESULT D3D10StateBlockMaskDisableAll([Out] D3D10_STATE_BLOCK_MASK* pMask);
BOOL D3D10StateBlockMaskGetSetting([In] D3D10_STATE_BLOCK_MASK* pMask, [In] D3D10_DEVICE_STATE_TYPES StateType, [In] uint Entry);
HRESULT D3D10CreateStateBlock([In] ID3D10Device pDevice, [In] D3D10_STATE_BLOCK_MASK* pStateBlockMask, [Out] ID3D10StateBlock* ppStateBlock);
HRESULT D3D10CompileEffectFromMemory([MemorySize(BytesParamIndex = 1)] [In] void* pData, [In] nuint DataLength, [Const] [In] PSTR pSrcFileName, [Const] [In] [Optional] D3D_SHADER_MACRO* pDefines, [In] [Optional] ID3DInclude pInclude, [In] uint HLSLFlags, [In] uint FXFlags, [Out] ID3DBlob* ppCompiledEffect, [Out] [Optional] ID3DBlob* ppErrors);
HRESULT D3D10CreateEffectFromMemory([MemorySize(BytesParamIndex = 1)] [In] void* pData, [In] nuint DataLength, [In] uint FXFlags, [In] ID3D10Device pDevice, [In] [Optional] ID3D10EffectPool pEffectPool, [Out] ID3D10Effect* ppEffect);
HRESULT D3D10CreateEffectPoolFromMemory([MemorySize(BytesParamIndex = 1)] [In] void* pData, [In] nuint DataLength, [In] uint FXFlags, [In] ID3D10Device pDevice, [Out] ID3D10EffectPool* ppEffectPool);
HRESULT D3D10DisassembleEffect([In] ID3D10Effect pEffect, [In] BOOL EnableColorCode, [Out] ID3DBlob* ppDisassembly);
