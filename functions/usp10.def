HRESULT ScriptFreeCache([In] [Out] void** psc);
HRESULT ScriptItemize([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] PWSTR pwcInChars, [In] int cInChars, [In] int cMaxItems, [Const] [In] [Optional] SCRIPT_CONTROL* psControl, [Const] [In] [Optional] SCRIPT_STATE* psState, [NativeArrayInfo(CountParamIndex = 2)] [Out] SCRIPT_ITEM* pItems, [Out] int* pcItems);
HRESULT ScriptLayout([In] int cRuns, [Const] [NativeArrayInfo(CountParamIndex = 0)] [In] byte* pbLevel, [NativeArrayInfo(CountParamIndex = 0)] [Out] [Optional] int* piVisualToLogical, [NativeArrayInfo(CountParamIndex = 0)] [Out] [Optional] int* piLogicalToVisual);
HRESULT ScriptShape([In] HDC hdc, [In] [Out] void** psc, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] PWSTR pwcChars, [In] int cChars, [In] int cMaxGlyphs, [In] [Out] SCRIPT_ANALYSIS* psa, [NativeArrayInfo(CountParamIndex = 4)] [Out] ushort* pwOutGlyphs, [NativeArrayInfo(CountParamIndex = 3)] [Out] ushort* pwLogClust, [NativeArrayInfo(CountParamIndex = 4)] [Out] SCRIPT_VISATTR* psva, [Out] int* pcGlyphs);
HRESULT ScriptPlace([In] HDC hdc, [In] [Out] void** psc, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] ushort* pwGlyphs, [In] int cGlyphs, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] SCRIPT_VISATTR* psva, [In] [Out] SCRIPT_ANALYSIS* psa, [NativeArrayInfo(CountParamIndex = 3)] [Out] int* piAdvance, [NativeArrayInfo(CountParamIndex = 3)] [Out] [Optional] GOFFSET* pGoffset, [Out] ABC* pABC);
HRESULT ScriptTextOut([Const] [In] HDC hdc, [In] [Out] void** psc, [In] int x, [In] int y, [In] uint fuOptions, [Const] [In] [Optional] RECT* lprc, [Const] [In] SCRIPT_ANALYSIS* psa, [Const] [Reserved] [In] PWSTR pwcReserved, [Reserved] [In] int iReserved, [Const] [NativeArrayInfo(CountParamIndex = 10)] [In] ushort* pwGlyphs, [In] int cGlyphs, [Const] [NativeArrayInfo(CountParamIndex = 10)] [In] int* piAdvance, [Const] [NativeArrayInfo(CountParamIndex = 10)] [In] [Optional] int* piJustify, [Const] [NativeArrayInfo(CountParamIndex = 10)] [In] GOFFSET* pGoffset);
HRESULT ScriptJustify([Const] [NativeArrayInfo(CountParamIndex = 2)] [In] SCRIPT_VISATTR* psva, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] int* piAdvance, [In] int cGlyphs, [In] int iDx, [In] int iMinKashida, [NativeArrayInfo(CountParamIndex = 2)] [Out] int* piJustify);
HRESULT ScriptBreak([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] PWSTR pwcChars, [In] int cChars, [Const] [In] SCRIPT_ANALYSIS* psa, [NativeArrayInfo(CountParamIndex = 1)] [Out] SCRIPT_LOGATTR* psla);
HRESULT ScriptCPtoX([In] int iCP, [In] BOOL fTrailing, [In] int cChars, [In] int cGlyphs, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] ushort* pwLogClust, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] SCRIPT_VISATTR* psva, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] int* piAdvance, [Const] [In] SCRIPT_ANALYSIS* psa, [In] [Out] int* piX);
HRESULT ScriptXtoCP([In] int iX, [In] int cChars, [In] int cGlyphs, [Const] [NativeArrayInfo(CountParamIndex = 1)] [In] ushort* pwLogClust, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] SCRIPT_VISATTR* psva, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] int* piAdvance, [Const] [In] SCRIPT_ANALYSIS* psa, [Out] int* piCP, [Out] int* piTrailing);
HRESULT ScriptGetLogicalWidths([Const] [In] SCRIPT_ANALYSIS* psa, [In] int cChars, [In] int cGlyphs, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] int* piGlyphWidth, [Const] [NativeArrayInfo(CountParamIndex = 1)] [In] ushort* pwLogClust, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] SCRIPT_VISATTR* psva, [NativeArrayInfo(CountParamIndex = 1)] [In] int* piDx);
HRESULT ScriptApplyLogicalWidth([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] int* piDx, [In] int cChars, [In] int cGlyphs, [Const] [NativeArrayInfo(CountParamIndex = 1)] [In] ushort* pwLogClust, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] SCRIPT_VISATTR* psva, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] int* piAdvance, [Const] [In] SCRIPT_ANALYSIS* psa, [In] [Out] [Optional] ABC* pABC, [NativeArrayInfo(CountParamIndex = 2)] [Out] int* piJustify);
HRESULT ScriptGetCMap([In] HDC hdc, [In] [Out] void** psc, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] PWSTR pwcInChars, [In] int cChars, [In] uint dwFlags, [NativeArrayInfo(CountParamIndex = 3)] [Out] ushort* pwOutGlyphs);
HRESULT ScriptGetGlyphABCWidth([In] HDC hdc, [In] [Out] void** psc, [In] ushort wGlyph, [Out] ABC* pABC);
HRESULT ScriptGetProperties([Const] [Out] SCRIPT_PROPERTIES*** ppSp, [Out] int* piNumScripts);
HRESULT ScriptGetFontProperties([In] HDC hdc, [In] [Out] void** psc, [Out] SCRIPT_FONTPROPERTIES* sfp);
HRESULT ScriptCacheGetHeight([In] HDC hdc, [In] [Out] void** psc, [Out] int* tmHeight);
HRESULT ScriptStringAnalyse([In] HDC hdc, [Const] [In] void* pString, [In] int cString, [In] int cGlyphs, [In] int iCharset, [In] uint dwFlags, [In] int iReqWidth, [In] [Optional] SCRIPT_CONTROL* psControl, [In] [Optional] SCRIPT_STATE* psState, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] int* piDx, [In] [Optional] SCRIPT_TABDEF* pTabdef, [Const] [In] byte* pbInClass, [Out] void** pssa);
HRESULT ScriptStringFree([In] [Out] void** pssa);
SIZE* ScriptString_pSize([In] void* ssa);
int* ScriptString_pcOutChars([In] void* ssa);
SCRIPT_LOGATTR* ScriptString_pLogAttr([In] void* ssa);
HRESULT ScriptStringGetOrder([In] void* ssa, [In] [Out] uint* puOrder);
HRESULT ScriptStringCPtoX([In] void* ssa, [In] int icp, [In] BOOL fTrailing, [Out] int* pX);
HRESULT ScriptStringXtoCP([In] void* ssa, [In] int iX, [Out] int* piCh, [Out] int* piTrailing);
HRESULT ScriptStringGetLogicalWidths([In] void* ssa, [In] [Out] int* piDx);
HRESULT ScriptStringValidate([In] void* ssa);
HRESULT ScriptStringOut([In] void* ssa, [In] int iX, [In] int iY, [In] ETO_OPTIONS uOptions, [Const] [In] [Optional] RECT* prc, [In] int iMinSel, [In] int iMaxSel, [In] BOOL fDisabled);
HRESULT ScriptIsComplex([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] PWSTR pwcInChars, [In] int cInChars, [In] SCRIPT_IS_COMPLEX_FLAGS dwFlags);
HRESULT ScriptRecordDigitSubstitution([In] uint Locale, [Out] SCRIPT_DIGITSUBSTITUTE* psds);
HRESULT ScriptApplyDigitSubstitution([Const] [In] SCRIPT_DIGITSUBSTITUTE* psds, [Out] SCRIPT_CONTROL* psc, [Out] SCRIPT_STATE* pss);
HRESULT ScriptShapeOpenType([In] [Optional] HDC hdc, [In] [Out] void** psc, [In] [Out] SCRIPT_ANALYSIS* psa, [In] uint tagScript, [In] uint tagLangSys, [NativeArrayInfo(CountParamIndex = 7)] [In] [Optional] int* rcRangeChars, [NativeArrayInfo(CountParamIndex = 7)] [In] [Optional] TEXTRANGE_PROPERTIES** rpRangeProperties, [In] int cRanges, [Const] [NativeArrayInfo(CountParamIndex = 9)] [In] PWSTR pwcChars, [In] int cChars, [In] int cMaxGlyphs, [NativeArrayInfo(CountParamIndex = 9)] [Out] ushort* pwLogClust, [NativeArrayInfo(CountParamIndex = 9)] [Out] SCRIPT_CHARPROP* pCharProps, [NativeArrayInfo(CountParamIndex = 10)] [Out] ushort* pwOutGlyphs, [NativeArrayInfo(CountParamIndex = 10)] [Out] SCRIPT_GLYPHPROP* pOutGlyphProps, [Out] int* pcGlyphs);
HRESULT ScriptPlaceOpenType([In] [Optional] HDC hdc, [In] [Out] void** psc, [In] [Out] SCRIPT_ANALYSIS* psa, [In] uint tagScript, [In] uint tagLangSys, [NativeArrayInfo(CountParamIndex = 7)] [In] [Optional] int* rcRangeChars, [NativeArrayInfo(CountParamIndex = 7)] [In] [Optional] TEXTRANGE_PROPERTIES** rpRangeProperties, [In] int cRanges, [Const] [NativeArrayInfo(CountParamIndex = 11)] [In] PWSTR pwcChars, [NativeArrayInfo(CountParamIndex = 11)] [In] ushort* pwLogClust, [NativeArrayInfo(CountParamIndex = 11)] [In] SCRIPT_CHARPROP* pCharProps, [In] int cChars, [Const] [NativeArrayInfo(CountParamIndex = 14)] [In] ushort* pwGlyphs, [Const] [NativeArrayInfo(CountParamIndex = 14)] [In] SCRIPT_GLYPHPROP* pGlyphProps, [In] int cGlyphs, [NativeArrayInfo(CountParamIndex = 14)] [Out] int* piAdvance, [NativeArrayInfo(CountParamIndex = 14)] [Out] GOFFSET* pGoffset, [Out] [Optional] ABC* pABC);
HRESULT ScriptItemizeOpenType([Const] [NativeArrayInfo(CountParamIndex = 1)] [In] PWSTR pwcInChars, [In] int cInChars, [In] int cMaxItems, [Const] [In] [Optional] SCRIPT_CONTROL* psControl, [Const] [In] [Optional] SCRIPT_STATE* psState, [NativeArrayInfo(CountParamIndex = 2)] [Out] SCRIPT_ITEM* pItems, [NativeArrayInfo(CountParamIndex = 2)] [Out] uint* pScriptTags, [Out] int* pcItems);
HRESULT ScriptGetFontScriptTags([In] [Optional] HDC hdc, [In] [Out] void** psc, [In] [Optional] SCRIPT_ANALYSIS* psa, [In] int cMaxTags, [NativeArrayInfo(CountParamIndex = 3)] [Out] uint* pScriptTags, [Out] int* pcTags);
HRESULT ScriptGetFontLanguageTags([In] [Optional] HDC hdc, [In] [Out] void** psc, [In] [Optional] SCRIPT_ANALYSIS* psa, [In] uint tagScript, [In] int cMaxTags, [NativeArrayInfo(CountParamIndex = 4)] [Out] uint* pLangsysTags, [Out] int* pcTags);
HRESULT ScriptGetFontFeatureTags([In] [Optional] HDC hdc, [In] [Out] void** psc, [In] [Optional] SCRIPT_ANALYSIS* psa, [In] uint tagScript, [In] uint tagLangSys, [In] int cMaxTags, [NativeArrayInfo(CountParamIndex = 5)] [Out] uint* pFeatureTags, [Out] int* pcTags);
HRESULT ScriptGetFontAlternateGlyphs([In] [Optional] HDC hdc, [In] [Out] void** psc, [In] [Optional] SCRIPT_ANALYSIS* psa, [In] uint tagScript, [In] uint tagLangSys, [In] uint tagFeature, [In] ushort wGlyphId, [In] int cMaxAlternates, [NativeArrayInfo(CountParamIndex = 7)] [Out] ushort* pAlternateGlyphs, [Out] int* pcAlternates);
HRESULT ScriptSubstituteSingleGlyph([In] [Optional] HDC hdc, [In] [Out] void** psc, [In] [Optional] SCRIPT_ANALYSIS* psa, [In] uint tagScript, [In] uint tagLangSys, [In] uint tagFeature, [In] int lParameter, [In] ushort wGlyphId, [Out] ushort* pwOutGlyphId);
HRESULT ScriptPositionSingleGlyph([In] [Optional] HDC hdc, [In] [Out] void** psc, [In] [Optional] SCRIPT_ANALYSIS* psa, [In] uint tagScript, [In] uint tagLangSys, [In] uint tagFeature, [In] int lParameter, [In] ushort wGlyphId, [In] int iAdvance, [In] GOFFSET GOffset, [Out] int* piOutAdvance, [Out] GOFFSET* pOutGoffset);
