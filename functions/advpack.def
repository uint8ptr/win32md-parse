HRESULT RunSetupCommandA([In] HWND hWnd, [Const] [In] PSTR szCmdName, [Const] [In] PSTR szInfSection, [Const] [In] PSTR szDir, [Const] [In] PSTR lpszTitle, [In] [Out] HANDLE* phEXE, [In] uint dwFlags, [In] [Out] void* pvReserved);
HRESULT RunSetupCommandW([In] HWND hWnd, [Const] [In] PWSTR szCmdName, [Const] [In] PWSTR szInfSection, [Const] [In] PWSTR szDir, [Const] [In] PWSTR lpszTitle, [In] [Out] HANDLE* phEXE, [In] uint dwFlags, [In] [Out] void* pvReserved);
uint NeedRebootInit();
BOOL NeedReboot([In] uint dwRebootCheck);
HRESULT RebootCheckOnInstallA([In] HWND hwnd, [Const] [In] PSTR pszINF, [Const] [In] PSTR pszSec, [In] uint dwReserved);
HRESULT RebootCheckOnInstallW([In] HWND hwnd, [Const] [In] PWSTR pszINF, [Const] [In] PWSTR pszSec, [In] uint dwReserved);
HRESULT TranslateInfStringA([Const] [In] PSTR pszInfFilename, [Const] [In] PSTR pszInstallSection, [Const] [In] PSTR pszTranslateSection, [Const] [In] PSTR pszTranslateKey, [NativeArrayInfo(CountParamIndex = 5)] [Out] [Optional] PSTR pszBuffer, [In] uint cchBuffer, [Out] uint* pdwRequiredSize, [Reserved] [In] [Out] void* pvReserved);
HRESULT TranslateInfStringW([Const] [In] PWSTR pszInfFilename, [Const] [In] PWSTR pszInstallSection, [Const] [In] PWSTR pszTranslateSection, [Const] [In] PWSTR pszTranslateKey, [NativeArrayInfo(CountParamIndex = 5)] [Out] [Optional] PWSTR pszBuffer, [In] uint cchBuffer, [Out] uint* pdwRequiredSize, [Reserved] [In] [Out] void* pvReserved);
HRESULT RegInstallA([In] HINSTANCE hmod, [Const] [In] PSTR pszSection, [Const] [In] STRTABLEA* pstTable);
HRESULT RegInstallW([In] HINSTANCE hmod, [Const] [In] PWSTR pszSection, [Const] [In] STRTABLEW* pstTable);
HRESULT LaunchINFSectionExW([In] [Optional] HWND hwnd, [In] [Optional] HINSTANCE hInstance, [In] PWSTR pszParms, [In] int nShow);
HRESULT ExecuteCabA([In] HWND hwnd, [In] [Out] CABINFOA* pCab, [In] [Out] void* pReserved);
HRESULT ExecuteCabW([In] HWND hwnd, [In] [Out] CABINFOW* pCab, [In] [Out] void* pReserved);
HRESULT AdvInstallFileA([In] HWND hwnd, [Const] [In] PSTR lpszSourceDir, [Const] [In] PSTR lpszSourceFile, [Const] [In] PSTR lpszDestDir, [Const] [In] PSTR lpszDestFile, [In] uint dwFlags, [In] uint dwReserved);
HRESULT AdvInstallFileW([In] HWND hwnd, [Const] [In] PWSTR lpszSourceDir, [Const] [In] PWSTR lpszSourceFile, [Const] [In] PWSTR lpszDestDir, [Const] [In] PWSTR lpszDestFile, [In] uint dwFlags, [In] uint dwReserved);
HRESULT RegSaveRestoreA([In] HWND hWnd, [Const] [In] PSTR pszTitleString, [In] HKEY hkBckupKey, [Const] [In] PSTR pcszRootKey, [Const] [In] PSTR pcszSubKey, [Const] [In] PSTR pcszValueName, [In] uint dwFlags);
HRESULT RegSaveRestoreW([In] HWND hWnd, [Const] [In] PWSTR pszTitleString, [In] HKEY hkBckupKey, [Const] [In] PWSTR pcszRootKey, [Const] [In] PWSTR pcszSubKey, [Const] [In] PWSTR pcszValueName, [In] uint dwFlags);
HRESULT RegSaveRestoreOnINFA([In] HWND hWnd, [Const] [In] PSTR pszTitle, [Const] [In] PSTR pszINF, [Const] [In] PSTR pszSection, [In] HKEY hHKLMBackKey, [In] HKEY hHKCUBackKey, [In] uint dwFlags);
HRESULT RegSaveRestoreOnINFW([In] HWND hWnd, [Const] [In] PWSTR pszTitle, [Const] [In] PWSTR pszINF, [Const] [In] PWSTR pszSection, [In] HKEY hHKLMBackKey, [In] HKEY hHKCUBackKey, [In] uint dwFlags);
HRESULT RegRestoreAllA([In] [Optional] HWND hWnd, [Const] [In] [Optional] PSTR pszTitleString, [In] HKEY hkBckupKey);
HRESULT RegRestoreAllW([In] [Optional] HWND hWnd, [Const] [In] [Optional] PWSTR pszTitleString, [In] HKEY hkBckupKey);
HRESULT FileSaveRestoreW([In] HWND hDlg, [In] [Optional] PWSTR lpFileList, [Const] [In] PWSTR lpDir, [Const] [In] PWSTR lpBaseName, [In] uint dwFlags);
HRESULT FileSaveRestoreOnINFA([In] HWND hWnd, [Const] [In] PSTR pszTitle, [Const] [In] PSTR pszINF, [Const] [In] PSTR pszSection, [Const] [In] PSTR pszBackupDir, [Const] [In] PSTR pszBaseBackupFile, [In] uint dwFlags);
HRESULT FileSaveRestoreOnINFW([In] HWND hWnd, [Const] [In] PWSTR pszTitle, [Const] [In] PWSTR pszINF, [Const] [In] PWSTR pszSection, [Const] [In] PWSTR pszBackupDir, [Const] [In] PWSTR pszBaseBackupFile, [In] uint dwFlags);
HRESULT AddDelBackupEntryA([Const] [In] [Optional] PSTR lpcszFileList, [Const] [In] [Optional] PSTR lpcszBackupDir, [Const] [In] [Optional] PSTR lpcszBaseName, [In] uint dwFlags);
HRESULT AddDelBackupEntryW([Const] [In] [Optional] PWSTR lpcszFileList, [Const] [In] [Optional] PWSTR lpcszBackupDir, [Const] [In] [Optional] PWSTR lpcszBaseName, [In] uint dwFlags);
HRESULT FileSaveMarkNotExistA([Const] [In] [Optional] PSTR lpFileList, [Const] [In] [Optional] PSTR lpDir, [Const] [In] [Optional] PSTR lpBaseName);
HRESULT FileSaveMarkNotExistW([Const] [In] [Optional] PWSTR lpFileList, [Const] [In] [Optional] PWSTR lpDir, [Const] [In] [Optional] PWSTR lpBaseName);
HRESULT GetVersionFromFileA([Const] [In] PSTR lpszFilename, [Out] uint* pdwMSVer, [Out] uint* pdwLSVer, [In] BOOL bVersion);
HRESULT GetVersionFromFileW([Const] [In] PWSTR lpszFilename, [Out] uint* pdwMSVer, [Out] uint* pdwLSVer, [In] BOOL bVersion);
HRESULT GetVersionFromFileExA([Const] [In] PSTR lpszFilename, [Out] uint* pdwMSVer, [Out] uint* pdwLSVer, [In] BOOL bVersion);
HRESULT GetVersionFromFileExW([Const] [In] PWSTR lpszFilename, [Out] uint* pdwMSVer, [Out] uint* pdwLSVer, [In] BOOL bVersion);
BOOL IsNTAdmin([In] uint dwReserved, [In] [Out] uint* lpdwReserved);
HRESULT DelNodeA([Const] [In] PSTR pszFileOrDirName, [In] uint dwFlags);
HRESULT DelNodeW([Const] [In] PWSTR pszFileOrDirName, [In] uint dwFlags);
HRESULT DelNodeRunDLL32W([In] HWND hwnd, [In] HINSTANCE hInstance, [In] [Out] PWSTR pszParms, [In] int nShow);
HRESULT OpenINFEngineA([Const] [In] PSTR pszInfFilename, [Const] [In] PSTR pszInstallSection, [In] uint dwFlags, [In] [Out] void** phInf, [In] [Out] void* pvReserved);
HRESULT OpenINFEngineW([Const] [In] PWSTR pszInfFilename, [Const] [In] PWSTR pszInstallSection, [In] uint dwFlags, [In] [Out] void** phInf, [In] [Out] void* pvReserved);
HRESULT TranslateInfStringExA([In] [Out] void* hInf, [Const] [In] PSTR pszInfFilename, [Const] [In] PSTR pszTranslateSection, [Const] [In] PSTR pszTranslateKey, [NativeArrayInfo(CountParamIndex = 5)] [In] [Out] PSTR pszBuffer, [In] uint dwBufferSize, [Out] uint* pdwRequiredSize, [Reserved] [In] [Out] void* pvReserved);
HRESULT TranslateInfStringExW([In] [Out] void* hInf, [Const] [In] PWSTR pszInfFilename, [Const] [In] PWSTR pszTranslateSection, [Const] [In] PWSTR pszTranslateKey, [NativeArrayInfo(CountParamIndex = 5)] [In] [Out] PWSTR pszBuffer, [In] uint dwBufferSize, [Out] uint* pdwRequiredSize, [Reserved] [In] [Out] void* pvReserved);
HRESULT CloseINFEngine([In] [Out] void* hInf);
HRESULT ExtractFilesA([Const] [In] PSTR pszCabName, [Const] [In] PSTR pszExpandDir, [In] uint dwFlags, [Const] [In] PSTR pszFileList, [In] [Out] void* lpReserved, [In] uint dwReserved);
HRESULT ExtractFilesW([Const] [In] PWSTR pszCabName, [Const] [In] PWSTR pszExpandDir, [In] uint dwFlags, [Const] [In] PWSTR pszFileList, [In] [Out] void* lpReserved, [In] uint dwReserved);
int LaunchINFSectionW([In] HWND hwndOwner, [In] HINSTANCE hInstance, [In] [Out] PWSTR pszParams, [In] int nShow);
HRESULT UserInstStubWrapperA([In] HWND hwnd, [In] HINSTANCE hInstance, [Const] [In] PSTR pszParms, [In] int nShow);
HRESULT UserInstStubWrapperW([In] HWND hwnd, [In] HINSTANCE hInstance, [Const] [In] PWSTR pszParms, [In] int nShow);
HRESULT UserUnInstStubWrapperA([In] HWND hwnd, [In] HINSTANCE hInstance, [Const] [In] PSTR pszParms, [In] int nShow);
HRESULT UserUnInstStubWrapperW([In] HWND hwnd, [In] HINSTANCE hInstance, [Const] [In] PWSTR pszParms, [In] int nShow);
HRESULT SetPerUserSecValuesA([In] [Out] PERUSERSECTIONA* pPerUser);
HRESULT SetPerUserSecValuesW([In] [Out] PERUSERSECTIONW* pPerUser);
