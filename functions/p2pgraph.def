HRESULT PeerGraphStartup([In] ushort wVersionRequested, [Out] PEER_VERSION_DATA* pVersionData);
HRESULT PeerGraphShutdown();
void PeerGraphFreeData([In] void* pvData);
HRESULT PeerGraphGetItemCount([In] void* hPeerEnum, [Out] uint* pCount);
HRESULT PeerGraphGetNextItem([In] void* hPeerEnum, [In] [Out] uint* pCount, [Out] void*** pppvItems);
HRESULT PeerGraphEndEnumeration([In] void* hPeerEnum);
HRESULT PeerGraphCreate([In] PEER_GRAPH_PROPERTIES* pGraphProperties, [Const] [In] PWSTR pwzDatabaseName, [In] [Optional] PEER_SECURITY_INTERFACE* pSecurityInterface, [Out] void** phGraph);
HRESULT PeerGraphOpen([Const] [In] PWSTR pwzGraphId, [Const] [In] PWSTR pwzPeerId, [Const] [In] PWSTR pwzDatabaseName, [In] [Optional] PEER_SECURITY_INTERFACE* pSecurityInterface, [In] uint cRecordTypeSyncPrecedence, [Const] [NativeArrayInfo(CountParamIndex = 4)] [In] [Optional] Guid* pRecordTypeSyncPrecedence, [Out] void** phGraph);
HRESULT PeerGraphListen([In] void* hGraph, [In] [Optional] uint dwScope, [In] [Optional] uint dwScopeId, [In] [Optional] ushort wPort);
HRESULT PeerGraphConnect([In] void* hGraph, [Const] [In] [Optional] PWSTR pwzPeerId, [In] PEER_ADDRESS* pAddress, [Out] ulong* pullConnectionId);
HRESULT PeerGraphClose([In] void* hGraph);
HRESULT PeerGraphDelete([Const] [In] PWSTR pwzGraphId, [Const] [In] PWSTR pwzPeerId, [Const] [In] PWSTR pwzDatabaseName);
HRESULT PeerGraphGetStatus([In] void* hGraph, [Out] uint* pdwStatus);
HRESULT PeerGraphGetProperties([In] void* hGraph, [Out] PEER_GRAPH_PROPERTIES** ppGraphProperties);
HRESULT PeerGraphSetProperties([In] void* hGraph, [In] PEER_GRAPH_PROPERTIES* pGraphProperties);
HRESULT PeerGraphRegisterEvent([In] void* hGraph, [In] HANDLE hEvent, [In] uint cEventRegistrations, [NativeArrayInfo(CountParamIndex = 2)] [In] PEER_GRAPH_EVENT_REGISTRATION* pEventRegistrations, [Out] void** phPeerEvent);
HRESULT PeerGraphUnregisterEvent([In] void* hPeerEvent);
HRESULT PeerGraphGetEventData([In] void* hPeerEvent, [Out] PEER_GRAPH_EVENT_DATA** ppEventData);
HRESULT PeerGraphGetRecord([In] void* hGraph, [Const] [In] Guid* pRecordId, [Out] PEER_RECORD** ppRecord);
HRESULT PeerGraphAddRecord([In] void* hGraph, [In] PEER_RECORD* pRecord, [Out] Guid* pRecordId);
HRESULT PeerGraphUpdateRecord([In] void* hGraph, [In] PEER_RECORD* pRecord);
HRESULT PeerGraphDeleteRecord([In] void* hGraph, [Const] [In] Guid* pRecordId, [In] BOOL fLocal);
HRESULT PeerGraphEnumRecords([In] void* hGraph, [Const] [In] [Optional] Guid* pRecordType, [Const] [In] [Optional] PWSTR pwzPeerId, [Out] void** phPeerEnum);
HRESULT PeerGraphSearchRecords([In] void* hGraph, [Const] [In] PWSTR pwzCriteria, [Out] void** phPeerEnum);
HRESULT PeerGraphExportDatabase([In] void* hGraph, [Const] [In] PWSTR pwzFilePath);
HRESULT PeerGraphImportDatabase([In] void* hGraph, [Const] [In] PWSTR pwzFilePath);
HRESULT PeerGraphValidateDeferredRecords([In] void* hGraph, [In] uint cRecordIds, [Const] [NativeArrayInfo(CountParamIndex = 1)] [In] Guid* pRecordIds);
HRESULT PeerGraphOpenDirectConnection([In] void* hGraph, [Const] [In] PWSTR pwzPeerId, [In] PEER_ADDRESS* pAddress, [Out] ulong* pullConnectionId);
HRESULT PeerGraphSendData([In] void* hGraph, [In] ulong ullConnectionId, [Const] [In] Guid* pType, [In] uint cbData, [MemorySize(BytesParamIndex = 3)] [In] void* pvData);
HRESULT PeerGraphCloseDirectConnection([In] void* hGraph, [In] ulong ullConnectionId);
HRESULT PeerGraphEnumConnections([In] void* hGraph, [In] uint dwFlags, [Out] void** phPeerEnum);
HRESULT PeerGraphEnumNodes([In] void* hGraph, [Const] [In] [Optional] PWSTR pwzPeerId, [Out] void** phPeerEnum);
HRESULT PeerGraphSetPresence([In] void* hGraph, [In] BOOL fPresent);
HRESULT PeerGraphGetNodeInfo([In] void* hGraph, [In] ulong ullNodeId, [Out] PEER_NODE_INFO** ppNodeInfo);
HRESULT PeerGraphSetNodeAttributes([In] void* hGraph, [Const] [In] PWSTR pwzAttributes);
HRESULT PeerGraphPeerTimeToUniversalTime([In] void* hGraph, [In] FILETIME* pftPeerTime, [Out] FILETIME* pftUniversalTime);
HRESULT PeerGraphUniversalTimeToPeerTime([In] void* hGraph, [In] FILETIME* pftUniversalTime, [Out] FILETIME* pftPeerTime);
