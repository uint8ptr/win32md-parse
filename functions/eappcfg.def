uint EapHostPeerGetMethods([In] [Out] EAP_METHOD_INFO_ARRAY* pEapMethodInfoArray, [In] [Out] EAP_ERROR** ppEapError);
uint EapHostPeerGetMethodProperties([In] uint dwVersion, [In] uint dwFlags, [In] EAP_METHOD_TYPE eapMethodType, [In] HANDLE hUserImpersonationToken, [In] uint dwEapConnDataSize, [Const] [NativeArrayInfo(CountParamIndex = 4)] [In] byte* pbEapConnData, [In] uint dwUserDataSize, [Const] [NativeArrayInfo(CountParamIndex = 6)] [In] byte* pbUserData, [In] [Out] EAP_METHOD_PROPERTY_ARRAY* pMethodPropertyArray, [In] [Out] EAP_ERROR** ppEapError);
uint EapHostPeerInvokeConfigUI([In] HWND hwndParent, [In] uint dwFlags, [In] EAP_METHOD_TYPE eapMethodType, [In] uint dwSizeOfConfigIn, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] byte* pConfigIn, [In] [Out] uint* pdwSizeOfConfigOut, [In] [Out] byte** ppConfigOut, [In] [Out] EAP_ERROR** ppEapError);
uint EapHostPeerQueryCredentialInputFields([In] HANDLE hUserImpersonationToken, [In] EAP_METHOD_TYPE eapMethodType, [In] uint dwFlags, [In] uint dwEapConnDataSize, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] byte* pbEapConnData, [In] [Out] EAP_CONFIG_INPUT_FIELD_ARRAY* pEapConfigInputFieldArray, [In] [Out] EAP_ERROR** ppEapError);
uint EapHostPeerQueryUserBlobFromCredentialInputFields([In] HANDLE hUserImpersonationToken, [In] EAP_METHOD_TYPE eapMethodType, [In] uint dwFlags, [In] uint dwEapConnDataSize, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] byte* pbEapConnData, [Const] [In] EAP_CONFIG_INPUT_FIELD_ARRAY* pEapConfigInputFieldArray, [In] [Out] uint* pdwUserBlobSize, [NativeArrayInfo(CountParamIndex = 6)] [In] [Out] byte** ppbUserBlob, [In] [Out] EAP_ERROR** ppEapError);
uint EapHostPeerInvokeIdentityUI([In] uint dwVersion, [In] EAP_METHOD_TYPE eapMethodType, [In] uint dwFlags, [In] HWND hwndParent, [In] uint dwSizeofConnectionData, [Const] [NativeArrayInfo(CountParamIndex = 4)] [In] byte* pConnectionData, [In] uint dwSizeofUserData, [Const] [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] byte* pUserData, [In] [Out] uint* pdwSizeOfUserDataOut, [Out] byte** ppUserDataOut, [Out] PWSTR* ppwszIdentity, [In] [Out] EAP_ERROR** ppEapError, [In] [Out] void** ppvReserved);
uint EapHostPeerInvokeInteractiveUI([In] HWND hwndParent, [In] uint dwSizeofUIContextData, [Const] [NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] byte* pUIContextData, [In] [Out] uint* pdwSizeOfDataFromInteractiveUI, [Out] byte** ppDataFromInteractiveUI, [In] [Out] EAP_ERROR** ppEapError);
uint EapHostPeerQueryInteractiveUIInputFields([In] uint dwVersion, [In] uint dwFlags, [In] uint dwSizeofUIContextData, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] byte* pUIContextData, [In] [Out] EAP_INTERACTIVE_UI_DATA* pEapInteractiveUIData, [In] [Out] EAP_ERROR** ppEapError, [In] [Out] void** ppvReserved);
uint EapHostPeerQueryUIBlobFromInteractiveUIInputFields([In] uint dwVersion, [In] uint dwFlags, [In] uint dwSizeofUIContextData, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] byte* pUIContextData, [Const] [In] EAP_INTERACTIVE_UI_DATA* pEapInteractiveUIData, [In] [Out] uint* pdwSizeOfDataFromInteractiveUI, [Out] byte** ppDataFromInteractiveUI, [In] [Out] EAP_ERROR** ppEapError, [In] [Out] void** ppvReserved);
uint EapHostPeerConfigXml2Blob([In] uint dwFlags, [In] IXMLDOMNode pConfigDoc, [In] [Out] uint* pdwSizeOfConfigOut, [Out] byte** ppConfigOut, [In] [Out] EAP_METHOD_TYPE* pEapMethodType, [In] [Out] EAP_ERROR** ppEapError);
uint EapHostPeerCredentialsXml2Blob([In] uint dwFlags, [In] IXMLDOMNode pCredentialsDoc, [In] uint dwSizeOfConfigIn, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* pConfigIn, [In] [Out] uint* pdwSizeOfCredentialsOut, [Out] byte** ppCredentialsOut, [In] [Out] EAP_METHOD_TYPE* pEapMethodType, [In] [Out] EAP_ERROR** ppEapError);
uint EapHostPeerConfigBlob2Xml([In] uint dwFlags, [In] EAP_METHOD_TYPE eapMethodType, [In] uint dwSizeOfConfigIn, [NativeArrayInfo(CountParamIndex = 2)] [In] byte* pConfigIn, [Out] IXMLDOMDocument2* ppConfigDoc, [In] [Out] EAP_ERROR** ppEapError);
void EapHostPeerFreeMemory([In] [Out] byte* pData);
void EapHostPeerFreeErrorMemory([In] [Out] EAP_ERROR* pEapError);
