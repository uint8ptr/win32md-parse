uint WlanOpenHandle([In] uint dwClientVersion, [Reserved] [In] [Out] void* pReserved, [Out] uint* pdwNegotiatedVersion, [Out] HANDLE* phClientHandle);
uint WlanCloseHandle([In] HANDLE hClientHandle, [Reserved] [In] [Out] void* pReserved);
uint WlanEnumInterfaces([In] HANDLE hClientHandle, [Reserved] [In] [Out] void* pReserved, [Out] WLAN_INTERFACE_INFO_LIST** ppInterfaceList);
uint WlanSetAutoConfigParameter([In] HANDLE hClientHandle, [In] WLAN_AUTOCONF_OPCODE OpCode, [In] uint dwDataSize, [Const] [MemorySize(BytesParamIndex = 2)] [In] void* pData, [Reserved] [In] [Out] void* pReserved);
uint WlanQueryAutoConfigParameter([In] HANDLE hClientHandle, [In] WLAN_AUTOCONF_OPCODE OpCode, [Reserved] [In] [Out] void* pReserved, [Out] uint* pdwDataSize, [Out] void** ppData, [Out] [Optional] WLAN_OPCODE_VALUE_TYPE* pWlanOpcodeValueType);
uint WlanGetInterfaceCapability([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Reserved] [In] [Out] void* pReserved, [Out] WLAN_INTERFACE_CAPABILITY** ppCapability);
uint WlanSetInterface([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [In] WLAN_INTF_OPCODE OpCode, [In] uint dwDataSize, [Const] [MemorySize(BytesParamIndex = 3)] [In] void* pData, [Reserved] [In] [Out] void* pReserved);
uint WlanQueryInterface([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [In] WLAN_INTF_OPCODE OpCode, [Reserved] [In] [Out] void* pReserved, [Out] uint* pdwDataSize, [Out] void** ppData, [Out] [Optional] WLAN_OPCODE_VALUE_TYPE* pWlanOpcodeValueType);
uint WlanIhvControl([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [In] WLAN_IHV_CONTROL_TYPE Type, [In] uint dwInBufferSize, [MemorySize(BytesParamIndex = 3)] [In] void* pInBuffer, [In] uint dwOutBufferSize, [MemorySize(BytesParamIndex = 5)] [In] [Out] [Optional] void* pOutBuffer, [Out] uint* pdwBytesReturned);
uint WlanScan([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] [Optional] DOT11_SSID* pDot11Ssid, [Const] [In] [Optional] WLAN_RAW_DATA* pIeData, [Reserved] [In] [Out] void* pReserved);
uint WlanGetAvailableNetworkList([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [In] uint dwFlags, [Reserved] [In] [Out] void* pReserved, [Out] WLAN_AVAILABLE_NETWORK_LIST** ppAvailableNetworkList);
uint WlanGetAvailableNetworkList2([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [In] uint dwFlags, [Reserved] [In] [Out] void* pReserved, [Out] WLAN_AVAILABLE_NETWORK_LIST_V2** ppAvailableNetworkList);
uint WlanGetNetworkBssList([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] [Optional] DOT11_SSID* pDot11Ssid, [In] DOT11_BSS_TYPE dot11BssType, [In] BOOL bSecurityEnabled, [Reserved] [In] [Out] void* pReserved, [Out] WLAN_BSS_LIST** ppWlanBssList);
uint WlanConnect([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] WLAN_CONNECTION_PARAMETERS* pConnectionParameters, [Reserved] [In] [Out] void* pReserved);
uint WlanConnect2([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] WLAN_CONNECTION_PARAMETERS_V2* pConnectionParameters, [Reserved] [In] [Out] void* pReserved);
uint WlanDisconnect([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Reserved] [In] [Out] void* pReserved);
uint WlanRegisterNotification([In] HANDLE hClientHandle, [In] uint dwNotifSource, [In] BOOL bIgnoreDuplicate, [In] [Optional] WLAN_NOTIFICATION_CALLBACK funcCallback, [In] [Optional] void* pCallbackContext, [Reserved] [In] [Out] void* pReserved, [Out] [Optional] uint* pdwPrevNotifSource);
uint WlanGetProfile([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] PWSTR strProfileName, [Reserved] [In] [Out] void* pReserved, [Out] PWSTR* pstrProfileXml, [In] [Out] [Optional] uint* pdwFlags, [Out] [Optional] uint* pdwGrantedAccess);
uint WlanSetProfileEapUserData([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] PWSTR strProfileName, [In] EAP_METHOD_TYPE eapType, [In] WLAN_SET_EAPHOST_FLAGS dwFlags, [In] uint dwEapUserDataSize, [Const] [MemorySize(BytesParamIndex = 5)] [In] [Optional] byte* pbEapUserData, [Reserved] [In] [Out] void* pReserved);
uint WlanSetProfileEapXmlUserData([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] PWSTR strProfileName, [In] WLAN_SET_EAPHOST_FLAGS dwFlags, [Const] [In] PWSTR strEapXmlUserData, [Reserved] [In] [Out] void* pReserved);
uint WlanSetProfile([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [In] uint dwFlags, [Const] [In] PWSTR strProfileXml, [Const] [In] [Optional] PWSTR strAllUserProfileSecurity, [In] BOOL bOverwrite, [Reserved] [In] [Out] void* pReserved, [Out] uint* pdwReasonCode);
uint WlanDeleteProfile([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] PWSTR strProfileName, [Reserved] [In] [Out] void* pReserved);
uint WlanRenameProfile([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] PWSTR strOldProfileName, [Const] [In] PWSTR strNewProfileName, [Reserved] [In] [Out] void* pReserved);
uint WlanGetProfileList([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Reserved] [In] [Out] void* pReserved, [Out] WLAN_PROFILE_INFO_LIST** ppProfileList);
uint WlanSetProfileList([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [In] uint dwItems, [NativeArrayInfo(CountParamIndex = 2)] [In] PWSTR* strProfileNames, [Reserved] [In] [Out] void* pReserved);
uint WlanSetProfilePosition([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] PWSTR strProfileName, [In] uint dwPosition, [Reserved] [In] [Out] void* pReserved);
uint WlanSetProfileCustomUserData([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] PWSTR strProfileName, [In] uint dwDataSize, [Const] [MemorySize(BytesParamIndex = 3)] [In] byte* pData, [Reserved] [In] [Out] void* pReserved);
uint WlanGetProfileCustomUserData([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] PWSTR strProfileName, [Reserved] [In] [Out] void* pReserved, [Out] uint* pdwDataSize, [Out] byte** ppData);
uint WlanSetFilterList([In] HANDLE hClientHandle, [In] WLAN_FILTER_LIST_TYPE wlanFilterListType, [Const] [In] [Optional] DOT11_NETWORK_LIST* pNetworkList, [Reserved] [In] [Out] void* pReserved);
uint WlanGetFilterList([In] HANDLE hClientHandle, [In] WLAN_FILTER_LIST_TYPE wlanFilterListType, [Reserved] [In] [Out] void* pReserved, [Out] DOT11_NETWORK_LIST** ppNetworkList);
uint WlanSetPsdIEDataList([In] HANDLE hClientHandle, [Const] [In] [Optional] PWSTR strFormat, [Const] [In] [Optional] WLAN_RAW_DATA_LIST* pPsdIEDataList, [Reserved] [In] [Out] void* pReserved);
uint WlanSaveTemporaryProfile([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Const] [In] PWSTR strProfileName, [Const] [In] [Optional] PWSTR strAllUserProfileSecurity, [In] uint dwFlags, [In] BOOL bOverWrite, [Reserved] [In] [Out] void* pReserved);
uint WlanDeviceServiceCommand([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [In] Guid* pDeviceServiceGuid, [In] uint dwOpCode, [In] uint dwInBufferSize, [MemorySize(BytesParamIndex = 4)] [In] [Optional] void* pInBuffer, [In] uint dwOutBufferSize, [MemorySize(BytesParamIndex = 6)] [In] [Out] [Optional] void* pOutBuffer, [Out] uint* pdwBytesReturned);
uint WlanGetSupportedDeviceServices([In] HANDLE hClientHandle, [Const] [In] Guid* pInterfaceGuid, [Out] WLAN_DEVICE_SERVICE_GUID_LIST** ppDevSvcGuidList);
uint WlanRegisterDeviceServiceNotification([In] HANDLE hClientHandle, [Const] [In] [Optional] WLAN_DEVICE_SERVICE_GUID_LIST* pDevSvcGuidList);
uint WlanExtractPsdIEDataList([In] HANDLE hClientHandle, [In] uint dwIeDataSize, [Const] [MemorySize(BytesParamIndex = 1)] [In] byte* pRawIeData, [Const] [In] PWSTR strFormat, [Reserved] [In] [Out] void* pReserved, [Out] WLAN_RAW_DATA_LIST** ppPsdIEDataList);
uint WlanReasonCodeToString([In] uint dwReasonCode, [In] uint dwBufferSize, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 1)] [In] PWSTR pStringBuffer, [Reserved] [In] [Out] void* pReserved);
void* WlanAllocateMemory([In] uint dwMemorySize);
void WlanFreeMemory([In] void* pMemory);
uint WlanSetSecuritySettings([In] HANDLE hClientHandle, [In] WLAN_SECURABLE_OBJECT SecurableObject, [Const] [In] PWSTR strModifiedSDDL);
uint WlanGetSecuritySettings([In] HANDLE hClientHandle, [In] WLAN_SECURABLE_OBJECT SecurableObject, [Out] [Optional] WLAN_OPCODE_VALUE_TYPE* pValueType, [Out] PWSTR* pstrCurrentSDDL, [Out] uint* pdwGrantedAccess);
uint WlanHostedNetworkStartUsing([In] HANDLE hClientHandle, [Out] [Optional] WLAN_HOSTED_NETWORK_REASON* pFailReason, [Reserved] [In] [Out] void* pvReserved);
uint WlanHostedNetworkStopUsing([In] HANDLE hClientHandle, [Out] [Optional] WLAN_HOSTED_NETWORK_REASON* pFailReason, [Reserved] [In] [Out] void* pvReserved);
uint WlanHostedNetworkForceStart([In] HANDLE hClientHandle, [Out] [Optional] WLAN_HOSTED_NETWORK_REASON* pFailReason, [Reserved] [In] [Out] void* pvReserved);
uint WlanHostedNetworkForceStop([In] HANDLE hClientHandle, [Out] [Optional] WLAN_HOSTED_NETWORK_REASON* pFailReason, [Reserved] [In] [Out] void* pvReserved);
uint WlanHostedNetworkQueryProperty([In] HANDLE hClientHandle, [In] WLAN_HOSTED_NETWORK_OPCODE OpCode, [Out] uint* pdwDataSize, [Out] void** ppvData, [Out] WLAN_OPCODE_VALUE_TYPE* pWlanOpcodeValueType, [Reserved] [In] [Out] void* pvReserved);
uint WlanHostedNetworkSetProperty([In] HANDLE hClientHandle, [In] WLAN_HOSTED_NETWORK_OPCODE OpCode, [In] uint dwDataSize, [MemorySize(BytesParamIndex = 2)] [In] void* pvData, [Out] [Optional] WLAN_HOSTED_NETWORK_REASON* pFailReason, [Reserved] [In] [Out] void* pvReserved);
uint WlanHostedNetworkInitSettings([In] HANDLE hClientHandle, [Out] [Optional] WLAN_HOSTED_NETWORK_REASON* pFailReason, [Reserved] [In] [Out] void* pvReserved);
uint WlanHostedNetworkRefreshSecuritySettings([In] HANDLE hClientHandle, [Out] [Optional] WLAN_HOSTED_NETWORK_REASON* pFailReason, [Reserved] [In] [Out] void* pvReserved);
uint WlanHostedNetworkQueryStatus([In] HANDLE hClientHandle, [Out] WLAN_HOSTED_NETWORK_STATUS** ppWlanHostedNetworkStatus, [Reserved] [In] [Out] void* pvReserved);
uint WlanHostedNetworkSetSecondaryKey([In] HANDLE hClientHandle, [In] uint dwKeyLength, [MemorySize(BytesParamIndex = 1)] [In] byte* pucKeyData, [In] BOOL bIsPassPhrase, [In] BOOL bPersistent, [Out] [Optional] WLAN_HOSTED_NETWORK_REASON* pFailReason, [Reserved] [In] [Out] void* pvReserved);
uint WlanHostedNetworkQuerySecondaryKey([In] HANDLE hClientHandle, [Out] uint* pdwKeyLength, [Out] byte** ppucKeyData, [Out] BOOL* pbIsPassPhrase, [Out] BOOL* pbPersistent, [Out] [Optional] WLAN_HOSTED_NETWORK_REASON* pFailReason, [Reserved] [In] [Out] void* pvReserved);
uint WlanRegisterVirtualStationNotification([In] HANDLE hClientHandle, [In] BOOL bRegister, [Reserved] [In] [Out] void* pReserved);
uint WFDOpenHandle([In] uint dwClientVersion, [Out] uint* pdwNegotiatedVersion, [Out] HANDLE* phClientHandle);
uint WFDCloseHandle([In] HANDLE hClientHandle);
uint WFDStartOpenSession([In] HANDLE hClientHandle, [In] byte** pDeviceAddress, [In] [Optional] void* pvContext, [In] WFD_OPEN_SESSION_COMPLETE_CALLBACK pfnCallback, [Out] HANDLE* phSessionHandle);
uint WFDCancelOpenSession([In] HANDLE hSessionHandle);
uint WFDOpenLegacySession([In] HANDLE hClientHandle, [In] byte** pLegacyMacAddress, [Out] HANDLE* phSessionHandle, [Out] Guid* pGuidSessionInterface);
uint WFDCloseSession([In] HANDLE hSessionHandle);
uint WFDUpdateDeviceVisibility([In] byte** pDeviceAddress);
