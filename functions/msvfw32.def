uint VideoForWindowsVersion();
BOOL ICInfo([In] uint fccType, [In] uint fccHandler, [Out] ICINFO* lpicinfo);
BOOL ICInstall([In] uint fccType, [In] uint fccHandler, [In] LPARAM lParam, [In] PSTR szDesc, [In] uint wFlags);
BOOL ICRemove([In] uint fccType, [In] uint fccHandler, [In] uint wFlags);
LRESULT ICGetInfo([In] HIC hic, [MemorySize(BytesParamIndex = 2)] [Out] ICINFO* picinfo, [In] uint cb);
HIC ICOpen([In] uint fccType, [In] uint fccHandler, [In] uint wMode);
HIC ICOpenFunction([In] uint fccType, [In] uint fccHandler, [In] uint wMode, [In] FARPROC lpfnHandler);
LRESULT ICClose([In] HIC hic);
LRESULT ICSendMessage([In] HIC hic, [In] uint msg, [In] nuint dw1, [In] nuint dw2);
uint ICCompress([In] HIC hic, [In] uint dwFlags, [In] BITMAPINFOHEADER* lpbiOutput, [Out] void* lpData, [In] BITMAPINFOHEADER* lpbiInput, [In] void* lpBits, [Out] [Optional] uint* lpckid, [Out] [Optional] uint* lpdwFlags, [In] int lFrameNum, [In] uint dwFrameSize, [In] uint dwQuality, [In] [Optional] BITMAPINFOHEADER* lpbiPrev, [In] [Optional] void* lpPrev);
uint ICDecompress([In] HIC hic, [In] uint dwFlags, [In] BITMAPINFOHEADER* lpbiFormat, [In] void* lpData, [In] BITMAPINFOHEADER* lpbi, [Out] void* lpBits);
uint ICDrawBegin([In] HIC hic, [In] uint dwFlags, [In] [Optional] HPALETTE hpal, [In] [Optional] HWND hwnd, [In] [Optional] HDC hdc, [In] int xDst, [In] int yDst, [In] int dxDst, [In] int dyDst, [In] BITMAPINFOHEADER* lpbi, [In] int xSrc, [In] int ySrc, [In] int dxSrc, [In] int dySrc, [In] uint dwRate, [In] uint dwScale);
uint ICDraw([In] HIC hic, [In] uint dwFlags, [In] void* lpFormat, [MemorySize(BytesParamIndex = 4)] [In] [Optional] void* lpData, [In] uint cbData, [In] int lTime);
HIC ICLocate([In] uint fccType, [In] uint fccHandler, [In] BITMAPINFOHEADER* lpbiIn, [In] [Optional] BITMAPINFOHEADER* lpbiOut, [In] ushort wFlags);
HIC ICGetDisplayFormat([In] [Optional] HIC hic, [In] BITMAPINFOHEADER* lpbiIn, [Out] BITMAPINFOHEADER* lpbiOut, [In] int BitDepth, [In] int dx, [In] int dy);
HANDLE ICImageCompress([In] HIC hic, [In] uint uiFlags, [In] BITMAPINFO* lpbiIn, [In] void* lpBits, [In] [Optional] BITMAPINFO* lpbiOut, [In] int lQuality, [In] [Out] [Optional] int* plSize);
HANDLE ICImageDecompress([In] [Optional] HIC hic, [In] uint uiFlags, [In] BITMAPINFO* lpbiIn, [In] void* lpBits, [In] [Optional] BITMAPINFO* lpbiOut);
BOOL ICCompressorChoose([In] [Optional] HWND hwnd, [In] uint uiFlags, [In] [Optional] void* pvIn, [In] [Optional] void* lpData, [In] [Out] COMPVARS* pc, [In] [Optional] PSTR lpszTitle);
BOOL ICSeqCompressFrameStart([In] COMPVARS* pc, [In] BITMAPINFO* lpbiIn);
void ICSeqCompressFrameEnd([In] COMPVARS* pc);
void* ICSeqCompressFrame([In] COMPVARS* pc, [Reserved] [In] uint uiFlags, [In] void* lpBits, [Out] BOOL* pfKey, [In] [Out] [Optional] int* plSize);
void ICCompressorFree([In] COMPVARS* pc);
nint DrawDibOpen();
BOOL DrawDibClose([In] nint hdd);
void* DrawDibGetBuffer([In] nint hdd, [Out] BITMAPINFOHEADER* lpbi, [In] uint dwSize, [In] uint dwFlags);
HPALETTE DrawDibGetPalette([In] nint hdd);
BOOL DrawDibSetPalette([In] nint hdd, [In] [Optional] HPALETTE hpal);
BOOL DrawDibChangePalette([In] nint hdd, [In] int iStart, [In] int iLen, [NativeArrayInfo(CountParamIndex = 2)] [In] PALETTEENTRY* lppe);
uint DrawDibRealize([In] nint hdd, [In] HDC hdc, [In] BOOL fBackground);
BOOL DrawDibStart([In] nint hdd, [In] uint rate);
BOOL DrawDibStop([In] nint hdd);
BOOL DrawDibBegin([In] nint hdd, [In] [Optional] HDC hdc, [In] int dxDst, [In] int dyDst, [In] BITMAPINFOHEADER* lpbi, [In] int dxSrc, [In] int dySrc, [In] uint wFlags);
BOOL DrawDibDraw([In] nint hdd, [In] HDC hdc, [In] int xDst, [In] int yDst, [In] int dxDst, [In] int dyDst, [In] [Optional] BITMAPINFOHEADER* lpbi, [In] [Optional] void* lpBits, [In] int xSrc, [In] int ySrc, [In] int dxSrc, [In] int dySrc, [In] uint wFlags);
BOOL DrawDibEnd([In] nint hdd);
BOOL DrawDibTime([In] nint hdd, [Out] DRAWDIBTIME* lpddtime);
LRESULT DrawDibProfileDisplay([In] BITMAPINFOHEADER* lpbi);
HWND MCIWndCreateA([In] [Optional] HWND hwndParent, [In] [Optional] HINSTANCE hInstance, [In] uint dwStyle, [Const] [In] [Optional] PSTR szFile);
HWND MCIWndCreateW([In] [Optional] HWND hwndParent, [In] [Optional] HINSTANCE hInstance, [In] uint dwStyle, [Const] [In] [Optional] PWSTR szFile);
BOOL MCIWndRegisterClass();
BOOL GetOpenFileNamePreviewA([In] [Out] OPENFILENAMEA* lpofn);
BOOL GetSaveFileNamePreviewA([In] [Out] OPENFILENAMEA* lpofn);
BOOL GetOpenFileNamePreviewW([In] [Out] OPENFILENAMEW* lpofn);
BOOL GetSaveFileNamePreviewW([In] [Out] OPENFILENAMEW* lpofn);
