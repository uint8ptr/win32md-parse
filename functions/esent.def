int JetInit([In] [Out] [Optional] JET_INSTANCE* pinstance);
int JetInit2([In] [Out] [Optional] JET_INSTANCE* pinstance, [In] uint grbit);
int JetInit3A([In] [Out] [Optional] JET_INSTANCE* pinstance, [In] [Optional] JET_RSTINFO_A* prstInfo, [In] uint grbit);
int JetInit3W([In] [Out] [Optional] JET_INSTANCE* pinstance, [In] [Optional] JET_RSTINFO_W* prstInfo, [In] uint grbit);
int JetCreateInstanceA([Out] JET_INSTANCE* pinstance, [In] [Optional] sbyte* szInstanceName);
int JetCreateInstanceW([Out] JET_INSTANCE* pinstance, [In] [Optional] ushort* szInstanceName);
int JetCreateInstance2A([Out] JET_INSTANCE* pinstance, [In] [Optional] sbyte* szInstanceName, [In] [Optional] sbyte* szDisplayName, [In] uint grbit);
int JetCreateInstance2W([Out] JET_INSTANCE* pinstance, [In] [Optional] ushort* szInstanceName, [In] [Optional] ushort* szDisplayName, [In] uint grbit);
int JetGetInstanceMiscInfo([In] JET_INSTANCE instance, [MemorySize(BytesParamIndex = 2)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetTerm([In] JET_INSTANCE instance);
int JetTerm2([In] JET_INSTANCE instance, [In] uint grbit);
int JetStopService();
int JetStopServiceInstance([In] JET_INSTANCE instance);
int JetStopServiceInstance2([In] JET_INSTANCE instance, [Const] [In] uint grbit);
int JetStopBackup();
int JetStopBackupInstance([In] JET_INSTANCE instance);
int JetSetSystemParameterA([In] [Out] [Optional] JET_INSTANCE* pinstance, [In] [Optional] JET_SESID sesid, [In] uint paramid, [In] [Optional] JET_API_PTR lParam, [In] [Optional] sbyte* szParam);
int JetSetSystemParameterW([In] [Out] [Optional] JET_INSTANCE* pinstance, [In] [Optional] JET_SESID sesid, [In] uint paramid, [In] [Optional] JET_API_PTR lParam, [In] [Optional] ushort* szParam);
int JetGetSystemParameterA([In] JET_INSTANCE instance, [In] [Optional] JET_SESID sesid, [In] uint paramid, [Out] [Optional] JET_API_PTR* plParam, [MemorySize(BytesParamIndex = 5)] [Out] [Optional] sbyte* szParam, [In] uint cbMax);
int JetGetSystemParameterW([In] JET_INSTANCE instance, [In] [Optional] JET_SESID sesid, [In] uint paramid, [Out] [Optional] JET_API_PTR* plParam, [MemorySize(BytesParamIndex = 5)] [Out] [Optional] ushort* szParam, [In] uint cbMax);
int JetEnableMultiInstanceA([NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] JET_SETSYSPARAM_A* psetsysparam, [In] uint csetsysparam, [Out] [Optional] uint* pcsetsucceed);
int JetEnableMultiInstanceW([NativeArrayInfo(CountParamIndex = 1)] [In] [Optional] JET_SETSYSPARAM_W* psetsysparam, [In] uint csetsysparam, [Out] [Optional] uint* pcsetsucceed);
int JetGetThreadStats([MemorySize(BytesParamIndex = 1)] [Out] void* pvResult, [In] uint cbMax);
int JetBeginSessionA([In] JET_INSTANCE instance, [Out] JET_SESID* psesid, [In] [Optional] sbyte* szUserName, [In] [Optional] sbyte* szPassword);
int JetBeginSessionW([In] JET_INSTANCE instance, [Out] JET_SESID* psesid, [In] [Optional] ushort* szUserName, [In] [Optional] ushort* szPassword);
int JetDupSession([In] JET_SESID sesid, [Out] JET_SESID* psesid);
int JetEndSession([In] JET_SESID sesid, [In] uint grbit);
int JetGetVersion([In] JET_SESID sesid, [Out] uint* pwVersion);
int JetIdle([In] JET_SESID sesid, [In] uint grbit);
int JetCreateDatabaseA([In] JET_SESID sesid, [In] sbyte* szFilename, [In] [Optional] sbyte* szConnect, [Out] uint* pdbid, [In] uint grbit);
int JetCreateDatabaseW([In] JET_SESID sesid, [In] ushort* szFilename, [In] [Optional] ushort* szConnect, [Out] uint* pdbid, [In] uint grbit);
int JetCreateDatabase2A([In] JET_SESID sesid, [In] sbyte* szFilename, [Const] [In] uint cpgDatabaseSizeMax, [Out] uint* pdbid, [In] uint grbit);
int JetCreateDatabase2W([In] JET_SESID sesid, [In] ushort* szFilename, [Const] [In] uint cpgDatabaseSizeMax, [Out] uint* pdbid, [In] uint grbit);
int JetAttachDatabaseA([In] JET_SESID sesid, [In] sbyte* szFilename, [In] uint grbit);
int JetAttachDatabaseW([In] JET_SESID sesid, [In] ushort* szFilename, [In] uint grbit);
int JetAttachDatabase2A([In] JET_SESID sesid, [In] sbyte* szFilename, [Const] [In] uint cpgDatabaseSizeMax, [In] uint grbit);
int JetAttachDatabase2W([In] JET_SESID sesid, [In] ushort* szFilename, [Const] [In] uint cpgDatabaseSizeMax, [In] uint grbit);
int JetDetachDatabaseA([In] JET_SESID sesid, [In] [Optional] sbyte* szFilename);
int JetDetachDatabaseW([In] JET_SESID sesid, [In] [Optional] ushort* szFilename);
int JetDetachDatabase2A([In] JET_SESID sesid, [In] [Optional] sbyte* szFilename, [In] uint grbit);
int JetDetachDatabase2W([In] JET_SESID sesid, [In] [Optional] ushort* szFilename, [In] uint grbit);
int JetGetObjectInfoA([In] JET_SESID sesid, [In] uint dbid, [In] uint objtyp, [In] [Optional] sbyte* szContainerName, [In] [Optional] sbyte* szObjectName, [MemorySize(BytesParamIndex = 6)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetGetObjectInfoW([In] JET_SESID sesid, [In] uint dbid, [In] uint objtyp, [In] [Optional] ushort* szContainerName, [In] [Optional] ushort* szObjectName, [MemorySize(BytesParamIndex = 6)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetGetTableInfoA([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetGetTableInfoW([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetCreateTableA([In] JET_SESID sesid, [In] uint dbid, [In] sbyte* szTableName, [In] uint lPages, [In] uint lDensity, [Out] JET_TABLEID* ptableid);
int JetCreateTableW([In] JET_SESID sesid, [In] uint dbid, [In] ushort* szTableName, [In] uint lPages, [In] uint lDensity, [Out] JET_TABLEID* ptableid);
int JetCreateTableColumnIndexA([In] JET_SESID sesid, [In] uint dbid, [In] [Out] JET_TABLECREATE_A* ptablecreate);
int JetCreateTableColumnIndexW([In] JET_SESID sesid, [In] uint dbid, [In] [Out] JET_TABLECREATE_W* ptablecreate);
int JetCreateTableColumnIndex2A([In] JET_SESID sesid, [In] uint dbid, [In] [Out] JET_TABLECREATE2_A* ptablecreate);
int JetCreateTableColumnIndex2W([In] JET_SESID sesid, [In] uint dbid, [In] [Out] JET_TABLECREATE2_W* ptablecreate);
int JetCreateTableColumnIndex3A([In] JET_SESID sesid, [In] uint dbid, [In] [Out] JET_TABLECREATE3_A* ptablecreate);
int JetCreateTableColumnIndex3W([In] JET_SESID sesid, [In] uint dbid, [In] [Out] JET_TABLECREATE3_W* ptablecreate);
int JetCreateTableColumnIndex4A([In] JET_SESID sesid, [In] uint dbid, [In] [Out] JET_TABLECREATE4_A* ptablecreate);
int JetCreateTableColumnIndex4W([In] JET_SESID sesid, [In] uint dbid, [In] [Out] JET_TABLECREATE4_W* ptablecreate);
int JetDeleteTableA([In] JET_SESID sesid, [In] uint dbid, [In] sbyte* szTableName);
int JetDeleteTableW([In] JET_SESID sesid, [In] uint dbid, [In] ushort* szTableName);
int JetRenameTableA([In] JET_SESID sesid, [In] uint dbid, [In] sbyte* szName, [In] sbyte* szNameNew);
int JetRenameTableW([In] JET_SESID sesid, [In] uint dbid, [In] ushort* szName, [In] ushort* szNameNew);
int JetGetTableColumnInfoA([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] sbyte* szColumnName, [MemorySize(BytesParamIndex = 4)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetGetTableColumnInfoW([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] ushort* szColumnName, [MemorySize(BytesParamIndex = 4)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetGetColumnInfoA([In] JET_SESID sesid, [In] uint dbid, [In] sbyte* szTableName, [In] [Optional] sbyte* pColumnNameOrId, [MemorySize(BytesParamIndex = 5)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetGetColumnInfoW([In] JET_SESID sesid, [In] uint dbid, [In] ushort* szTableName, [In] [Optional] ushort* pwColumnNameOrId, [MemorySize(BytesParamIndex = 5)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetAddColumnA([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] sbyte* szColumnName, [Const] [In] JET_COLUMNDEF* pcolumndef, [Const] [MemorySize(BytesParamIndex = 5)] [In] [Optional] void* pvDefault, [In] uint cbDefault, [Out] [Optional] uint* pcolumnid);
int JetAddColumnW([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] ushort* szColumnName, [Const] [In] JET_COLUMNDEF* pcolumndef, [Const] [MemorySize(BytesParamIndex = 5)] [In] [Optional] void* pvDefault, [In] uint cbDefault, [Out] [Optional] uint* pcolumnid);
int JetDeleteColumnA([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] sbyte* szColumnName);
int JetDeleteColumnW([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] ushort* szColumnName);
int JetDeleteColumn2A([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] sbyte* szColumnName, [Const] [In] uint grbit);
int JetDeleteColumn2W([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] ushort* szColumnName, [Const] [In] uint grbit);
int JetRenameColumnA([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] sbyte* szName, [In] sbyte* szNameNew, [In] uint grbit);
int JetRenameColumnW([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] ushort* szName, [In] ushort* szNameNew, [In] uint grbit);
int JetSetColumnDefaultValueA([In] JET_SESID sesid, [In] uint dbid, [In] sbyte* szTableName, [In] sbyte* szColumnName, [Const] [MemorySize(BytesParamIndex = 5)] [In] void* pvData, [Const] [In] uint cbData, [Const] [In] uint grbit);
int JetSetColumnDefaultValueW([In] JET_SESID sesid, [In] uint dbid, [In] ushort* szTableName, [In] ushort* szColumnName, [Const] [MemorySize(BytesParamIndex = 5)] [In] void* pvData, [Const] [In] uint cbData, [Const] [In] uint grbit);
int JetGetTableIndexInfoA([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] sbyte* szIndexName, [MemorySize(BytesParamIndex = 4)] [Out] void* pvResult, [In] uint cbResult, [In] uint InfoLevel);
int JetGetTableIndexInfoW([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] ushort* szIndexName, [MemorySize(BytesParamIndex = 4)] [Out] void* pvResult, [In] uint cbResult, [In] uint InfoLevel);
int JetGetIndexInfoA([In] JET_SESID sesid, [In] uint dbid, [In] sbyte* szTableName, [In] [Optional] sbyte* szIndexName, [MemorySize(BytesParamIndex = 5)] [Out] void* pvResult, [In] uint cbResult, [In] uint InfoLevel);
int JetGetIndexInfoW([In] JET_SESID sesid, [In] uint dbid, [In] ushort* szTableName, [In] [Optional] ushort* szIndexName, [MemorySize(BytesParamIndex = 5)] [Out] void* pvResult, [In] uint cbResult, [In] uint InfoLevel);
int JetCreateIndexA([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] sbyte* szIndexName, [In] uint grbit, [Const] [MemorySize(BytesParamIndex = 5)] [In] PSTR szKey, [In] uint cbKey, [In] uint lDensity);
int JetCreateIndexW([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] ushort* szIndexName, [In] uint grbit, [Const] [MemorySize(BytesParamIndex = 5)] [In] PWSTR szKey, [In] uint cbKey, [In] uint lDensity);
int JetCreateIndex2A([In] JET_SESID sesid, [In] JET_TABLEID tableid, [NativeArrayInfo(CountParamIndex = 3)] [In] JET_INDEXCREATE_A* pindexcreate, [In] uint cIndexCreate);
int JetCreateIndex2W([In] JET_SESID sesid, [In] JET_TABLEID tableid, [NativeArrayInfo(CountParamIndex = 3)] [In] JET_INDEXCREATE_W* pindexcreate, [In] uint cIndexCreate);
int JetCreateIndex3A([In] JET_SESID sesid, [In] JET_TABLEID tableid, [NativeArrayInfo(CountParamIndex = 3)] [In] JET_INDEXCREATE2_A* pindexcreate, [In] uint cIndexCreate);
int JetCreateIndex3W([In] JET_SESID sesid, [In] JET_TABLEID tableid, [NativeArrayInfo(CountParamIndex = 3)] [In] JET_INDEXCREATE2_W* pindexcreate, [In] uint cIndexCreate);
int JetCreateIndex4A([In] JET_SESID sesid, [In] JET_TABLEID tableid, [NativeArrayInfo(CountParamIndex = 3)] [In] JET_INDEXCREATE3_A* pindexcreate, [In] uint cIndexCreate);
int JetCreateIndex4W([In] JET_SESID sesid, [In] JET_TABLEID tableid, [NativeArrayInfo(CountParamIndex = 3)] [In] JET_INDEXCREATE3_W* pindexcreate, [In] uint cIndexCreate);
int JetDeleteIndexA([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] sbyte* szIndexName);
int JetDeleteIndexW([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] ushort* szIndexName);
int JetBeginTransaction([In] JET_SESID sesid);
int JetBeginTransaction2([In] JET_SESID sesid, [In] uint grbit);
int JetBeginTransaction3([In] JET_SESID sesid, [In] long trxid, [In] uint grbit);
int JetCommitTransaction([In] JET_SESID sesid, [In] uint grbit);
int JetCommitTransaction2([In] JET_SESID sesid, [In] uint grbit, [In] uint cmsecDurableCommit, [Out] [Optional] JET_COMMIT_ID* pCommitId);
int JetRollback([In] JET_SESID sesid, [In] uint grbit);
int JetGetDatabaseInfoA([In] JET_SESID sesid, [In] uint dbid, [MemorySize(BytesParamIndex = 3)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetGetDatabaseInfoW([In] JET_SESID sesid, [In] uint dbid, [MemorySize(BytesParamIndex = 3)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetGetDatabaseFileInfoA([In] sbyte* szDatabaseName, [MemorySize(BytesParamIndex = 2)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetGetDatabaseFileInfoW([In] ushort* szDatabaseName, [MemorySize(BytesParamIndex = 2)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetOpenDatabaseA([In] JET_SESID sesid, [In] sbyte* szFilename, [In] [Optional] sbyte* szConnect, [Out] uint* pdbid, [In] uint grbit);
int JetOpenDatabaseW([In] JET_SESID sesid, [In] ushort* szFilename, [In] [Optional] ushort* szConnect, [Out] uint* pdbid, [In] uint grbit);
int JetCloseDatabase([In] JET_SESID sesid, [In] uint dbid, [In] uint grbit);
int JetOpenTableA([In] JET_SESID sesid, [In] uint dbid, [In] sbyte* szTableName, [Const] [MemorySize(BytesParamIndex = 4)] [In] [Optional] void* pvParameters, [In] uint cbParameters, [In] uint grbit, [Out] JET_TABLEID* ptableid);
int JetOpenTableW([In] JET_SESID sesid, [In] uint dbid, [In] ushort* szTableName, [Const] [MemorySize(BytesParamIndex = 4)] [In] [Optional] void* pvParameters, [In] uint cbParameters, [In] uint grbit, [Out] JET_TABLEID* ptableid);
int JetSetTableSequential([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] uint grbit);
int JetResetTableSequential([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] uint grbit);
int JetCloseTable([In] JET_SESID sesid, [In] JET_TABLEID tableid);
int JetDelete([In] JET_SESID sesid, [In] JET_TABLEID tableid);
int JetUpdate([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] void* pvBookmark, [In] uint cbBookmark, [Out] [Optional] uint* pcbActual);
int JetUpdate2([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] void* pvBookmark, [In] uint cbBookmark, [Out] [Optional] uint* pcbActual, [Const] [In] uint grbit);
int JetEscrowUpdate([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] uint columnid, [MemorySize(BytesParamIndex = 4)] [In] void* pv, [In] uint cbMax, [MemorySize(BytesParamIndex = 6)] [Out] [Optional] void* pvOld, [In] uint cbOldMax, [Out] [Optional] uint* pcbOldActual, [In] uint grbit);
int JetRetrieveColumn([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] uint columnid, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] void* pvData, [In] uint cbData, [Out] [Optional] uint* pcbActual, [In] uint grbit, [In] [Out] [Optional] JET_RETINFO* pretinfo);
int JetRetrieveColumns([In] JET_SESID sesid, [In] JET_TABLEID tableid, [NativeArrayInfo(CountParamIndex = 3)] [In] [Out] [Optional] JET_RETRIEVECOLUMN* pretrievecolumn, [In] uint cretrievecolumn);
int JetEnumerateColumns([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] uint cEnumColumnId, [NativeArrayInfo(CountParamIndex = 2)] [In] [Optional] JET_ENUMCOLUMNID* rgEnumColumnId, [Out] uint* pcEnumColumn, [Out] JET_ENUMCOLUMN** prgEnumColumn, [In] JET_PFNREALLOC pfnRealloc, [In] [Optional] void* pvReallocContext, [In] uint cbDataMost, [In] uint grbit);
int JetGetRecordSize([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Out] JET_RECSIZE* precsize, [Const] [In] uint grbit);
int JetGetRecordSize2([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Out] JET_RECSIZE2* precsize, [Const] [In] uint grbit);
int JetSetColumn([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] uint columnid, [Const] [MemorySize(BytesParamIndex = 4)] [In] [Optional] void* pvData, [In] uint cbData, [In] uint grbit, [In] [Optional] JET_SETINFO* psetinfo);
int JetSetColumns([In] JET_SESID sesid, [In] JET_TABLEID tableid, [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] JET_SETCOLUMN* psetcolumn, [In] uint csetcolumn);
int JetPrepareUpdate([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] uint prep);
int JetGetRecordPosition([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [Out] JET_RECPOS* precpos, [In] uint cbRecpos);
int JetGotoPosition([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] JET_RECPOS* precpos);
int JetGetCursorInfo([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel);
int JetDupCursor([In] JET_SESID sesid, [In] JET_TABLEID tableid, [Out] JET_TABLEID* ptableid, [In] uint grbit);
int JetGetCurrentIndexA([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [Out] sbyte* szIndexName, [In] uint cbIndexName);
int JetGetCurrentIndexW([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [Out] ushort* szIndexName, [In] uint cbIndexName);
int JetSetCurrentIndexA([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] sbyte* szIndexName);
int JetSetCurrentIndexW([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] ushort* szIndexName);
int JetSetCurrentIndex2A([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] sbyte* szIndexName, [In] uint grbit);
int JetSetCurrentIndex2W([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] ushort* szIndexName, [In] uint grbit);
int JetSetCurrentIndex3A([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] sbyte* szIndexName, [In] uint grbit, [In] uint itagSequence);
int JetSetCurrentIndex3W([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] ushort* szIndexName, [In] uint grbit, [In] uint itagSequence);
int JetSetCurrentIndex4A([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] sbyte* szIndexName, [In] [Optional] JET_INDEXID* pindexid, [In] uint grbit, [In] uint itagSequence);
int JetSetCurrentIndex4W([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] [Optional] ushort* szIndexName, [In] [Optional] JET_INDEXID* pindexid, [In] uint grbit, [In] uint itagSequence);
int JetMove([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] int cRow, [In] uint grbit);
int JetSetCursorFilter([In] JET_SESID sesid, [In] JET_TABLEID tableid, [NativeArrayInfo(CountParamIndex = 3)] [In] JET_INDEX_COLUMN* rgColumnFilters, [In] uint cColumnFilters, [In] uint grbit);
int JetGetLock([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] uint grbit);
int JetMakeKey([In] JET_SESID sesid, [In] JET_TABLEID tableid, [Const] [MemorySize(BytesParamIndex = 3)] [In] [Optional] void* pvData, [In] uint cbData, [In] uint grbit);
int JetSeek([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] uint grbit);
int JetPrereadKeys([In] JET_SESID sesid, [In] JET_TABLEID tableid, [Const] [NativeArrayInfo(CountParamIndex = 4)] [In] void** rgpvKeys, [Const] [NativeArrayInfo(CountParamIndex = 4)] [In] uint* rgcbKeys, [In] int ckeys, [Out] [Optional] int* pckeysPreread, [In] uint grbit);
int JetPrereadIndexRanges([In] JET_SESID sesid, [In] JET_TABLEID tableid, [Const] [NativeArrayInfo(CountParamIndex = 3)] [In] JET_INDEX_RANGE* rgIndexRanges, [Const] [In] uint cIndexRanges, [Out] [Optional] uint* pcRangesPreread, [Const] [NativeArrayInfo(CountParamIndex = 6)] [In] uint* rgcolumnidPreread, [Const] [In] uint ccolumnidPreread, [In] uint grbit);
int JetGetBookmark([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] void* pvBookmark, [In] uint cbMax, [Out] [Optional] uint* pcbActual);
int JetGetSecondaryIndexBookmark([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] void* pvSecondaryKey, [In] uint cbSecondaryKeyMax, [Out] [Optional] uint* pcbSecondaryKeyActual, [MemorySize(BytesParamIndex = 6)] [Out] [Optional] void* pvPrimaryBookmark, [In] uint cbPrimaryBookmarkMax, [Out] [Optional] uint* pcbPrimaryBookmarkActual, [Const] [In] uint grbit);
int JetCompactA([In] JET_SESID sesid, [In] sbyte* szDatabaseSrc, [In] sbyte* szDatabaseDest, [In] JET_PFNSTATUS pfnStatus, [In] [Optional] JET_CONVERT_A* pconvert, [In] uint grbit);
int JetCompactW([In] JET_SESID sesid, [In] ushort* szDatabaseSrc, [In] ushort* szDatabaseDest, [In] JET_PFNSTATUS pfnStatus, [In] [Optional] JET_CONVERT_W* pconvert, [In] uint grbit);
int JetDefragmentA([In] JET_SESID sesid, [In] uint dbid, [In] [Optional] sbyte* szTableName, [In] [Out] [Optional] uint* pcPasses, [In] [Out] [Optional] uint* pcSeconds, [In] uint grbit);
int JetDefragmentW([In] JET_SESID sesid, [In] uint dbid, [In] [Optional] ushort* szTableName, [In] [Out] [Optional] uint* pcPasses, [In] [Out] [Optional] uint* pcSeconds, [In] uint grbit);
int JetDefragment2A([In] JET_SESID sesid, [In] uint dbid, [In] [Optional] sbyte* szTableName, [In] [Out] [Optional] uint* pcPasses, [In] [Out] [Optional] uint* pcSeconds, [In] JET_CALLBACK callback, [In] uint grbit);
int JetDefragment2W([In] JET_SESID sesid, [In] uint dbid, [In] [Optional] ushort* szTableName, [In] [Out] [Optional] uint* pcPasses, [In] [Out] [Optional] uint* pcSeconds, [In] JET_CALLBACK callback, [In] uint grbit);
int JetDefragment3A([In] JET_SESID sesid, [In] sbyte* szDatabaseName, [In] [Optional] sbyte* szTableName, [In] [Out] [Optional] uint* pcPasses, [In] [Out] [Optional] uint* pcSeconds, [In] JET_CALLBACK callback, [In] void* pvContext, [In] uint grbit);
int JetDefragment3W([In] JET_SESID sesid, [In] ushort* szDatabaseName, [In] [Optional] ushort* szTableName, [In] [Out] [Optional] uint* pcPasses, [In] [Out] [Optional] uint* pcSeconds, [In] JET_CALLBACK callback, [In] void* pvContext, [In] uint grbit);
int JetSetDatabaseSizeA([In] JET_SESID sesid, [In] sbyte* szDatabaseName, [In] uint cpg, [Out] uint* pcpgReal);
int JetSetDatabaseSizeW([In] JET_SESID sesid, [In] ushort* szDatabaseName, [In] uint cpg, [Out] uint* pcpgReal);
int JetGrowDatabase([In] JET_SESID sesid, [In] uint dbid, [In] uint cpg, [In] uint* pcpgReal);
int JetResizeDatabase([In] JET_SESID sesid, [In] uint dbid, [In] uint cpgTarget, [Out] uint* pcpgActual, [Const] [In] uint grbit);
int JetSetSessionContext([In] JET_SESID sesid, [In] JET_API_PTR ulContext);
int JetResetSessionContext([In] JET_SESID sesid);
int JetGotoBookmark([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [In] void* pvBookmark, [In] uint cbBookmark);
int JetGotoSecondaryIndexBookmark([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [In] void* pvSecondaryKey, [In] uint cbSecondaryKey, [MemorySize(BytesParamIndex = 5)] [In] [Optional] void* pvPrimaryBookmark, [In] uint cbPrimaryBookmark, [Const] [In] uint grbit);
int JetIntersectIndexes([In] JET_SESID sesid, [NativeArrayInfo(CountParamIndex = 2)] [In] JET_INDEXRANGE* rgindexrange, [In] uint cindexrange, [In] [Out] JET_RECORDLIST* precordlist, [In] uint grbit);
int JetComputeStats([In] JET_SESID sesid, [In] JET_TABLEID tableid);
int JetOpenTempTable([In] JET_SESID sesid, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] JET_COLUMNDEF* prgcolumndef, [In] uint ccolumn, [In] uint grbit, [Out] JET_TABLEID* ptableid, [NativeArrayInfo(CountParamIndex = 2)] [Out] uint* prgcolumnid);
int JetOpenTempTable2([In] JET_SESID sesid, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] JET_COLUMNDEF* prgcolumndef, [In] uint ccolumn, [In] uint lcid, [In] uint grbit, [Out] JET_TABLEID* ptableid, [NativeArrayInfo(CountParamIndex = 2)] [Out] uint* prgcolumnid);
int JetOpenTempTable3([In] JET_SESID sesid, [Const] [NativeArrayInfo(CountParamIndex = 2)] [In] JET_COLUMNDEF* prgcolumndef, [In] uint ccolumn, [In] [Optional] JET_UNICODEINDEX* pidxunicode, [In] uint grbit, [Out] JET_TABLEID* ptableid, [NativeArrayInfo(CountParamIndex = 2)] [Out] uint* prgcolumnid);
int JetOpenTemporaryTable([In] JET_SESID sesid, [In] JET_OPENTEMPORARYTABLE* popentemporarytable);
int JetOpenTemporaryTable2([In] JET_SESID sesid, [In] JET_OPENTEMPORARYTABLE2* popentemporarytable);
int JetBackupA([In] sbyte* szBackupPath, [In] uint grbit, [In] [Optional] JET_PFNSTATUS pfnStatus);
int JetBackupW([In] ushort* szBackupPath, [In] uint grbit, [In] [Optional] JET_PFNSTATUS pfnStatus);
int JetBackupInstanceA([In] JET_INSTANCE instance, [In] sbyte* szBackupPath, [In] uint grbit, [In] [Optional] JET_PFNSTATUS pfnStatus);
int JetBackupInstanceW([In] JET_INSTANCE instance, [In] ushort* szBackupPath, [In] uint grbit, [In] [Optional] JET_PFNSTATUS pfnStatus);
int JetRestoreA([In] sbyte* szSource, [In] [Optional] JET_PFNSTATUS pfn);
int JetRestoreW([In] ushort* szSource, [In] [Optional] JET_PFNSTATUS pfn);
int JetRestore2A([In] sbyte* sz, [In] [Optional] sbyte* szDest, [In] [Optional] JET_PFNSTATUS pfn);
int JetRestore2W([In] ushort* sz, [In] [Optional] ushort* szDest, [In] [Optional] JET_PFNSTATUS pfn);
int JetRestoreInstanceA([In] JET_INSTANCE instance, [In] sbyte* sz, [In] [Optional] sbyte* szDest, [In] [Optional] JET_PFNSTATUS pfn);
int JetRestoreInstanceW([In] JET_INSTANCE instance, [In] ushort* sz, [In] [Optional] ushort* szDest, [In] [Optional] JET_PFNSTATUS pfn);
int JetSetIndexRange([In] JET_SESID sesid, [In] JET_TABLEID tableidSrc, [In] uint grbit);
int JetIndexRecordCount([In] JET_SESID sesid, [In] JET_TABLEID tableid, [Out] uint* pcrec, [In] uint crecMax);
int JetRetrieveKey([In] JET_SESID sesid, [In] JET_TABLEID tableid, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] void* pvKey, [In] uint cbMax, [Out] [Optional] uint* pcbActual, [In] uint grbit);
int JetBeginExternalBackup([In] uint grbit);
int JetBeginExternalBackupInstance([In] JET_INSTANCE instance, [In] uint grbit);
int JetGetAttachInfoA([MemorySize(BytesParamIndex = 1)] [Out] [Optional] sbyte* szzDatabases, [In] uint cbMax, [Out] [Optional] uint* pcbActual);
int JetGetAttachInfoW([MemorySize(BytesParamIndex = 1)] [Out] [Optional] ushort* wszzDatabases, [In] uint cbMax, [Out] [Optional] uint* pcbActual);
int JetGetAttachInfoInstanceA([In] JET_INSTANCE instance, [MemorySize(BytesParamIndex = 2)] [Out] [Optional] sbyte* szzDatabases, [In] uint cbMax, [Out] [Optional] uint* pcbActual);
int JetGetAttachInfoInstanceW([In] JET_INSTANCE instance, [MemorySize(BytesParamIndex = 2)] [Out] [Optional] ushort* szzDatabases, [In] uint cbMax, [Out] [Optional] uint* pcbActual);
int JetOpenFileA([In] sbyte* szFileName, [Out] JET_HANDLE* phfFile, [Out] uint* pulFileSizeLow, [Out] uint* pulFileSizeHigh);
int JetOpenFileW([In] ushort* szFileName, [Out] JET_HANDLE* phfFile, [Out] uint* pulFileSizeLow, [Out] uint* pulFileSizeHigh);
int JetOpenFileInstanceA([In] JET_INSTANCE instance, [In] sbyte* szFileName, [Out] JET_HANDLE* phfFile, [Out] uint* pulFileSizeLow, [Out] uint* pulFileSizeHigh);
int JetOpenFileInstanceW([In] JET_INSTANCE instance, [In] ushort* szFileName, [Out] JET_HANDLE* phfFile, [Out] uint* pulFileSizeLow, [Out] uint* pulFileSizeHigh);
int JetReadFile([In] JET_HANDLE hfFile, [MemorySize(BytesParamIndex = 2)] [Out] void* pv, [In] uint cb, [Out] [Optional] uint* pcbActual);
int JetReadFileInstance([In] JET_INSTANCE instance, [In] JET_HANDLE hfFile, [MemorySize(BytesParamIndex = 3)] [Out] void* pv, [In] uint cb, [Out] [Optional] uint* pcbActual);
int JetCloseFile([In] JET_HANDLE hfFile);
int JetCloseFileInstance([In] JET_INSTANCE instance, [In] JET_HANDLE hfFile);
int JetGetLogInfoA([MemorySize(BytesParamIndex = 1)] [Out] [Optional] sbyte* szzLogs, [In] uint cbMax, [Out] [Optional] uint* pcbActual);
int JetGetLogInfoW([MemorySize(BytesParamIndex = 1)] [Out] [Optional] ushort* szzLogs, [In] uint cbMax, [Out] [Optional] uint* pcbActual);
int JetGetLogInfoInstanceA([In] JET_INSTANCE instance, [MemorySize(BytesParamIndex = 2)] [Out] [Optional] sbyte* szzLogs, [In] uint cbMax, [Out] [Optional] uint* pcbActual);
int JetGetLogInfoInstanceW([In] JET_INSTANCE instance, [MemorySize(BytesParamIndex = 2)] [Out] [Optional] ushort* wszzLogs, [In] uint cbMax, [Out] [Optional] uint* pcbActual);
int JetGetLogInfoInstance2A([In] JET_INSTANCE instance, [MemorySize(BytesParamIndex = 2)] [Out] [Optional] sbyte* szzLogs, [In] uint cbMax, [Out] [Optional] uint* pcbActual, [In] [Out] [Optional] JET_LOGINFO_A* pLogInfo);
int JetGetLogInfoInstance2W([In] JET_INSTANCE instance, [MemorySize(BytesParamIndex = 2)] [Out] [Optional] ushort* wszzLogs, [In] uint cbMax, [Out] [Optional] uint* pcbActual, [In] [Out] [Optional] JET_LOGINFO_W* pLogInfo);
int JetGetTruncateLogInfoInstanceA([In] JET_INSTANCE instance, [MemorySize(BytesParamIndex = 2)] [Out] [Optional] sbyte* szzLogs, [In] uint cbMax, [Out] [Optional] uint* pcbActual);
int JetGetTruncateLogInfoInstanceW([In] JET_INSTANCE instance, [MemorySize(BytesParamIndex = 2)] [Out] [Optional] ushort* wszzLogs, [In] uint cbMax, [Out] [Optional] uint* pcbActual);
int JetTruncateLog();
int JetTruncateLogInstance([In] JET_INSTANCE instance);
int JetEndExternalBackup();
int JetEndExternalBackupInstance([In] JET_INSTANCE instance);
int JetEndExternalBackupInstance2([In] JET_INSTANCE instance, [In] uint grbit);
int JetExternalRestoreA([In] sbyte* szCheckpointFilePath, [In] sbyte* szLogPath, [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] JET_RSTMAP_A* rgrstmap, [In] int crstfilemap, [In] sbyte* szBackupLogPath, [In] int genLow, [In] int genHigh, [In] JET_PFNSTATUS pfn);
int JetExternalRestoreW([In] ushort* szCheckpointFilePath, [In] ushort* szLogPath, [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] JET_RSTMAP_W* rgrstmap, [In] int crstfilemap, [In] ushort* szBackupLogPath, [In] int genLow, [In] int genHigh, [In] JET_PFNSTATUS pfn);
int JetExternalRestore2A([In] sbyte* szCheckpointFilePath, [In] sbyte* szLogPath, [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] JET_RSTMAP_A* rgrstmap, [In] int crstfilemap, [In] sbyte* szBackupLogPath, [In] [Out] JET_LOGINFO_A* pLogInfo, [In] [Optional] sbyte* szTargetInstanceName, [In] [Optional] sbyte* szTargetInstanceLogPath, [In] [Optional] sbyte* szTargetInstanceCheckpointPath, [In] JET_PFNSTATUS pfn);
int JetExternalRestore2W([In] ushort* szCheckpointFilePath, [In] ushort* szLogPath, [NativeArrayInfo(CountParamIndex = 3)] [In] [Optional] JET_RSTMAP_W* rgrstmap, [In] int crstfilemap, [In] ushort* szBackupLogPath, [In] [Out] JET_LOGINFO_W* pLogInfo, [In] [Optional] ushort* szTargetInstanceName, [In] [Optional] ushort* szTargetInstanceLogPath, [In] [Optional] ushort* szTargetInstanceCheckpointPath, [In] JET_PFNSTATUS pfn);
int JetRegisterCallback([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] uint cbtyp, [In] JET_CALLBACK pCallback, [In] [Optional] void* pvContext, [In] JET_HANDLE* phCallbackId);
int JetUnregisterCallback([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] uint cbtyp, [In] JET_HANDLE hCallbackId);
int JetGetInstanceInfoA([Out] uint* pcInstanceInfo, [Out] JET_INSTANCE_INFO_A** paInstanceInfo);
int JetGetInstanceInfoW([Out] uint* pcInstanceInfo, [Out] JET_INSTANCE_INFO_W** paInstanceInfo);
int JetFreeBuffer([In] PSTR pbBuf);
int JetSetLS([In] JET_SESID sesid, [In] JET_TABLEID tableid, [In] JET_LS ls, [In] uint grbit);
int JetGetLS([In] JET_SESID sesid, [In] JET_TABLEID tableid, [Out] JET_LS* pls, [In] uint grbit);
int JetOSSnapshotPrepare([Out] JET_OSSNAPID* psnapId, [Const] [In] uint grbit);
int JetOSSnapshotPrepareInstance([In] JET_OSSNAPID snapId, [In] JET_INSTANCE instance, [Const] [In] uint grbit);
int JetOSSnapshotFreezeA([Const] [In] JET_OSSNAPID snapId, [Out] uint* pcInstanceInfo, [Out] JET_INSTANCE_INFO_A** paInstanceInfo, [Const] [In] uint grbit);
int JetOSSnapshotFreezeW([Const] [In] JET_OSSNAPID snapId, [Out] uint* pcInstanceInfo, [Out] JET_INSTANCE_INFO_W** paInstanceInfo, [Const] [In] uint grbit);
int JetOSSnapshotThaw([Const] [In] JET_OSSNAPID snapId, [Const] [In] uint grbit);
int JetOSSnapshotAbort([Const] [In] JET_OSSNAPID snapId, [Const] [In] uint grbit);
int JetOSSnapshotTruncateLog([Const] [In] JET_OSSNAPID snapId, [Const] [In] uint grbit);
int JetOSSnapshotTruncateLogInstance([Const] [In] JET_OSSNAPID snapId, [In] JET_INSTANCE instance, [Const] [In] uint grbit);
int JetOSSnapshotGetFreezeInfoA([Const] [In] JET_OSSNAPID snapId, [Out] uint* pcInstanceInfo, [Out] JET_INSTANCE_INFO_A** paInstanceInfo, [Const] [In] uint grbit);
int JetOSSnapshotGetFreezeInfoW([Const] [In] JET_OSSNAPID snapId, [Out] uint* pcInstanceInfo, [Out] JET_INSTANCE_INFO_W** paInstanceInfo, [Const] [In] uint grbit);
int JetOSSnapshotEnd([Const] [In] JET_OSSNAPID snapId, [Const] [In] uint grbit);
int JetConfigureProcessForCrashDump([Const] [In] uint grbit);
int JetGetErrorInfoW([In] [Optional] void* pvContext, [MemorySize(BytesParamIndex = 2)] [Out] void* pvResult, [In] uint cbMax, [In] uint InfoLevel, [In] uint grbit);
int JetSetSessionParameter([In] [Optional] JET_SESID sesid, [In] uint sesparamid, [MemorySize(BytesParamIndex = 3)] [In] [Optional] void* pvParam, [In] uint cbParam);
int JetGetSessionParameter([In] [Optional] JET_SESID sesid, [In] uint sesparamid, [NativeArrayInfo(CountParamIndex = 3)] [Out] void* pvParam, [In] uint cbParamMax, [Out] [Optional] uint* pcbParamActual);
