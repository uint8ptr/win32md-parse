HRESULT WerReportCreate([Const] [In] PWSTR pwzEventType, [In] WER_REPORT_TYPE repType, [In] [Optional] WER_REPORT_INFORMATION* pReportInformation, [Out] HREPORT* phReportHandle);
HRESULT WerReportSetParameter([In] HREPORT hReportHandle, [In] uint dwparamID, [Const] [In] [Optional] PWSTR pwzName, [Const] [In] PWSTR pwzValue);
HRESULT WerReportAddFile([In] HREPORT hReportHandle, [Const] [In] PWSTR pwzPath, [In] WER_FILE_TYPE repFileType, [In] WER_FILE dwFileFlags);
HRESULT WerReportSetUIOption([In] HREPORT hReportHandle, [In] WER_REPORT_UI repUITypeID, [Const] [In] PWSTR pwzValue);
HRESULT WerReportSubmit([In] HREPORT hReportHandle, [In] WER_CONSENT consent, [In] WER_SUBMIT_FLAGS dwFlags, [Out] [Optional] WER_SUBMIT_RESULT* pSubmitResult);
HRESULT WerReportAddDump([In] HREPORT hReportHandle, [In] HANDLE hProcess, [In] [Optional] HANDLE hThread, [In] WER_DUMP_TYPE dumpType, [In] [Optional] WER_EXCEPTION_INFORMATION* pExceptionParam, [In] [Optional] WER_DUMP_CUSTOM_OPTIONS* pDumpCustomOptions, [In] uint dwFlags);
HRESULT WerReportCloseHandle([In] HREPORT hReportHandle);
HRESULT WerAddExcludedApplication([Const] [In] PWSTR pwzExeName, [In] BOOL bAllUsers);
HRESULT WerRemoveExcludedApplication([Const] [In] PWSTR pwzExeName, [In] BOOL bAllUsers);
HRESULT WerStoreOpen([In] REPORT_STORE_TYPES repStoreType, [Out] HREPORTSTORE* phReportStore);
void WerStoreClose([In] [Optional] HREPORTSTORE hReportStore);
HRESULT WerStoreGetFirstReportKey([In] HREPORTSTORE hReportStore, [Out] [Optional] PWSTR* ppszReportKey);
HRESULT WerStoreGetNextReportKey([In] HREPORTSTORE hReportStore, [Out] [Optional] PWSTR* ppszReportKey);
HRESULT WerStoreQueryReportMetadataV2([In] HREPORTSTORE hReportStore, [Const] [In] PWSTR pszReportKey, [Out] WER_REPORT_METADATA_V2* pReportMetadata);
HRESULT WerStoreQueryReportMetadataV3([In] HREPORTSTORE hReportStore, [Const] [In] PWSTR pszReportKey, [Out] WER_REPORT_METADATA_V3* pReportMetadata);
void WerFreeString([Const] [In] PWSTR pwszStr);
HRESULT WerStorePurge();
HRESULT WerStoreGetReportCount([In] HREPORTSTORE hReportStore, [Out] uint* pdwReportCount);
HRESULT WerStoreGetSizeOnDisk([In] HREPORTSTORE hReportStore, [Out] ulong* pqwSizeInBytes);
HRESULT WerStoreQueryReportMetadataV1([In] HREPORTSTORE hReportStore, [Const] [In] PWSTR pszReportKey, [Out] WER_REPORT_METADATA_V1* pReportMetadata);
HRESULT WerStoreUploadReport([In] HREPORTSTORE hReportStore, [Const] [In] PWSTR pszReportKey, [In] uint dwFlags, [Out] [Optional] WER_SUBMIT_RESULT* pSubmitResult);
