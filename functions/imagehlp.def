IMAGE_NT_HEADERS64* CheckSumMappedFile([In] void* BaseAddress, [In] uint FileLength, [Out] uint* HeaderSum, [Out] uint* CheckSum);
BOOL GetImageConfigInformation([In] LOADED_IMAGE* LoadedImage, [Out] IMAGE_LOAD_CONFIG_DIRECTORY64* ImageConfigInformation);
BOOL SetImageConfigInformation([In] [Out] LOADED_IMAGE* LoadedImage, [In] IMAGE_LOAD_CONFIG_DIRECTORY64* ImageConfigInformation);
BOOL BindImage([Const] [In] PSTR ImageName, [Const] [In] PSTR DllPath, [Const] [In] PSTR SymbolPath);
BOOL BindImageEx([In] uint Flags, [Const] [In] PSTR ImageName, [Const] [In] PSTR DllPath, [Const] [In] PSTR SymbolPath, [In] [Optional] PIMAGEHLP_STATUS_ROUTINE StatusRoutine);
BOOL ReBaseImage([Const] [In] PSTR CurrentImageName, [Const] [In] PSTR SymbolPath, [In] BOOL fReBase, [In] BOOL fRebaseSysfileOk, [In] BOOL fGoingDown, [In] uint CheckImageSize, [Out] uint* OldImageSize, [Out] nuint* OldImageBase, [Out] uint* NewImageSize, [In] [Out] nuint* NewImageBase, [In] uint TimeStamp);
BOOL ReBaseImage64([Const] [In] PSTR CurrentImageName, [Const] [In] PSTR SymbolPath, [In] BOOL fReBase, [In] BOOL fRebaseSysfileOk, [In] BOOL fGoingDown, [In] uint CheckImageSize, [Out] uint* OldImageSize, [Out] ulong* OldImageBase, [Out] uint* NewImageSize, [In] [Out] ulong* NewImageBase, [In] uint TimeStamp);
IMAGE_NT_HEADERS32* CheckSumMappedFile([In] void* BaseAddress, [In] uint FileLength, [Out] uint* HeaderSum, [Out] uint* CheckSum);
uint MapFileAndCheckSumA([Const] [In] PSTR Filename, [Out] uint* HeaderSum, [Out] uint* CheckSum);
uint MapFileAndCheckSumW([Const] [In] PWSTR Filename, [Out] uint* HeaderSum, [Out] uint* CheckSum);
BOOL GetImageConfigInformation([In] LOADED_IMAGE* LoadedImage, [Out] IMAGE_LOAD_CONFIG_DIRECTORY32* ImageConfigInformation);
uint GetImageUnusedHeaderBytes([In] LOADED_IMAGE* LoadedImage, [Out] uint* SizeUnusedHeaderBytes);
BOOL SetImageConfigInformation([In] [Out] LOADED_IMAGE* LoadedImage, [In] IMAGE_LOAD_CONFIG_DIRECTORY32* ImageConfigInformation);
BOOL ImageGetDigestStream([In] HANDLE FileHandle, [In] uint DigestLevel, [In] DIGEST_FUNCTION DigestFunction, [In] void* DigestHandle);
BOOL ImageAddCertificate([In] HANDLE FileHandle, [In] WIN_CERTIFICATE* Certificate, [Out] uint* Index);
BOOL ImageRemoveCertificate([In] HANDLE FileHandle, [In] uint Index);
BOOL ImageEnumerateCertificates([In] HANDLE FileHandle, [In] ushort TypeFilter, [Out] uint* CertificateCount, [NativeArrayInfo(CountParamIndex = 4)] [In] [Out] [Optional] uint* Indices, [In] [Optional] uint IndexCount);
BOOL ImageGetCertificateData([In] HANDLE FileHandle, [In] uint CertificateIndex, [Out] WIN_CERTIFICATE* Certificate, [In] [Out] uint* RequiredLength);
BOOL ImageGetCertificateHeader([In] HANDLE FileHandle, [In] uint CertificateIndex, [In] [Out] WIN_CERTIFICATE* Certificateheader);
LOADED_IMAGE* ImageLoad([Const] [In] PSTR DllName, [Const] [In] [Optional] PSTR DllPath);
BOOL ImageUnload([In] [Out] LOADED_IMAGE* LoadedImage);
BOOL MapAndLoad([Const] [In] PSTR ImageName, [Const] [In] [Optional] PSTR DllPath, [Out] LOADED_IMAGE* LoadedImage, [In] BOOL DotDll, [In] BOOL ReadOnly);
BOOL UnMapAndLoad([In] [Out] LOADED_IMAGE* LoadedImage);
BOOL TouchFileTimes([In] HANDLE FileHandle, [In] [Optional] SYSTEMTIME* pSystemTime);
BOOL UpdateDebugInfoFile([Const] [In] PSTR ImageFileName, [Const] [In] PSTR SymbolPath, [Out] PSTR DebugFilePath, [In] IMAGE_NT_HEADERS32* NtHeaders);
BOOL UpdateDebugInfoFileEx([Const] [In] PSTR ImageFileName, [Const] [In] PSTR SymbolPath, [Out] PSTR DebugFilePath, [In] IMAGE_NT_HEADERS32* NtHeaders, [In] uint OldCheckSum);
