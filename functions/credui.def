uint SspiPromptForCredentialsW([Const] [In] PWSTR pszTargetName, [In] [Optional] void* pUiInfo, [In] uint dwAuthError, [Const] [In] PWSTR pszPackage, [In] [Optional] void* pInputAuthIdentity, [Out] void** ppAuthIdentity, [In] [Out] [Optional] int* pfSave, [In] uint dwFlags);
uint SspiPromptForCredentialsA([Const] [In] PSTR pszTargetName, [In] [Optional] void* pUiInfo, [In] uint dwAuthError, [Const] [In] PSTR pszPackage, [In] [Optional] void* pInputAuthIdentity, [Out] void** ppAuthIdentity, [In] [Out] [Optional] int* pfSave, [In] uint dwFlags);
BOOLEAN SspiIsPromptingNeeded([In] uint ErrorOrNtStatus);
BOOL CredUnPackAuthenticationBufferW([In] CRED_PACK_FLAGS dwFlags, [MemorySize(BytesParamIndex = 2)] [In] void* pAuthBuffer, [In] uint cbAuthBuffer, [NativeArrayInfo(CountParamIndex = 4)] [Out] [Optional] PWSTR pszUserName, [In] [Out] uint* pcchMaxUserName, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] PWSTR pszDomainName, [In] [Out] [Optional] uint* pcchMaxDomainName, [NativeArrayInfo(CountParamIndex = 8)] [Out] [Optional] PWSTR pszPassword, [In] [Out] uint* pcchMaxPassword);
BOOL CredUnPackAuthenticationBufferA([In] CRED_PACK_FLAGS dwFlags, [MemorySize(BytesParamIndex = 2)] [In] void* pAuthBuffer, [In] uint cbAuthBuffer, [NativeArrayInfo(CountParamIndex = 4)] [Out] [Optional] PSTR pszUserName, [In] [Out] uint* pcchlMaxUserName, [NativeArrayInfo(CountParamIndex = 6)] [Out] [Optional] PSTR pszDomainName, [In] [Out] [Optional] uint* pcchMaxDomainName, [NativeArrayInfo(CountParamIndex = 8)] [Out] [Optional] PSTR pszPassword, [In] [Out] uint* pcchMaxPassword);
BOOL CredPackAuthenticationBufferW([In] CRED_PACK_FLAGS dwFlags, [In] PWSTR pszUserName, [In] PWSTR pszPassword, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] byte* pPackedCredentials, [In] [Out] uint* pcbPackedCredentials);
BOOL CredPackAuthenticationBufferA([In] CRED_PACK_FLAGS dwFlags, [In] PSTR pszUserName, [In] PSTR pszPassword, [MemorySize(BytesParamIndex = 4)] [Out] [Optional] byte* pPackedCredentials, [In] [Out] uint* pcbPackedCredentials);
uint CredUIPromptForCredentialsW([In] [Optional] CREDUI_INFOW* pUiInfo, [Const] [In] [Optional] PWSTR pszTargetName, [Reserved] [In] [Out] SecHandle* pContext, [In] uint dwAuthError, [NativeArrayInfo(CountParamIndex = 5)] [In] [Out] PWSTR pszUserName, [In] uint ulUserNameBufferSize, [NativeArrayInfo(CountParamIndex = 7)] [In] [Out] PWSTR pszPassword, [In] uint ulPasswordBufferSize, [In] [Out] [Optional] BOOL* save, [In] CREDUI_FLAGS dwFlags);
uint CredUIPromptForCredentialsA([In] [Optional] CREDUI_INFOA* pUiInfo, [Const] [In] [Optional] PSTR pszTargetName, [Reserved] [In] [Out] SecHandle* pContext, [In] uint dwAuthError, [NativeArrayInfo(CountParamIndex = 5)] [In] [Out] PSTR pszUserName, [In] uint ulUserNameBufferSize, [NativeArrayInfo(CountParamIndex = 7)] [In] [Out] PSTR pszPassword, [In] uint ulPasswordBufferSize, [In] [Out] [Optional] BOOL* save, [In] CREDUI_FLAGS dwFlags);
uint CredUIPromptForWindowsCredentialsW([In] [Optional] CREDUI_INFOW* pUiInfo, [In] uint dwAuthError, [In] [Out] uint* pulAuthPackage, [Const] [MemorySize(BytesParamIndex = 4)] [In] [Optional] void* pvInAuthBuffer, [In] uint ulInAuthBufferSize, [MemorySize(BytesParamIndex = 6)] [Out] void** ppvOutAuthBuffer, [Out] uint* pulOutAuthBufferSize, [In] [Out] [Optional] BOOL* pfSave, [In] CREDUIWIN_FLAGS dwFlags);
uint CredUIPromptForWindowsCredentialsA([In] [Optional] CREDUI_INFOA* pUiInfo, [In] uint dwAuthError, [In] [Out] uint* pulAuthPackage, [Const] [MemorySize(BytesParamIndex = 4)] [In] [Optional] void* pvInAuthBuffer, [In] uint ulInAuthBufferSize, [MemorySize(BytesParamIndex = 6)] [Out] void** ppvOutAuthBuffer, [Out] uint* pulOutAuthBufferSize, [In] [Out] [Optional] BOOL* pfSave, [In] CREDUIWIN_FLAGS dwFlags);
uint CredUIParseUserNameW([Const] [In] PWSTR UserName, [NativeArrayInfo(CountParamIndex = 2)] [Out] PWSTR user, [In] uint userBufferSize, [NativeArrayInfo(CountParamIndex = 4)] [Out] PWSTR domain, [In] uint domainBufferSize);
uint CredUIParseUserNameA([Const] [In] PSTR userName, [NativeArrayInfo(CountParamIndex = 2)] [Out] PSTR user, [In] uint userBufferSize, [NativeArrayInfo(CountParamIndex = 4)] [Out] PSTR domain, [In] uint domainBufferSize);
uint CredUICmdLinePromptForCredentialsW([Const] [In] [Optional] PWSTR pszTargetName, [Reserved] [In] [Out] SecHandle* pContext, [In] uint dwAuthError, [NativeArrayInfo(CountParamIndex = 4)] [In] [Out] PWSTR UserName, [In] uint ulUserBufferSize, [NativeArrayInfo(CountParamIndex = 6)] [In] [Out] PWSTR pszPassword, [In] uint ulPasswordBufferSize, [In] [Out] [Optional] BOOL* pfSave, [In] CREDUI_FLAGS dwFlags);
uint CredUICmdLinePromptForCredentialsA([Const] [In] [Optional] PSTR pszTargetName, [Reserved] [In] [Out] SecHandle* pContext, [In] uint dwAuthError, [NativeArrayInfo(CountParamIndex = 4)] [In] [Out] PSTR UserName, [In] uint ulUserBufferSize, [NativeArrayInfo(CountParamIndex = 6)] [In] [Out] PSTR pszPassword, [In] uint ulPasswordBufferSize, [In] [Out] [Optional] BOOL* pfSave, [In] CREDUI_FLAGS dwFlags);
uint CredUIConfirmCredentialsW([Const] [In] PWSTR pszTargetName, [In] BOOL bConfirm);
uint CredUIConfirmCredentialsA([Const] [In] PSTR pszTargetName, [In] BOOL bConfirm);
uint CredUIStoreSSOCredW([Const] [In] [Optional] PWSTR pszRealm, [Const] [In] PWSTR pszUsername, [Const] [In] PWSTR pszPassword, [In] BOOL bPersist);
uint CredUIReadSSOCredW([Const] [In] [Optional] PWSTR pszRealm, [Out] PWSTR* ppszUsername);
