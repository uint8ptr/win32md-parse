RPC_STATUS RpcIfIdVectorFree([In] [Out] RPC_IF_ID_VECTOR** IfIdVector);
RPC_STATUS RpcNsBindingExportA([In] uint EntryNameSyntax, [In] [Optional] byte* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] RPC_BINDING_VECTOR* BindingVec, [In] [Optional] UUID_VECTOR* ObjectUuidVec);
RPC_STATUS RpcNsBindingUnexportA([In] uint EntryNameSyntax, [In] [Optional] byte* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] UUID_VECTOR* ObjectUuidVec);
RPC_STATUS RpcNsBindingExportW([In] uint EntryNameSyntax, [In] [Optional] ushort* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] RPC_BINDING_VECTOR* BindingVec, [In] [Optional] UUID_VECTOR* ObjectUuidVec);
RPC_STATUS RpcNsBindingUnexportW([In] uint EntryNameSyntax, [In] [Optional] ushort* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] UUID_VECTOR* ObjectUuidVec);
RPC_STATUS RpcNsBindingExportPnPA([In] uint EntryNameSyntax, [In] [Optional] byte* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] UUID_VECTOR* ObjectVector);
RPC_STATUS RpcNsBindingUnexportPnPA([In] uint EntryNameSyntax, [In] [Optional] byte* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] UUID_VECTOR* ObjectVector);
RPC_STATUS RpcNsBindingExportPnPW([In] uint EntryNameSyntax, [In] [Optional] ushort* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] UUID_VECTOR* ObjectVector);
RPC_STATUS RpcNsBindingUnexportPnPW([In] uint EntryNameSyntax, [In] [Optional] ushort* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] UUID_VECTOR* ObjectVector);
RPC_STATUS RpcNsBindingLookupBeginA([In] uint EntryNameSyntax, [In] [Optional] byte* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] Guid* ObjUuid, [In] uint BindingMaxCount, [Out] void** LookupContext);
RPC_STATUS RpcNsBindingLookupBeginW([In] uint EntryNameSyntax, [In] [Optional] ushort* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] Guid* ObjUuid, [In] uint BindingMaxCount, [Out] void** LookupContext);
RPC_STATUS RpcNsBindingLookupNext([In] [Out] void* LookupContext, [In] [Out] RPC_BINDING_VECTOR** BindingVec);
RPC_STATUS RpcNsBindingLookupDone([In] [Out] void** LookupContext);
RPC_STATUS RpcNsGroupDeleteA([In] GROUP_NAME_SYNTAX GroupNameSyntax, [In] [Optional] byte* GroupName);
RPC_STATUS RpcNsGroupMbrAddA([In] uint GroupNameSyntax, [In] byte* GroupName, [In] uint MemberNameSyntax, [In] byte* MemberName);
RPC_STATUS RpcNsGroupMbrRemoveA([In] uint GroupNameSyntax, [In] byte* GroupName, [In] uint MemberNameSyntax, [In] byte* MemberName);
RPC_STATUS RpcNsGroupMbrInqBeginA([In] uint GroupNameSyntax, [In] byte* GroupName, [In] uint MemberNameSyntax, [Out] void** InquiryContext);
RPC_STATUS RpcNsGroupMbrInqNextA([In] [Out] void* InquiryContext, [Out] byte** MemberName);
RPC_STATUS RpcNsGroupDeleteW([In] GROUP_NAME_SYNTAX GroupNameSyntax, [In] [Optional] ushort* GroupName);
RPC_STATUS RpcNsGroupMbrAddW([In] uint GroupNameSyntax, [In] ushort* GroupName, [In] uint MemberNameSyntax, [In] ushort* MemberName);
RPC_STATUS RpcNsGroupMbrRemoveW([In] uint GroupNameSyntax, [In] ushort* GroupName, [In] uint MemberNameSyntax, [In] ushort* MemberName);
RPC_STATUS RpcNsGroupMbrInqBeginW([In] uint GroupNameSyntax, [In] ushort* GroupName, [In] uint MemberNameSyntax, [Out] void** InquiryContext);
RPC_STATUS RpcNsGroupMbrInqNextW([In] [Out] void* InquiryContext, [Out] ushort** MemberName);
RPC_STATUS RpcNsGroupMbrInqDone([In] [Out] void** InquiryContext);
RPC_STATUS RpcNsProfileDeleteA([In] uint ProfileNameSyntax, [In] byte* ProfileName);
RPC_STATUS RpcNsProfileEltAddA([In] uint ProfileNameSyntax, [In] byte* ProfileName, [In] [Optional] RPC_IF_ID* IfId, [In] uint MemberNameSyntax, [In] byte* MemberName, [In] uint Priority, [In] [Optional] byte* Annotation);
RPC_STATUS RpcNsProfileEltRemoveA([In] uint ProfileNameSyntax, [In] byte* ProfileName, [In] [Optional] RPC_IF_ID* IfId, [In] uint MemberNameSyntax, [In] byte* MemberName);
RPC_STATUS RpcNsProfileEltInqBeginA([In] uint ProfileNameSyntax, [In] byte* ProfileName, [In] uint InquiryType, [In] [Optional] RPC_IF_ID* IfId, [In] uint VersOption, [In] uint MemberNameSyntax, [In] [Optional] byte* MemberName, [Out] void** InquiryContext);
RPC_STATUS RpcNsProfileEltInqNextA([In] void* InquiryContext, [Out] [Optional] RPC_IF_ID* IfId, [Out] byte** MemberName, [Out] uint* Priority, [Out] byte** Annotation);
RPC_STATUS RpcNsProfileDeleteW([In] uint ProfileNameSyntax, [In] ushort* ProfileName);
RPC_STATUS RpcNsProfileEltAddW([In] uint ProfileNameSyntax, [In] ushort* ProfileName, [In] [Optional] RPC_IF_ID* IfId, [In] uint MemberNameSyntax, [In] ushort* MemberName, [In] uint Priority, [In] [Optional] ushort* Annotation);
RPC_STATUS RpcNsProfileEltRemoveW([In] uint ProfileNameSyntax, [In] ushort* ProfileName, [In] [Optional] RPC_IF_ID* IfId, [In] uint MemberNameSyntax, [In] ushort* MemberName);
RPC_STATUS RpcNsProfileEltInqBeginW([In] uint ProfileNameSyntax, [In] ushort* ProfileName, [In] uint InquiryType, [In] [Optional] RPC_IF_ID* IfId, [In] uint VersOption, [In] uint MemberNameSyntax, [In] [Optional] ushort* MemberName, [Out] void** InquiryContext);
RPC_STATUS RpcNsProfileEltInqNextW([In] void* InquiryContext, [Out] [Optional] RPC_IF_ID* IfId, [Out] ushort** MemberName, [Out] uint* Priority, [Out] ushort** Annotation);
RPC_STATUS RpcNsProfileEltInqDone([In] [Out] void** InquiryContext);
RPC_STATUS RpcNsEntryObjectInqBeginA([In] uint EntryNameSyntax, [In] byte* EntryName, [Out] void** InquiryContext);
RPC_STATUS RpcNsEntryObjectInqBeginW([In] uint EntryNameSyntax, [In] ushort* EntryName, [Out] void** InquiryContext);
RPC_STATUS RpcNsEntryObjectInqNext([In] [Out] void* InquiryContext, [In] [Out] Guid* ObjUuid);
RPC_STATUS RpcNsEntryObjectInqDone([In] [Out] void** InquiryContext);
RPC_STATUS RpcNsEntryExpandNameA([In] uint EntryNameSyntax, [In] byte* EntryName, [Out] byte** ExpandedName);
RPC_STATUS RpcNsMgmtBindingUnexportA([In] uint EntryNameSyntax, [In] byte* EntryName, [In] [Optional] RPC_IF_ID* IfId, [In] uint VersOption, [In] [Optional] UUID_VECTOR* ObjectUuidVec);
RPC_STATUS RpcNsMgmtEntryCreateA([In] uint EntryNameSyntax, [In] byte* EntryName);
RPC_STATUS RpcNsMgmtEntryDeleteA([In] uint EntryNameSyntax, [In] byte* EntryName);
RPC_STATUS RpcNsMgmtEntryInqIfIdsA([In] uint EntryNameSyntax, [In] byte* EntryName, [Out] RPC_IF_ID_VECTOR** IfIdVec);
RPC_STATUS RpcNsMgmtHandleSetExpAge([In] [Out] void* NsHandle, [In] uint ExpirationAge);
RPC_STATUS RpcNsMgmtInqExpAge([In] [Out] uint* ExpirationAge);
RPC_STATUS RpcNsMgmtSetExpAge([In] uint ExpirationAge);
RPC_STATUS RpcNsEntryExpandNameW([In] uint EntryNameSyntax, [In] ushort* EntryName, [Out] ushort** ExpandedName);
RPC_STATUS RpcNsMgmtBindingUnexportW([In] uint EntryNameSyntax, [In] ushort* EntryName, [In] [Optional] RPC_IF_ID* IfId, [In] uint VersOption, [In] [Optional] UUID_VECTOR* ObjectUuidVec);
RPC_STATUS RpcNsMgmtEntryCreateW([In] uint EntryNameSyntax, [In] ushort* EntryName);
RPC_STATUS RpcNsMgmtEntryDeleteW([In] uint EntryNameSyntax, [In] ushort* EntryName);
RPC_STATUS RpcNsMgmtEntryInqIfIdsW([In] uint EntryNameSyntax, [In] ushort* EntryName, [Out] RPC_IF_ID_VECTOR** IfIdVec);
RPC_STATUS RpcNsBindingImportBeginA([In] uint EntryNameSyntax, [In] [Optional] byte* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] Guid* ObjUuid, [Out] void** ImportContext);
RPC_STATUS RpcNsBindingImportBeginW([In] uint EntryNameSyntax, [In] [Optional] ushort* EntryName, [In] [Optional] void* IfSpec, [In] [Optional] Guid* ObjUuid, [Out] void** ImportContext);
RPC_STATUS RpcNsBindingImportNext([In] [Out] void* ImportContext, [In] [Out] void** Binding);
RPC_STATUS RpcNsBindingImportDone([In] [Out] void** ImportContext);
RPC_STATUS RpcNsBindingSelect([In] [Out] RPC_BINDING_VECTOR* BindingVec, [In] [Out] void** Binding);
RPC_STATUS I_RpcNsGetBuffer([In] [Out] RPC_MESSAGE* Message);
RPC_STATUS I_RpcNsSendReceive([In] [Out] RPC_MESSAGE* Message, [In] [Out] void** Handle);
void I_RpcNsRaiseException([In] [Out] RPC_MESSAGE* Message, [In] RPC_STATUS Status);
RPC_STATUS I_RpcReBindBuffer([In] [Out] RPC_MESSAGE* Message);
