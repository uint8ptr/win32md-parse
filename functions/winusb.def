BOOL WinUsb_Initialize([In] HANDLE DeviceHandle, [Out] void** InterfaceHandle);
BOOL WinUsb_Free([In] void* InterfaceHandle);
BOOL WinUsb_GetAssociatedInterface([In] void* InterfaceHandle, [In] byte AssociatedInterfaceIndex, [Out] void** AssociatedInterfaceHandle);
BOOL WinUsb_GetDescriptor([In] void* InterfaceHandle, [In] byte DescriptorType, [In] byte Index, [In] ushort LanguageID, [MemorySize(BytesParamIndex = 5)] [Out] [Optional] byte* Buffer, [In] uint BufferLength, [Out] uint* LengthTransferred);
BOOL WinUsb_QueryInterfaceSettings([In] void* InterfaceHandle, [In] byte AlternateInterfaceNumber, [Out] USB_INTERFACE_DESCRIPTOR* UsbAltInterfaceDescriptor);
BOOL WinUsb_QueryDeviceInformation([In] void* InterfaceHandle, [In] uint InformationType, [In] [Out] uint* BufferLength, [MemorySize(BytesParamIndex = 2)] [Out] void* Buffer);
BOOL WinUsb_SetCurrentAlternateSetting([In] void* InterfaceHandle, [In] byte SettingNumber);
BOOL WinUsb_GetCurrentAlternateSetting([In] void* InterfaceHandle, [Out] byte* SettingNumber);
BOOL WinUsb_QueryPipe([In] void* InterfaceHandle, [In] byte AlternateInterfaceNumber, [In] byte PipeIndex, [Out] WINUSB_PIPE_INFORMATION* PipeInformation);
BOOL WinUsb_QueryPipeEx([In] void* InterfaceHandle, [In] byte AlternateSettingNumber, [In] byte PipeIndex, [Out] WINUSB_PIPE_INFORMATION_EX* PipeInformationEx);
BOOL WinUsb_SetPipePolicy([In] void* InterfaceHandle, [In] byte PipeID, [In] uint PolicyType, [In] uint ValueLength, [MemorySize(BytesParamIndex = 3)] [In] void* Value);
BOOL WinUsb_GetPipePolicy([In] void* InterfaceHandle, [In] byte PipeID, [In] uint PolicyType, [In] [Out] uint* ValueLength, [MemorySize(BytesParamIndex = 3)] [Out] void* Value);
BOOL WinUsb_ReadPipe([In] void* InterfaceHandle, [In] byte PipeID, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] byte* Buffer, [In] uint BufferLength, [Out] [Optional] uint* LengthTransferred, [In] [Optional] OVERLAPPED* Overlapped);
BOOL WinUsb_WritePipe([In] void* InterfaceHandle, [In] byte PipeID, [MemorySize(BytesParamIndex = 3)] [In] byte* Buffer, [In] uint BufferLength, [Out] [Optional] uint* LengthTransferred, [In] [Optional] OVERLAPPED* Overlapped);
BOOL WinUsb_ControlTransfer([In] void* InterfaceHandle, [In] WINUSB_SETUP_PACKET SetupPacket, [MemorySize(BytesParamIndex = 3)] [Out] [Optional] byte* Buffer, [In] uint BufferLength, [Out] [Optional] uint* LengthTransferred, [In] [Optional] OVERLAPPED* Overlapped);
BOOL WinUsb_ResetPipe([In] void* InterfaceHandle, [In] byte PipeID);
BOOL WinUsb_AbortPipe([In] void* InterfaceHandle, [In] byte PipeID);
BOOL WinUsb_FlushPipe([In] void* InterfaceHandle, [In] byte PipeID);
BOOL WinUsb_SetPowerPolicy([In] void* InterfaceHandle, [In] uint PolicyType, [In] uint ValueLength, [MemorySize(BytesParamIndex = 2)] [In] void* Value);
BOOL WinUsb_GetPowerPolicy([In] void* InterfaceHandle, [In] uint PolicyType, [In] [Out] uint* ValueLength, [MemorySize(BytesParamIndex = 2)] [Out] void* Value);
BOOL WinUsb_GetOverlappedResult([In] void* InterfaceHandle, [In] OVERLAPPED* lpOverlapped, [Out] uint* lpNumberOfBytesTransferred, [In] BOOL bWait);
USB_INTERFACE_DESCRIPTOR* WinUsb_ParseConfigurationDescriptor([In] USB_CONFIGURATION_DESCRIPTOR* ConfigurationDescriptor, [In] void* StartPosition, [In] int InterfaceNumber, [In] int AlternateSetting, [In] int InterfaceClass, [In] int InterfaceSubClass, [In] int InterfaceProtocol);
USB_COMMON_DESCRIPTOR* WinUsb_ParseDescriptors([MemorySize(BytesParamIndex = 1)] [In] void* DescriptorBuffer, [In] uint TotalLength, [In] void* StartPosition, [In] int DescriptorType);
BOOL WinUsb_GetCurrentFrameNumber([In] void* InterfaceHandle, [Out] uint* CurrentFrameNumber, [Out] LARGE_INTEGER* TimeStamp);
BOOL WinUsb_GetAdjustedFrameNumber([In] [Out] uint* CurrentFrameNumber, [In] LARGE_INTEGER TimeStamp);
BOOL WinUsb_RegisterIsochBuffer([In] void* InterfaceHandle, [In] byte PipeID, [MemorySize(BytesParamIndex = 3)] [In] [Out] byte* Buffer, [In] uint BufferLength, [Out] void** IsochBufferHandle);
BOOL WinUsb_UnregisterIsochBuffer([In] void* IsochBufferHandle);
BOOL WinUsb_WriteIsochPipe([In] void* BufferHandle, [In] uint Offset, [In] uint Length, [In] [Out] uint* FrameNumber, [In] [Optional] OVERLAPPED* Overlapped);
BOOL WinUsb_ReadIsochPipe([In] void* BufferHandle, [In] uint Offset, [In] uint Length, [In] [Out] uint* FrameNumber, [In] uint NumberOfPackets, [NativeArrayInfo(CountParamIndex = 4)] [Out] USBD_ISO_PACKET_DESCRIPTOR* IsoPacketDescriptors, [In] [Optional] OVERLAPPED* Overlapped);
BOOL WinUsb_WriteIsochPipeAsap([In] void* BufferHandle, [In] uint Offset, [In] uint Length, [In] BOOL ContinueStream, [In] [Optional] OVERLAPPED* Overlapped);
BOOL WinUsb_ReadIsochPipeAsap([In] void* BufferHandle, [In] uint Offset, [In] uint Length, [In] BOOL ContinueStream, [In] uint NumberOfPackets, [NativeArrayInfo(CountParamIndex = 4)] [Out] USBD_ISO_PACKET_DESCRIPTOR* IsoPacketDescriptors, [In] [Optional] OVERLAPPED* Overlapped);
BOOL WinUsb_StartTrackingForTimeSync([In] void* InterfaceHandle, [In] USB_START_TRACKING_FOR_TIME_SYNC_INFORMATION* StartTrackingInfo);
BOOL WinUsb_GetCurrentFrameNumberAndQpc([In] void* InterfaceHandle, [In] USB_FRAME_NUMBER_AND_QPC_FOR_TIME_SYNC_INFORMATION* FrameQpcInfo);
BOOL WinUsb_StopTrackingForTimeSync([In] void* InterfaceHandle, [In] USB_STOP_TRACKING_FOR_TIME_SYNC_INFORMATION* StopTrackingInfo);
