HANDLE AllJoynConnectToBus([Const] [In] [Optional] PWSTR connectionSpec);
BOOL AllJoynCloseBusHandle([In] HANDLE busHandle);
BOOL AllJoynSendToBus([In] HANDLE connectedBusHandle, [Const] [MemorySize(BytesParamIndex = 2)] [In] [Optional] void* buffer, [In] uint bytesToWrite, [Out] [Optional] uint* bytesTransferred, [In] [Out] void* reserved);
BOOL AllJoynReceiveFromBus([In] HANDLE connectedBusHandle, [MemorySize(BytesParamIndex = 2)] [Out] [Optional] void* buffer, [In] uint bytesToRead, [Out] [Optional] uint* bytesTransferred, [In] [Out] void* reserved);
BOOL AllJoynEventSelect([In] HANDLE connectedBusHandle, [In] HANDLE eventHandle, [In] uint eventTypes);
BOOL AllJoynEnumEvents([In] HANDLE connectedBusHandle, [In] [Optional] HANDLE eventToReset, [Out] uint* eventTypes);
HANDLE AllJoynCreateBus([In] uint outBufferSize, [In] uint inBufferSize, [In] [Optional] SECURITY_ATTRIBUTES* lpSecurityAttributes);
uint AllJoynAcceptBusConnection([In] HANDLE serverBusHandle, [In] HANDLE abortEvent);
int alljoyn_unity_deferred_callbacks_process();
void alljoyn_unity_set_deferred_callback_mainthread_only([In] int mainthread_only);
PSTR QCC_StatusText([In] QStatus status);
alljoyn_msgarg alljoyn_msgarg_create();
alljoyn_msgarg alljoyn_msgarg_create_and_set([Const] [In] PSTR signature, ...);
void alljoyn_msgarg_destroy([In] alljoyn_msgarg arg);
alljoyn_msgarg alljoyn_msgarg_array_create([In] nuint size);
alljoyn_msgarg alljoyn_msgarg_array_element([In] alljoyn_msgarg arg, [In] nuint index);
QStatus alljoyn_msgarg_set([In] alljoyn_msgarg arg, [Const] [In] PSTR signature, ...);
QStatus alljoyn_msgarg_get([In] alljoyn_msgarg arg, [Const] [In] PSTR signature, ...);
alljoyn_msgarg alljoyn_msgarg_copy([Const] [In] alljoyn_msgarg source);
void alljoyn_msgarg_clone([In] alljoyn_msgarg destination, [Const] [In] alljoyn_msgarg source);
int alljoyn_msgarg_equal([In] alljoyn_msgarg lhv, [In] alljoyn_msgarg rhv);
QStatus alljoyn_msgarg_array_set([In] alljoyn_msgarg args, [In] [Out] nuint* numArgs, [Const] [In] PSTR signature, ...);
QStatus alljoyn_msgarg_array_get([Const] [In] alljoyn_msgarg args, [In] nuint numArgs, [Const] [In] PSTR signature, ...);
nuint alljoyn_msgarg_tostring([In] alljoyn_msgarg arg, [In] PSTR str, [In] nuint buf, [In] nuint indent);
nuint alljoyn_msgarg_array_tostring([Const] [In] alljoyn_msgarg args, [In] nuint numArgs, [In] PSTR str, [In] nuint buf, [In] nuint indent);
nuint alljoyn_msgarg_signature([In] alljoyn_msgarg arg, [In] PSTR str, [In] nuint buf);
nuint alljoyn_msgarg_array_signature([In] alljoyn_msgarg values, [In] nuint numValues, [In] PSTR str, [In] nuint buf);
int alljoyn_msgarg_hassignature([In] alljoyn_msgarg arg, [Const] [In] PSTR signature);
QStatus alljoyn_msgarg_getdictelement([In] alljoyn_msgarg arg, [Const] [In] PSTR elemSig, ...);
alljoyn_typeid alljoyn_msgarg_gettype([In] alljoyn_msgarg arg);
void alljoyn_msgarg_clear([In] alljoyn_msgarg arg);
void alljoyn_msgarg_stabilize([In] alljoyn_msgarg arg);
QStatus alljoyn_msgarg_array_set_offset([In] alljoyn_msgarg args, [In] nuint argOffset, [In] [Out] nuint* numArgs, [Const] [In] PSTR signature, ...);
QStatus alljoyn_msgarg_set_and_stabilize([In] alljoyn_msgarg arg, [Const] [In] PSTR signature, ...);
QStatus alljoyn_msgarg_set_uint8([In] alljoyn_msgarg arg, [In] byte y);
QStatus alljoyn_msgarg_set_bool([In] alljoyn_msgarg arg, [In] int b);
QStatus alljoyn_msgarg_set_int16([In] alljoyn_msgarg arg, [In] short n);
QStatus alljoyn_msgarg_set_uint16([In] alljoyn_msgarg arg, [In] ushort q);
QStatus alljoyn_msgarg_set_int32([In] alljoyn_msgarg arg, [In] int i);
QStatus alljoyn_msgarg_set_uint32([In] alljoyn_msgarg arg, [In] uint u);
QStatus alljoyn_msgarg_set_int64([In] alljoyn_msgarg arg, [In] long x);
QStatus alljoyn_msgarg_set_uint64([In] alljoyn_msgarg arg, [In] ulong t);
QStatus alljoyn_msgarg_set_double([In] alljoyn_msgarg arg, [In] double d);
QStatus alljoyn_msgarg_set_string([In] alljoyn_msgarg arg, [Const] [In] PSTR s);
QStatus alljoyn_msgarg_set_objectpath([In] alljoyn_msgarg arg, [Const] [In] PSTR o);
QStatus alljoyn_msgarg_set_signature([In] alljoyn_msgarg arg, [Const] [In] PSTR g);
QStatus alljoyn_msgarg_get_uint8([Const] [In] alljoyn_msgarg arg, [In] [Out] byte* y);
QStatus alljoyn_msgarg_get_bool([Const] [In] alljoyn_msgarg arg, [In] [Out] int* b);
QStatus alljoyn_msgarg_get_int16([Const] [In] alljoyn_msgarg arg, [In] [Out] short* n);
QStatus alljoyn_msgarg_get_uint16([Const] [In] alljoyn_msgarg arg, [In] [Out] ushort* q);
QStatus alljoyn_msgarg_get_int32([Const] [In] alljoyn_msgarg arg, [In] [Out] int* i);
QStatus alljoyn_msgarg_get_uint32([Const] [In] alljoyn_msgarg arg, [In] [Out] uint* u);
QStatus alljoyn_msgarg_get_int64([Const] [In] alljoyn_msgarg arg, [In] [Out] long* x);
QStatus alljoyn_msgarg_get_uint64([Const] [In] alljoyn_msgarg arg, [In] [Out] ulong* t);
QStatus alljoyn_msgarg_get_double([Const] [In] alljoyn_msgarg arg, [In] [Out] double* d);
QStatus alljoyn_msgarg_get_string([Const] [In] alljoyn_msgarg arg, [In] [Out] sbyte** s);
QStatus alljoyn_msgarg_get_objectpath([Const] [In] alljoyn_msgarg arg, [In] [Out] sbyte** o);
QStatus alljoyn_msgarg_get_signature([Const] [In] alljoyn_msgarg arg, [In] [Out] sbyte** g);
QStatus alljoyn_msgarg_get_variant([Const] [In] alljoyn_msgarg arg, [In] alljoyn_msgarg v);
QStatus alljoyn_msgarg_set_uint8_array([In] alljoyn_msgarg arg, [In] nuint length, [In] [Out] byte* ay);
QStatus alljoyn_msgarg_set_bool_array([In] alljoyn_msgarg arg, [In] nuint length, [In] [Out] int* ab);
QStatus alljoyn_msgarg_set_int16_array([In] alljoyn_msgarg arg, [In] nuint length, [In] [Out] short* an);
QStatus alljoyn_msgarg_set_uint16_array([In] alljoyn_msgarg arg, [In] nuint length, [In] [Out] ushort* aq);
QStatus alljoyn_msgarg_set_int32_array([In] alljoyn_msgarg arg, [In] nuint length, [In] [Out] int* ai);
QStatus alljoyn_msgarg_set_uint32_array([In] alljoyn_msgarg arg, [In] nuint length, [In] [Out] uint* au);
QStatus alljoyn_msgarg_set_int64_array([In] alljoyn_msgarg arg, [In] nuint length, [In] [Out] long* ax);
QStatus alljoyn_msgarg_set_uint64_array([In] alljoyn_msgarg arg, [In] nuint length, [In] [Out] ulong* at);
QStatus alljoyn_msgarg_set_double_array([In] alljoyn_msgarg arg, [In] nuint length, [In] [Out] double* ad);
QStatus alljoyn_msgarg_set_string_array([In] alljoyn_msgarg arg, [In] nuint length, [Const] [In] sbyte** as);
QStatus alljoyn_msgarg_set_objectpath_array([In] alljoyn_msgarg arg, [In] nuint length, [Const] [In] sbyte** ao);
QStatus alljoyn_msgarg_set_signature_array([In] alljoyn_msgarg arg, [In] nuint length, [Const] [In] sbyte** ag);
QStatus alljoyn_msgarg_get_uint8_array([Const] [In] alljoyn_msgarg arg, [In] [Out] nuint* length, [In] [Out] byte* ay);
QStatus alljoyn_msgarg_get_bool_array([Const] [In] alljoyn_msgarg arg, [In] [Out] nuint* length, [In] [Out] int* ab);
QStatus alljoyn_msgarg_get_int16_array([Const] [In] alljoyn_msgarg arg, [In] [Out] nuint* length, [In] [Out] short* an);
QStatus alljoyn_msgarg_get_uint16_array([Const] [In] alljoyn_msgarg arg, [In] [Out] nuint* length, [In] [Out] ushort* aq);
QStatus alljoyn_msgarg_get_int32_array([Const] [In] alljoyn_msgarg arg, [In] [Out] nuint* length, [In] [Out] int* ai);
QStatus alljoyn_msgarg_get_uint32_array([Const] [In] alljoyn_msgarg arg, [In] [Out] nuint* length, [In] [Out] uint* au);
QStatus alljoyn_msgarg_get_int64_array([Const] [In] alljoyn_msgarg arg, [In] [Out] nuint* length, [In] [Out] long* ax);
QStatus alljoyn_msgarg_get_uint64_array([Const] [In] alljoyn_msgarg arg, [In] [Out] nuint* length, [In] [Out] ulong* at);
QStatus alljoyn_msgarg_get_double_array([Const] [In] alljoyn_msgarg arg, [In] [Out] nuint* length, [In] [Out] double* ad);
QStatus alljoyn_msgarg_get_variant_array([Const] [In] alljoyn_msgarg arg, [Const] [In] PSTR signature, [In] [Out] nuint* length, [In] [Out] alljoyn_msgarg* av);
nuint alljoyn_msgarg_get_array_numberofelements([Const] [In] alljoyn_msgarg arg);
void alljoyn_msgarg_get_array_element([Const] [In] alljoyn_msgarg arg, [In] nuint index, [In] [Out] alljoyn_msgarg* element);
PSTR alljoyn_msgarg_get_array_elementsignature([Const] [In] alljoyn_msgarg arg, [In] nuint index);
alljoyn_msgarg alljoyn_msgarg_getkey([In] alljoyn_msgarg arg);
alljoyn_msgarg alljoyn_msgarg_getvalue([In] alljoyn_msgarg arg);
QStatus alljoyn_msgarg_setdictentry([In] alljoyn_msgarg arg, [In] alljoyn_msgarg key, [In] alljoyn_msgarg value);
QStatus alljoyn_msgarg_setstruct([In] alljoyn_msgarg arg, [In] alljoyn_msgarg struct_members, [In] nuint num_members);
nuint alljoyn_msgarg_getnummembers([In] alljoyn_msgarg arg);
alljoyn_msgarg alljoyn_msgarg_getmember([In] alljoyn_msgarg arg, [In] nuint index);
alljoyn_aboutdata alljoyn_aboutdata_create_empty();
alljoyn_aboutdata alljoyn_aboutdata_create([Const] [In] PSTR defaultLanguage);
alljoyn_aboutdata alljoyn_aboutdata_create_full([Const] [In] alljoyn_msgarg arg, [Const] [In] PSTR language);
void alljoyn_aboutdata_destroy([In] alljoyn_aboutdata data);
QStatus alljoyn_aboutdata_createfromxml([In] alljoyn_aboutdata data, [Const] [In] PSTR aboutDataXml);
byte alljoyn_aboutdata_isvalid([In] alljoyn_aboutdata data, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_createfrommsgarg([In] alljoyn_aboutdata data, [Const] [In] alljoyn_msgarg arg, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_setappid([In] alljoyn_aboutdata data, [Const] [In] byte* appId, [Const] [In] nuint num);
QStatus alljoyn_aboutdata_setappid_fromstring([In] alljoyn_aboutdata data, [Const] [In] PSTR appId);
QStatus alljoyn_aboutdata_getappid([In] alljoyn_aboutdata data, [In] [Out] byte** appId, [In] [Out] nuint* num);
QStatus alljoyn_aboutdata_setdefaultlanguage([In] alljoyn_aboutdata data, [Const] [In] PSTR defaultLanguage);
QStatus alljoyn_aboutdata_getdefaultlanguage([In] alljoyn_aboutdata data, [In] [Out] sbyte** defaultLanguage);
QStatus alljoyn_aboutdata_setdevicename([In] alljoyn_aboutdata data, [Const] [In] PSTR deviceName, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_getdevicename([In] alljoyn_aboutdata data, [In] [Out] sbyte** deviceName, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_setdeviceid([In] alljoyn_aboutdata data, [Const] [In] PSTR deviceId);
QStatus alljoyn_aboutdata_getdeviceid([In] alljoyn_aboutdata data, [In] [Out] sbyte** deviceId);
QStatus alljoyn_aboutdata_setappname([In] alljoyn_aboutdata data, [Const] [In] PSTR appName, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_getappname([In] alljoyn_aboutdata data, [In] [Out] sbyte** appName, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_setmanufacturer([In] alljoyn_aboutdata data, [Const] [In] PSTR manufacturer, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_getmanufacturer([In] alljoyn_aboutdata data, [In] [Out] sbyte** manufacturer, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_setmodelnumber([In] alljoyn_aboutdata data, [Const] [In] PSTR modelNumber);
QStatus alljoyn_aboutdata_getmodelnumber([In] alljoyn_aboutdata data, [In] [Out] sbyte** modelNumber);
QStatus alljoyn_aboutdata_setsupportedlanguage([In] alljoyn_aboutdata data, [Const] [In] PSTR language);
nuint alljoyn_aboutdata_getsupportedlanguages([In] alljoyn_aboutdata data, [Const] [In] sbyte** languageTags, [In] nuint num);
QStatus alljoyn_aboutdata_setdescription([In] alljoyn_aboutdata data, [Const] [In] PSTR description, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_getdescription([In] alljoyn_aboutdata data, [In] [Out] sbyte** description, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_setdateofmanufacture([In] alljoyn_aboutdata data, [Const] [In] PSTR dateOfManufacture);
QStatus alljoyn_aboutdata_getdateofmanufacture([In] alljoyn_aboutdata data, [In] [Out] sbyte** dateOfManufacture);
QStatus alljoyn_aboutdata_setsoftwareversion([In] alljoyn_aboutdata data, [Const] [In] PSTR softwareVersion);
QStatus alljoyn_aboutdata_getsoftwareversion([In] alljoyn_aboutdata data, [In] [Out] sbyte** softwareVersion);
QStatus alljoyn_aboutdata_getajsoftwareversion([In] alljoyn_aboutdata data, [In] [Out] sbyte** ajSoftwareVersion);
QStatus alljoyn_aboutdata_sethardwareversion([In] alljoyn_aboutdata data, [Const] [In] PSTR hardwareVersion);
QStatus alljoyn_aboutdata_gethardwareversion([In] alljoyn_aboutdata data, [In] [Out] sbyte** hardwareVersion);
QStatus alljoyn_aboutdata_setsupporturl([In] alljoyn_aboutdata data, [Const] [In] PSTR supportUrl);
QStatus alljoyn_aboutdata_getsupporturl([In] alljoyn_aboutdata data, [In] [Out] sbyte** supportUrl);
QStatus alljoyn_aboutdata_setfield([In] alljoyn_aboutdata data, [Const] [In] PSTR name, [In] alljoyn_msgarg value, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_getfield([In] alljoyn_aboutdata data, [Const] [In] PSTR name, [In] [Out] alljoyn_msgarg* value, [Const] [In] PSTR language);
nuint alljoyn_aboutdata_getfields([In] alljoyn_aboutdata data, [Const] [In] sbyte** fields, [In] nuint num_fields);
QStatus alljoyn_aboutdata_getaboutdata([In] alljoyn_aboutdata data, [In] alljoyn_msgarg msgArg, [Const] [In] PSTR language);
QStatus alljoyn_aboutdata_getannouncedaboutdata([In] alljoyn_aboutdata data, [In] alljoyn_msgarg msgArg);
byte alljoyn_aboutdata_isfieldrequired([In] alljoyn_aboutdata data, [Const] [In] PSTR fieldName);
byte alljoyn_aboutdata_isfieldannounced([In] alljoyn_aboutdata data, [Const] [In] PSTR fieldName);
byte alljoyn_aboutdata_isfieldlocalized([In] alljoyn_aboutdata data, [Const] [In] PSTR fieldName);
PSTR alljoyn_aboutdata_getfieldsignature([In] alljoyn_aboutdata data, [Const] [In] PSTR fieldName);
_alljoyn_abouticon_handle* alljoyn_abouticon_create();
void alljoyn_abouticon_destroy([In] [Out] _alljoyn_abouticon_handle* icon);
void alljoyn_abouticon_getcontent([In] [Out] _alljoyn_abouticon_handle* icon, [Const] [In] byte** data, [In] [Out] nuint* size);
QStatus alljoyn_abouticon_setcontent([In] [Out] _alljoyn_abouticon_handle* icon, [Const] [In] PSTR type, [In] [Out] byte* data, [In] nuint csize, [In] byte ownsData);
void alljoyn_abouticon_geturl([In] [Out] _alljoyn_abouticon_handle* icon, [Const] [In] sbyte** type, [Const] [In] sbyte** url);
QStatus alljoyn_abouticon_seturl([In] [Out] _alljoyn_abouticon_handle* icon, [Const] [In] PSTR type, [Const] [In] PSTR url);
void alljoyn_abouticon_clear([In] [Out] _alljoyn_abouticon_handle* icon);
QStatus alljoyn_abouticon_setcontent_frommsgarg([In] [Out] _alljoyn_abouticon_handle* icon, [Const] [In] alljoyn_msgarg arg);
ushort alljoyn_permissionconfigurator_getdefaultclaimcapabilities();
QStatus alljoyn_permissionconfigurator_getapplicationstate([Const] [In] alljoyn_permissionconfigurator configurator, [In] [Out] alljoyn_applicationstate* state);
QStatus alljoyn_permissionconfigurator_setapplicationstate([In] alljoyn_permissionconfigurator configurator, [In] alljoyn_applicationstate state);
QStatus alljoyn_permissionconfigurator_getpublickey([In] alljoyn_permissionconfigurator configurator, [In] [Out] sbyte** publicKey);
void alljoyn_permissionconfigurator_publickey_destroy([In] [Out] sbyte* publicKey);
QStatus alljoyn_permissionconfigurator_getmanifesttemplate([In] alljoyn_permissionconfigurator configurator, [In] [Out] sbyte** manifestTemplateXml);
void alljoyn_permissionconfigurator_manifesttemplate_destroy([In] [Out] sbyte* manifestTemplateXml);
QStatus alljoyn_permissionconfigurator_setmanifesttemplatefromxml([In] alljoyn_permissionconfigurator configurator, [In] [Out] sbyte* manifestTemplateXml);
QStatus alljoyn_permissionconfigurator_getclaimcapabilities([Const] [In] alljoyn_permissionconfigurator configurator, [In] [Out] ushort* claimCapabilities);
QStatus alljoyn_permissionconfigurator_setclaimcapabilities([In] alljoyn_permissionconfigurator configurator, [In] ushort claimCapabilities);
QStatus alljoyn_permissionconfigurator_getclaimcapabilitiesadditionalinfo([Const] [In] alljoyn_permissionconfigurator configurator, [In] [Out] ushort* additionalInfo);
QStatus alljoyn_permissionconfigurator_setclaimcapabilitiesadditionalinfo([In] alljoyn_permissionconfigurator configurator, [In] ushort additionalInfo);
QStatus alljoyn_permissionconfigurator_reset([In] alljoyn_permissionconfigurator configurator);
QStatus alljoyn_permissionconfigurator_claim([In] alljoyn_permissionconfigurator configurator, [In] [Out] sbyte* caKey, [In] [Out] sbyte* identityCertificateChain, [Const] [In] byte* groupId, [In] nuint groupSize, [In] [Out] sbyte* groupAuthority, [In] [Out] sbyte** manifestsXmls, [In] nuint manifestsCount);
QStatus alljoyn_permissionconfigurator_updateidentity([In] alljoyn_permissionconfigurator configurator, [In] [Out] sbyte* identityCertificateChain, [In] [Out] sbyte** manifestsXmls, [In] nuint manifestsCount);
QStatus alljoyn_permissionconfigurator_getidentity([In] alljoyn_permissionconfigurator configurator, [In] [Out] sbyte** identityCertificateChain);
void alljoyn_permissionconfigurator_certificatechain_destroy([In] [Out] sbyte* certificateChain);
QStatus alljoyn_permissionconfigurator_getmanifests([In] alljoyn_permissionconfigurator configurator, [In] [Out] alljoyn_manifestarray* manifestArray);
void alljoyn_permissionconfigurator_manifestarray_cleanup([In] [Out] alljoyn_manifestarray* manifestArray);
QStatus alljoyn_permissionconfigurator_installmanifests([In] alljoyn_permissionconfigurator configurator, [In] [Out] sbyte** manifestsXmls, [In] nuint manifestsCount, [In] int append);
QStatus alljoyn_permissionconfigurator_getidentitycertificateid([In] alljoyn_permissionconfigurator configurator, [In] [Out] alljoyn_certificateid* certificateId);
void alljoyn_permissionconfigurator_certificateid_cleanup([In] [Out] alljoyn_certificateid* certificateId);
QStatus alljoyn_permissionconfigurator_updatepolicy([In] alljoyn_permissionconfigurator configurator, [In] [Out] sbyte* policyXml);
QStatus alljoyn_permissionconfigurator_getpolicy([In] alljoyn_permissionconfigurator configurator, [In] [Out] sbyte** policyXml);
QStatus alljoyn_permissionconfigurator_getdefaultpolicy([In] alljoyn_permissionconfigurator configurator, [In] [Out] sbyte** policyXml);
void alljoyn_permissionconfigurator_policy_destroy([In] [Out] sbyte* policyXml);
QStatus alljoyn_permissionconfigurator_resetpolicy([In] alljoyn_permissionconfigurator configurator);
QStatus alljoyn_permissionconfigurator_getmembershipsummaries([In] alljoyn_permissionconfigurator configurator, [In] [Out] alljoyn_certificateidarray* certificateIds);
void alljoyn_permissionconfigurator_certificateidarray_cleanup([In] [Out] alljoyn_certificateidarray* certificateIdArray);
QStatus alljoyn_permissionconfigurator_installmembership([In] alljoyn_permissionconfigurator configurator, [In] [Out] sbyte* membershipCertificateChain);
QStatus alljoyn_permissionconfigurator_removemembership([In] alljoyn_permissionconfigurator configurator, [Const] [In] byte* serial, [In] nuint serialLen, [In] [Out] sbyte* issuerPublicKey, [Const] [In] byte* issuerAki, [In] nuint issuerAkiLen);
QStatus alljoyn_permissionconfigurator_startmanagement([In] alljoyn_permissionconfigurator configurator);
QStatus alljoyn_permissionconfigurator_endmanagement([In] alljoyn_permissionconfigurator configurator);
alljoyn_applicationstatelistener alljoyn_applicationstatelistener_create([Const] [In] alljoyn_applicationstatelistener_callbacks* callbacks, [In] [Out] void* context);
void alljoyn_applicationstatelistener_destroy([In] alljoyn_applicationstatelistener listener);
alljoyn_keystorelistener alljoyn_keystorelistener_create([Const] [In] alljoyn_keystorelistener_callbacks* callbacks, [Const] [In] void* context);
alljoyn_keystorelistener alljoyn_keystorelistener_with_synchronization_create([Const] [In] alljoyn_keystorelistener_with_synchronization_callbacks* callbacks, [In] [Out] void* context);
void alljoyn_keystorelistener_destroy([In] alljoyn_keystorelistener listener);
QStatus alljoyn_keystorelistener_putkeys([In] alljoyn_keystorelistener listener, [In] alljoyn_keystore keyStore, [Const] [In] PSTR source, [Const] [In] PSTR password);
QStatus alljoyn_keystorelistener_getkeys([In] alljoyn_keystorelistener listener, [In] alljoyn_keystore keyStore, [In] PSTR sink, [In] [Out] nuint* sink_sz);
alljoyn_sessionopts alljoyn_sessionopts_create([In] byte traffic, [In] int isMultipoint, [In] byte proximity, [In] ushort transports);
void alljoyn_sessionopts_destroy([In] alljoyn_sessionopts opts);
byte alljoyn_sessionopts_get_traffic([Const] [In] alljoyn_sessionopts opts);
void alljoyn_sessionopts_set_traffic([In] alljoyn_sessionopts opts, [In] byte traffic);
int alljoyn_sessionopts_get_multipoint([Const] [In] alljoyn_sessionopts opts);
void alljoyn_sessionopts_set_multipoint([In] alljoyn_sessionopts opts, [In] int isMultipoint);
byte alljoyn_sessionopts_get_proximity([Const] [In] alljoyn_sessionopts opts);
void alljoyn_sessionopts_set_proximity([In] alljoyn_sessionopts opts, [In] byte proximity);
ushort alljoyn_sessionopts_get_transports([Const] [In] alljoyn_sessionopts opts);
void alljoyn_sessionopts_set_transports([In] alljoyn_sessionopts opts, [In] ushort transports);
int alljoyn_sessionopts_iscompatible([Const] [In] alljoyn_sessionopts one, [Const] [In] alljoyn_sessionopts other);
int alljoyn_sessionopts_cmp([Const] [In] alljoyn_sessionopts one, [Const] [In] alljoyn_sessionopts other);
alljoyn_message alljoyn_message_create([In] alljoyn_busattachment bus);
void alljoyn_message_destroy([In] alljoyn_message msg);
int alljoyn_message_isbroadcastsignal([In] alljoyn_message msg);
int alljoyn_message_isglobalbroadcast([In] alljoyn_message msg);
int alljoyn_message_issessionless([In] alljoyn_message msg);
byte alljoyn_message_getflags([In] alljoyn_message msg);
int alljoyn_message_isexpired([In] alljoyn_message msg, [In] [Out] uint* tillExpireMS);
int alljoyn_message_isunreliable([In] alljoyn_message msg);
int alljoyn_message_isencrypted([In] alljoyn_message msg);
PSTR alljoyn_message_getauthmechanism([In] alljoyn_message msg);
alljoyn_messagetype alljoyn_message_gettype([In] alljoyn_message msg);
void alljoyn_message_getargs([In] alljoyn_message msg, [In] [Out] nuint* numArgs, [In] [Out] alljoyn_msgarg* args);
alljoyn_msgarg alljoyn_message_getarg([In] alljoyn_message msg, [In] nuint argN);
QStatus alljoyn_message_parseargs([In] alljoyn_message msg, [Const] [In] PSTR signature, ...);
uint alljoyn_message_getcallserial([In] alljoyn_message msg);
PSTR alljoyn_message_getsignature([In] alljoyn_message msg);
PSTR alljoyn_message_getobjectpath([In] alljoyn_message msg);
PSTR alljoyn_message_getinterface([In] alljoyn_message msg);
PSTR alljoyn_message_getmembername([In] alljoyn_message msg);
uint alljoyn_message_getreplyserial([In] alljoyn_message msg);
PSTR alljoyn_message_getsender([In] alljoyn_message msg);
PSTR alljoyn_message_getreceiveendpointname([In] alljoyn_message msg);
PSTR alljoyn_message_getdestination([In] alljoyn_message msg);
uint alljoyn_message_getcompressiontoken([In] alljoyn_message msg);
uint alljoyn_message_getsessionid([In] alljoyn_message msg);
PSTR alljoyn_message_geterrorname([In] alljoyn_message msg, [In] PSTR errorMessage, [In] [Out] nuint* errorMessage_size);
nuint alljoyn_message_tostring([In] alljoyn_message msg, [In] PSTR str, [In] nuint buf);
nuint alljoyn_message_description([In] alljoyn_message msg, [In] PSTR str, [In] nuint buf);
uint alljoyn_message_gettimestamp([In] alljoyn_message msg);
int alljoyn_message_eql([Const] [In] alljoyn_message one, [Const] [In] alljoyn_message other);
void alljoyn_message_setendianess([Const] [In] sbyte endian);
QStatus alljoyn_authlistener_requestcredentialsresponse([In] alljoyn_authlistener listener, [In] [Out] void* authContext, [In] int accept, [In] alljoyn_credentials credentials);
QStatus alljoyn_authlistener_verifycredentialsresponse([In] alljoyn_authlistener listener, [In] [Out] void* authContext, [In] int accept);
alljoyn_authlistener alljoyn_authlistener_create([Const] [In] alljoyn_authlistener_callbacks* callbacks, [Const] [In] void* context);
alljoyn_authlistener alljoyn_authlistenerasync_create([Const] [In] alljoyn_authlistenerasync_callbacks* callbacks, [Const] [In] void* context);
void alljoyn_authlistener_destroy([In] alljoyn_authlistener listener);
void alljoyn_authlistenerasync_destroy([In] alljoyn_authlistener listener);
QStatus alljoyn_authlistener_setsharedsecret([In] alljoyn_authlistener listener, [Const] [In] byte* sharedSecret, [In] nuint sharedSecretSize);
alljoyn_credentials alljoyn_credentials_create();
void alljoyn_credentials_destroy([In] alljoyn_credentials cred);
int alljoyn_credentials_isset([Const] [In] alljoyn_credentials cred, [In] ushort creds);
void alljoyn_credentials_setpassword([In] alljoyn_credentials cred, [Const] [In] PSTR pwd);
void alljoyn_credentials_setusername([In] alljoyn_credentials cred, [Const] [In] PSTR userName);
void alljoyn_credentials_setcertchain([In] alljoyn_credentials cred, [Const] [In] PSTR certChain);
void alljoyn_credentials_setprivatekey([In] alljoyn_credentials cred, [Const] [In] PSTR pk);
void alljoyn_credentials_setlogonentry([In] alljoyn_credentials cred, [Const] [In] PSTR logonEntry);
void alljoyn_credentials_setexpiration([In] alljoyn_credentials cred, [In] uint expiration);
PSTR alljoyn_credentials_getpassword([Const] [In] alljoyn_credentials cred);
PSTR alljoyn_credentials_getusername([Const] [In] alljoyn_credentials cred);
PSTR alljoyn_credentials_getcertchain([Const] [In] alljoyn_credentials cred);
PSTR alljoyn_credentials_getprivateKey([Const] [In] alljoyn_credentials cred);
PSTR alljoyn_credentials_getlogonentry([Const] [In] alljoyn_credentials cred);
uint alljoyn_credentials_getexpiration([Const] [In] alljoyn_credentials cred);
void alljoyn_credentials_clear([In] alljoyn_credentials cred);
alljoyn_buslistener alljoyn_buslistener_create([Const] [In] alljoyn_buslistener_callbacks* callbacks, [Const] [In] void* context);
void alljoyn_buslistener_destroy([In] alljoyn_buslistener listener);
nuint alljoyn_interfacedescription_member_getannotationscount([In] alljoyn_interfacedescription_member member);
void alljoyn_interfacedescription_member_getannotationatindex([In] alljoyn_interfacedescription_member member, [In] nuint index, [In] PSTR name, [In] [Out] nuint* name_size, [In] PSTR value, [In] [Out] nuint* value_size);
int alljoyn_interfacedescription_member_getannotation([In] alljoyn_interfacedescription_member member, [Const] [In] PSTR name, [In] PSTR value, [In] [Out] nuint* value_size);
nuint alljoyn_interfacedescription_member_getargannotationscount([In] alljoyn_interfacedescription_member member, [Const] [In] PSTR argName);
void alljoyn_interfacedescription_member_getargannotationatindex([In] alljoyn_interfacedescription_member member, [Const] [In] PSTR argName, [In] nuint index, [In] PSTR name, [In] [Out] nuint* name_size, [In] PSTR value, [In] [Out] nuint* value_size);
int alljoyn_interfacedescription_member_getargannotation([In] alljoyn_interfacedescription_member member, [Const] [In] PSTR argName, [Const] [In] PSTR name, [In] PSTR value, [In] [Out] nuint* value_size);
nuint alljoyn_interfacedescription_property_getannotationscount([In] alljoyn_interfacedescription_property property);
void alljoyn_interfacedescription_property_getannotationatindex([In] alljoyn_interfacedescription_property property, [In] nuint index, [In] PSTR name, [In] [Out] nuint* name_size, [In] PSTR value, [In] [Out] nuint* value_size);
int alljoyn_interfacedescription_property_getannotation([In] alljoyn_interfacedescription_property property, [Const] [In] PSTR name, [In] PSTR value, [In] [Out] nuint* value_size);
void alljoyn_interfacedescription_activate([In] alljoyn_interfacedescription iface);
QStatus alljoyn_interfacedescription_addannotation([In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [Const] [In] PSTR value);
int alljoyn_interfacedescription_getannotation([In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [In] PSTR value, [In] [Out] nuint* value_size);
nuint alljoyn_interfacedescription_getannotationscount([In] alljoyn_interfacedescription iface);
void alljoyn_interfacedescription_getannotationatindex([In] alljoyn_interfacedescription iface, [In] nuint index, [In] PSTR name, [In] [Out] nuint* name_size, [In] PSTR value, [In] [Out] nuint* value_size);
int alljoyn_interfacedescription_getmember([Const] [In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [In] [Out] alljoyn_interfacedescription_member* member);
QStatus alljoyn_interfacedescription_addmember([In] alljoyn_interfacedescription iface, [In] alljoyn_messagetype type, [Const] [In] PSTR name, [Const] [In] PSTR inputSig, [Const] [In] PSTR outSig, [Const] [In] PSTR argNames, [In] byte annotation);
QStatus alljoyn_interfacedescription_addmemberannotation([In] alljoyn_interfacedescription iface, [Const] [In] PSTR member, [Const] [In] PSTR name, [Const] [In] PSTR value);
int alljoyn_interfacedescription_getmemberannotation([In] alljoyn_interfacedescription iface, [Const] [In] PSTR member, [Const] [In] PSTR name, [In] PSTR value, [In] [Out] nuint* value_size);
nuint alljoyn_interfacedescription_getmembers([Const] [In] alljoyn_interfacedescription iface, [In] [Out] alljoyn_interfacedescription_member* members, [In] nuint numMembers);
int alljoyn_interfacedescription_hasmember([In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [Const] [In] PSTR inSig, [Const] [In] PSTR outSig);
QStatus alljoyn_interfacedescription_addmethod([In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [Const] [In] PSTR inputSig, [Const] [In] PSTR outSig, [Const] [In] PSTR argNames, [In] byte annotation, [Const] [In] PSTR accessPerms);
int alljoyn_interfacedescription_getmethod([In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [In] [Out] alljoyn_interfacedescription_member* member);
QStatus alljoyn_interfacedescription_addsignal([In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [Const] [In] PSTR sig, [Const] [In] PSTR argNames, [In] byte annotation, [Const] [In] PSTR accessPerms);
int alljoyn_interfacedescription_getsignal([In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [In] [Out] alljoyn_interfacedescription_member* member);
int alljoyn_interfacedescription_getproperty([Const] [In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [In] [Out] alljoyn_interfacedescription_property* property);
nuint alljoyn_interfacedescription_getproperties([Const] [In] alljoyn_interfacedescription iface, [In] [Out] alljoyn_interfacedescription_property* props, [In] nuint numProps);
QStatus alljoyn_interfacedescription_addproperty([In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [Const] [In] PSTR signature, [In] byte access);
QStatus alljoyn_interfacedescription_addpropertyannotation([In] alljoyn_interfacedescription iface, [Const] [In] PSTR property, [Const] [In] PSTR name, [Const] [In] PSTR value);
int alljoyn_interfacedescription_getpropertyannotation([In] alljoyn_interfacedescription iface, [Const] [In] PSTR property, [Const] [In] PSTR name, [In] PSTR value, [In] [Out] nuint* str_size);
int alljoyn_interfacedescription_hasproperty([Const] [In] alljoyn_interfacedescription iface, [Const] [In] PSTR name);
int alljoyn_interfacedescription_hasproperties([Const] [In] alljoyn_interfacedescription iface);
PSTR alljoyn_interfacedescription_getname([Const] [In] alljoyn_interfacedescription iface);
nuint alljoyn_interfacedescription_introspect([Const] [In] alljoyn_interfacedescription iface, [In] PSTR str, [In] nuint buf, [In] nuint indent);
int alljoyn_interfacedescription_issecure([Const] [In] alljoyn_interfacedescription iface);
alljoyn_interfacedescription_securitypolicy alljoyn_interfacedescription_getsecuritypolicy([Const] [In] alljoyn_interfacedescription iface);
void alljoyn_interfacedescription_setdescriptionlanguage([In] alljoyn_interfacedescription iface, [Const] [In] PSTR language);
nuint alljoyn_interfacedescription_getdescriptionlanguages([Const] [In] alljoyn_interfacedescription iface, [Const] [In] sbyte** languages, [In] nuint size);
nuint alljoyn_interfacedescription_getdescriptionlanguages2([Const] [In] alljoyn_interfacedescription iface, [In] PSTR languages, [In] nuint languagesSize);
void alljoyn_interfacedescription_setdescription([In] alljoyn_interfacedescription iface, [Const] [In] PSTR description);
QStatus alljoyn_interfacedescription_setdescriptionforlanguage([In] alljoyn_interfacedescription iface, [Const] [In] PSTR description, [Const] [In] PSTR languageTag);
nuint alljoyn_interfacedescription_getdescriptionforlanguage([In] alljoyn_interfacedescription iface, [In] PSTR description, [In] nuint maxLanguageLength, [Const] [In] PSTR languageTag);
QStatus alljoyn_interfacedescription_setmemberdescription([In] alljoyn_interfacedescription iface, [Const] [In] PSTR member, [Const] [In] PSTR description);
QStatus alljoyn_interfacedescription_setmemberdescriptionforlanguage([In] alljoyn_interfacedescription iface, [Const] [In] PSTR member, [Const] [In] PSTR description, [Const] [In] PSTR languageTag);
nuint alljoyn_interfacedescription_getmemberdescriptionforlanguage([In] alljoyn_interfacedescription iface, [Const] [In] PSTR member, [In] PSTR description, [In] nuint maxLanguageLength, [Const] [In] PSTR languageTag);
QStatus alljoyn_interfacedescription_setargdescription([In] alljoyn_interfacedescription iface, [Const] [In] PSTR member, [Const] [In] PSTR argName, [Const] [In] PSTR description);
QStatus alljoyn_interfacedescription_setargdescriptionforlanguage([In] alljoyn_interfacedescription iface, [Const] [In] PSTR member, [Const] [In] PSTR arg, [Const] [In] PSTR description, [Const] [In] PSTR languageTag);
nuint alljoyn_interfacedescription_getargdescriptionforlanguage([In] alljoyn_interfacedescription iface, [Const] [In] PSTR member, [Const] [In] PSTR arg, [In] PSTR description, [In] nuint maxLanguageLength, [Const] [In] PSTR languageTag);
QStatus alljoyn_interfacedescription_setpropertydescription([In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [Const] [In] PSTR description);
QStatus alljoyn_interfacedescription_setpropertydescriptionforlanguage([In] alljoyn_interfacedescription iface, [Const] [In] PSTR name, [Const] [In] PSTR description, [Const] [In] PSTR languageTag);
nuint alljoyn_interfacedescription_getpropertydescriptionforlanguage([In] alljoyn_interfacedescription iface, [Const] [In] PSTR property, [In] PSTR description, [In] nuint maxLanguageLength, [Const] [In] PSTR languageTag);
void alljoyn_interfacedescription_setdescriptiontranslationcallback([In] alljoyn_interfacedescription iface, [In] alljoyn_interfacedescription_translation_callback_ptr translationCallback);
alljoyn_interfacedescription_translation_callback_ptr alljoyn_interfacedescription_getdescriptiontranslationcallback([Const] [In] alljoyn_interfacedescription iface);
int alljoyn_interfacedescription_hasdescription([Const] [In] alljoyn_interfacedescription iface);
QStatus alljoyn_interfacedescription_addargannotation([In] alljoyn_interfacedescription iface, [Const] [In] PSTR member, [Const] [In] PSTR argName, [Const] [In] PSTR name, [Const] [In] PSTR value);
int alljoyn_interfacedescription_getmemberargannotation([Const] [In] alljoyn_interfacedescription iface, [Const] [In] PSTR member, [Const] [In] PSTR argName, [Const] [In] PSTR name, [In] PSTR value, [In] [Out] nuint* value_size);
int alljoyn_interfacedescription_eql([Const] [In] alljoyn_interfacedescription one, [Const] [In] alljoyn_interfacedescription other);
int alljoyn_interfacedescription_member_eql([Const] [In] alljoyn_interfacedescription_member one, [Const] [In] alljoyn_interfacedescription_member other);
int alljoyn_interfacedescription_property_eql([Const] [In] alljoyn_interfacedescription_property one, [Const] [In] alljoyn_interfacedescription_property other);
alljoyn_busobject alljoyn_busobject_create([Const] [In] PSTR path, [In] int isPlaceholder, [Const] [In] alljoyn_busobject_callbacks* callbacks_in, [Const] [In] void* context_in);
void alljoyn_busobject_destroy([In] alljoyn_busobject bus);
PSTR alljoyn_busobject_getpath([In] alljoyn_busobject bus);
void alljoyn_busobject_emitpropertychanged([In] alljoyn_busobject bus, [Const] [In] PSTR ifcName, [Const] [In] PSTR propName, [In] alljoyn_msgarg val, [In] uint id);
void alljoyn_busobject_emitpropertieschanged([In] alljoyn_busobject bus, [Const] [In] PSTR ifcName, [Const] [In] sbyte** propNames, [In] nuint numProps, [In] uint id);
nuint alljoyn_busobject_getname([In] alljoyn_busobject bus, [In] PSTR buffer, [In] nuint bufferSz);
QStatus alljoyn_busobject_addinterface([In] alljoyn_busobject bus, [Const] [In] alljoyn_interfacedescription iface);
QStatus alljoyn_busobject_addmethodhandler([In] alljoyn_busobject bus, [Const] [In] alljoyn_interfacedescription_member member, [In] alljoyn_messagereceiver_methodhandler_ptr handler, [In] [Out] void* context);
QStatus alljoyn_busobject_addmethodhandlers([In] alljoyn_busobject bus, [Const] [In] alljoyn_busobject_methodentry* entries, [In] nuint numEntries);
QStatus alljoyn_busobject_methodreply_args([In] alljoyn_busobject bus, [In] alljoyn_message msg, [Const] [In] alljoyn_msgarg args, [In] nuint numArgs);
QStatus alljoyn_busobject_methodreply_err([In] alljoyn_busobject bus, [In] alljoyn_message msg, [Const] [In] PSTR error, [Const] [In] PSTR errorMessage);
QStatus alljoyn_busobject_methodreply_status([In] alljoyn_busobject bus, [In] alljoyn_message msg, [In] QStatus status);
alljoyn_busattachment alljoyn_busobject_getbusattachment([In] alljoyn_busobject bus);
QStatus alljoyn_busobject_signal([In] alljoyn_busobject bus, [Const] [In] PSTR destination, [In] uint sessionId, [Const] [In] alljoyn_interfacedescription_member signal, [Const] [In] alljoyn_msgarg args, [In] nuint numArgs, [In] ushort timeToLive, [In] byte flags, [In] alljoyn_message msg);
QStatus alljoyn_busobject_cancelsessionlessmessage_serial([In] alljoyn_busobject bus, [In] uint serialNumber);
QStatus alljoyn_busobject_cancelsessionlessmessage([In] alljoyn_busobject bus, [Const] [In] alljoyn_message msg);
int alljoyn_busobject_issecure([In] alljoyn_busobject bus);
nuint alljoyn_busobject_getannouncedinterfacenames([In] alljoyn_busobject bus, [Const] [In] sbyte** interfaces, [In] nuint numInterfaces);
QStatus alljoyn_busobject_setannounceflag([In] alljoyn_busobject bus, [Const] [In] alljoyn_interfacedescription iface, [In] alljoyn_about_announceflag isAnnounced);
QStatus alljoyn_busobject_addinterface_announced([In] alljoyn_busobject bus, [Const] [In] alljoyn_interfacedescription iface);
alljoyn_proxybusobject alljoyn_proxybusobject_create([In] alljoyn_busattachment bus, [Const] [In] PSTR service, [Const] [In] PSTR path, [In] uint sessionId);
alljoyn_proxybusobject alljoyn_proxybusobject_create_secure([In] alljoyn_busattachment bus, [Const] [In] PSTR service, [Const] [In] PSTR path, [In] uint sessionId);
void alljoyn_proxybusobject_destroy([In] alljoyn_proxybusobject proxyObj);
QStatus alljoyn_proxybusobject_addinterface([In] alljoyn_proxybusobject proxyObj, [Const] [In] alljoyn_interfacedescription iface);
QStatus alljoyn_proxybusobject_addinterface_by_name([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR name);
nuint alljoyn_proxybusobject_getchildren([In] alljoyn_proxybusobject proxyObj, [In] [Out] alljoyn_proxybusobject* children, [In] nuint numChildren);
alljoyn_proxybusobject alljoyn_proxybusobject_getchild([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR path);
QStatus alljoyn_proxybusobject_addchild([In] alljoyn_proxybusobject proxyObj, [Const] [In] alljoyn_proxybusobject child);
QStatus alljoyn_proxybusobject_removechild([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR path);
QStatus alljoyn_proxybusobject_introspectremoteobject([In] alljoyn_proxybusobject proxyObj);
QStatus alljoyn_proxybusobject_introspectremoteobjectasync([In] alljoyn_proxybusobject proxyObj, [In] alljoyn_proxybusobject_listener_introspectcb_ptr callback, [In] [Out] void* context);
QStatus alljoyn_proxybusobject_getproperty([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR iface, [Const] [In] PSTR property, [In] alljoyn_msgarg value);
QStatus alljoyn_proxybusobject_getpropertyasync([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR iface, [Const] [In] PSTR property, [In] alljoyn_proxybusobject_listener_getpropertycb_ptr callback, [In] uint timeout, [In] [Out] void* context);
QStatus alljoyn_proxybusobject_getallproperties([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR iface, [In] alljoyn_msgarg values);
QStatus alljoyn_proxybusobject_getallpropertiesasync([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR iface, [In] alljoyn_proxybusobject_listener_getallpropertiescb_ptr callback, [In] uint timeout, [In] [Out] void* context);
QStatus alljoyn_proxybusobject_setproperty([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR iface, [Const] [In] PSTR property, [In] alljoyn_msgarg value);
QStatus alljoyn_proxybusobject_registerpropertieschangedlistener([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR iface, [Const] [In] sbyte** properties, [In] nuint numProperties, [In] alljoyn_proxybusobject_listener_propertieschanged_ptr callback, [In] [Out] void* context);
QStatus alljoyn_proxybusobject_unregisterpropertieschangedlistener([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR iface, [In] alljoyn_proxybusobject_listener_propertieschanged_ptr callback);
QStatus alljoyn_proxybusobject_setpropertyasync([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR iface, [Const] [In] PSTR property, [In] alljoyn_msgarg value, [In] alljoyn_proxybusobject_listener_setpropertycb_ptr callback, [In] uint timeout, [In] [Out] void* context);
QStatus alljoyn_proxybusobject_methodcall([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR ifaceName, [Const] [In] PSTR methodName, [Const] [In] alljoyn_msgarg args, [In] nuint numArgs, [In] alljoyn_message replyMsg, [In] uint timeout, [In] byte flags);
QStatus alljoyn_proxybusobject_methodcall_member([In] alljoyn_proxybusobject proxyObj, [Const] [In] alljoyn_interfacedescription_member method, [Const] [In] alljoyn_msgarg args, [In] nuint numArgs, [In] alljoyn_message replyMsg, [In] uint timeout, [In] byte flags);
QStatus alljoyn_proxybusobject_methodcall_noreply([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR ifaceName, [Const] [In] PSTR methodName, [Const] [In] alljoyn_msgarg args, [In] nuint numArgs, [In] byte flags);
QStatus alljoyn_proxybusobject_methodcall_member_noreply([In] alljoyn_proxybusobject proxyObj, [Const] [In] alljoyn_interfacedescription_member method, [Const] [In] alljoyn_msgarg args, [In] nuint numArgs, [In] byte flags);
QStatus alljoyn_proxybusobject_methodcallasync([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR ifaceName, [Const] [In] PSTR methodName, [In] alljoyn_messagereceiver_replyhandler_ptr replyFunc, [Const] [In] alljoyn_msgarg args, [In] nuint numArgs, [In] [Out] void* context, [In] uint timeout, [In] byte flags);
QStatus alljoyn_proxybusobject_methodcallasync_member([In] alljoyn_proxybusobject proxyObj, [Const] [In] alljoyn_interfacedescription_member method, [In] alljoyn_messagereceiver_replyhandler_ptr replyFunc, [Const] [In] alljoyn_msgarg args, [In] nuint numArgs, [In] [Out] void* context, [In] uint timeout, [In] byte flags);
QStatus alljoyn_proxybusobject_parsexml([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR xml, [Const] [In] PSTR identifier);
QStatus alljoyn_proxybusobject_secureconnection([In] alljoyn_proxybusobject proxyObj, [In] int forceAuth);
QStatus alljoyn_proxybusobject_secureconnectionasync([In] alljoyn_proxybusobject proxyObj, [In] int forceAuth);
alljoyn_interfacedescription alljoyn_proxybusobject_getinterface([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR iface);
nuint alljoyn_proxybusobject_getinterfaces([In] alljoyn_proxybusobject proxyObj, [Const] [In] alljoyn_interfacedescription* ifaces, [In] nuint numIfaces);
PSTR alljoyn_proxybusobject_getpath([In] alljoyn_proxybusobject proxyObj);
PSTR alljoyn_proxybusobject_getservicename([In] alljoyn_proxybusobject proxyObj);
PSTR alljoyn_proxybusobject_getuniquename([In] alljoyn_proxybusobject proxyObj);
uint alljoyn_proxybusobject_getsessionid([In] alljoyn_proxybusobject proxyObj);
int alljoyn_proxybusobject_implementsinterface([In] alljoyn_proxybusobject proxyObj, [Const] [In] PSTR iface);
alljoyn_proxybusobject alljoyn_proxybusobject_copy([Const] [In] alljoyn_proxybusobject source);
int alljoyn_proxybusobject_isvalid([In] alljoyn_proxybusobject proxyObj);
int alljoyn_proxybusobject_issecure([In] alljoyn_proxybusobject proxyObj);
void alljoyn_proxybusobject_enablepropertycaching([In] alljoyn_proxybusobject proxyObj);
alljoyn_permissionconfigurationlistener alljoyn_permissionconfigurationlistener_create([Const] [In] alljoyn_permissionconfigurationlistener_callbacks* callbacks, [Const] [In] void* context);
void alljoyn_permissionconfigurationlistener_destroy([In] alljoyn_permissionconfigurationlistener listener);
alljoyn_sessionlistener alljoyn_sessionlistener_create([Const] [In] alljoyn_sessionlistener_callbacks* callbacks, [Const] [In] void* context);
void alljoyn_sessionlistener_destroy([In] alljoyn_sessionlistener listener);
alljoyn_sessionportlistener alljoyn_sessionportlistener_create([Const] [In] alljoyn_sessionportlistener_callbacks* callbacks, [Const] [In] void* context);
void alljoyn_sessionportlistener_destroy([In] alljoyn_sessionportlistener listener);
alljoyn_aboutlistener alljoyn_aboutlistener_create([Const] [In] alljoyn_aboutlistener_callback* callback, [Const] [In] void* context);
void alljoyn_aboutlistener_destroy([In] alljoyn_aboutlistener listener);
alljoyn_busattachment alljoyn_busattachment_create([Const] [In] PSTR applicationName, [In] int allowRemoteMessages);
alljoyn_busattachment alljoyn_busattachment_create_concurrency([Const] [In] PSTR applicationName, [In] int allowRemoteMessages, [In] uint concurrency);
void alljoyn_busattachment_destroy([In] alljoyn_busattachment bus);
QStatus alljoyn_busattachment_start([In] alljoyn_busattachment bus);
QStatus alljoyn_busattachment_stop([In] alljoyn_busattachment bus);
QStatus alljoyn_busattachment_join([In] alljoyn_busattachment bus);
uint alljoyn_busattachment_getconcurrency([In] alljoyn_busattachment bus);
PSTR alljoyn_busattachment_getconnectspec([In] alljoyn_busattachment bus);
void alljoyn_busattachment_enableconcurrentcallbacks([In] alljoyn_busattachment bus);
QStatus alljoyn_busattachment_createinterface([In] alljoyn_busattachment bus, [Const] [In] PSTR name, [In] [Out] alljoyn_interfacedescription* iface);
QStatus alljoyn_busattachment_createinterface_secure([In] alljoyn_busattachment bus, [Const] [In] PSTR name, [In] [Out] alljoyn_interfacedescription* iface, [In] alljoyn_interfacedescription_securitypolicy secPolicy);
QStatus alljoyn_busattachment_connect([In] alljoyn_busattachment bus, [Const] [In] PSTR connectSpec);
void alljoyn_busattachment_registerbuslistener([In] alljoyn_busattachment bus, [In] alljoyn_buslistener listener);
void alljoyn_busattachment_unregisterbuslistener([In] alljoyn_busattachment bus, [In] alljoyn_buslistener listener);
QStatus alljoyn_busattachment_findadvertisedname([In] alljoyn_busattachment bus, [Const] [In] PSTR namePrefix);
QStatus alljoyn_busattachment_findadvertisednamebytransport([In] alljoyn_busattachment bus, [Const] [In] PSTR namePrefix, [In] ushort transports);
QStatus alljoyn_busattachment_cancelfindadvertisedname([In] alljoyn_busattachment bus, [Const] [In] PSTR namePrefix);
QStatus alljoyn_busattachment_cancelfindadvertisednamebytransport([In] alljoyn_busattachment bus, [Const] [In] PSTR namePrefix, [In] ushort transports);
QStatus alljoyn_busattachment_advertisename([In] alljoyn_busattachment bus, [Const] [In] PSTR name, [In] ushort transports);
QStatus alljoyn_busattachment_canceladvertisename([In] alljoyn_busattachment bus, [Const] [In] PSTR name, [In] ushort transports);
alljoyn_interfacedescription alljoyn_busattachment_getinterface([In] alljoyn_busattachment bus, [Const] [In] PSTR name);
QStatus alljoyn_busattachment_joinsession([In] alljoyn_busattachment bus, [Const] [In] PSTR sessionHost, [In] ushort sessionPort, [In] alljoyn_sessionlistener listener, [In] [Out] uint* sessionId, [In] alljoyn_sessionopts opts);
QStatus alljoyn_busattachment_joinsessionasync([In] alljoyn_busattachment bus, [Const] [In] PSTR sessionHost, [In] ushort sessionPort, [In] alljoyn_sessionlistener listener, [Const] [In] alljoyn_sessionopts opts, [In] alljoyn_busattachment_joinsessioncb_ptr callback, [In] [Out] void* context);
QStatus alljoyn_busattachment_registerbusobject([In] alljoyn_busattachment bus, [In] alljoyn_busobject obj);
QStatus alljoyn_busattachment_registerbusobject_secure([In] alljoyn_busattachment bus, [In] alljoyn_busobject obj);
void alljoyn_busattachment_unregisterbusobject([In] alljoyn_busattachment bus, [In] alljoyn_busobject object);
QStatus alljoyn_busattachment_requestname([In] alljoyn_busattachment bus, [Const] [In] PSTR requestedName, [In] uint flags);
QStatus alljoyn_busattachment_releasename([In] alljoyn_busattachment bus, [Const] [In] PSTR name);
QStatus alljoyn_busattachment_bindsessionport([In] alljoyn_busattachment bus, [In] [Out] ushort* sessionPort, [Const] [In] alljoyn_sessionopts opts, [In] alljoyn_sessionportlistener listener);
QStatus alljoyn_busattachment_unbindsessionport([In] alljoyn_busattachment bus, [In] ushort sessionPort);
QStatus alljoyn_busattachment_enablepeersecurity([In] alljoyn_busattachment bus, [Const] [In] PSTR authMechanisms, [In] alljoyn_authlistener listener, [Const] [In] PSTR keyStoreFileName, [In] int isShared);
QStatus alljoyn_busattachment_enablepeersecuritywithpermissionconfigurationlistener([In] alljoyn_busattachment bus, [Const] [In] PSTR authMechanisms, [In] alljoyn_authlistener authListener, [Const] [In] PSTR keyStoreFileName, [In] int isShared, [In] alljoyn_permissionconfigurationlistener permissionConfigurationListener);
int alljoyn_busattachment_ispeersecurityenabled([In] alljoyn_busattachment bus);
QStatus alljoyn_busattachment_createinterfacesfromxml([In] alljoyn_busattachment bus, [Const] [In] PSTR xml);
nuint alljoyn_busattachment_getinterfaces([Const] [In] alljoyn_busattachment bus, [Const] [In] alljoyn_interfacedescription* ifaces, [In] nuint numIfaces);
QStatus alljoyn_busattachment_deleteinterface([In] alljoyn_busattachment bus, [In] alljoyn_interfacedescription iface);
int alljoyn_busattachment_isstarted([In] alljoyn_busattachment bus);
int alljoyn_busattachment_isstopping([In] alljoyn_busattachment bus);
int alljoyn_busattachment_isconnected([Const] [In] alljoyn_busattachment bus);
QStatus alljoyn_busattachment_disconnect([In] alljoyn_busattachment bus, [Const] [In] PSTR unused);
alljoyn_proxybusobject alljoyn_busattachment_getdbusproxyobj([In] alljoyn_busattachment bus);
alljoyn_proxybusobject alljoyn_busattachment_getalljoynproxyobj([In] alljoyn_busattachment bus);
alljoyn_proxybusobject alljoyn_busattachment_getalljoyndebugobj([In] alljoyn_busattachment bus);
PSTR alljoyn_busattachment_getuniquename([Const] [In] alljoyn_busattachment bus);
PSTR alljoyn_busattachment_getglobalguidstring([Const] [In] alljoyn_busattachment bus);
QStatus alljoyn_busattachment_registersignalhandler([In] alljoyn_busattachment bus, [In] alljoyn_messagereceiver_signalhandler_ptr signal_handler, [Const] [In] alljoyn_interfacedescription_member member, [Const] [In] PSTR srcPath);
QStatus alljoyn_busattachment_registersignalhandlerwithrule([In] alljoyn_busattachment bus, [In] alljoyn_messagereceiver_signalhandler_ptr signal_handler, [Const] [In] alljoyn_interfacedescription_member member, [Const] [In] PSTR matchRule);
QStatus alljoyn_busattachment_unregistersignalhandler([In] alljoyn_busattachment bus, [In] alljoyn_messagereceiver_signalhandler_ptr signal_handler, [Const] [In] alljoyn_interfacedescription_member member, [Const] [In] PSTR srcPath);
QStatus alljoyn_busattachment_unregistersignalhandlerwithrule([In] alljoyn_busattachment bus, [In] alljoyn_messagereceiver_signalhandler_ptr signal_handler, [Const] [In] alljoyn_interfacedescription_member member, [Const] [In] PSTR matchRule);
QStatus alljoyn_busattachment_unregisterallhandlers([In] alljoyn_busattachment bus);
QStatus alljoyn_busattachment_registerkeystorelistener([In] alljoyn_busattachment bus, [In] alljoyn_keystorelistener listener);
QStatus alljoyn_busattachment_reloadkeystore([In] alljoyn_busattachment bus);
void alljoyn_busattachment_clearkeystore([In] alljoyn_busattachment bus);
QStatus alljoyn_busattachment_clearkeys([In] alljoyn_busattachment bus, [Const] [In] PSTR guid);
QStatus alljoyn_busattachment_setkeyexpiration([In] alljoyn_busattachment bus, [Const] [In] PSTR guid, [In] uint timeout);
QStatus alljoyn_busattachment_getkeyexpiration([In] alljoyn_busattachment bus, [Const] [In] PSTR guid, [In] [Out] uint* timeout);
QStatus alljoyn_busattachment_addlogonentry([In] alljoyn_busattachment bus, [Const] [In] PSTR authMechanism, [Const] [In] PSTR userName, [Const] [In] PSTR password);
QStatus alljoyn_busattachment_addmatch([In] alljoyn_busattachment bus, [Const] [In] PSTR rule);
QStatus alljoyn_busattachment_removematch([In] alljoyn_busattachment bus, [Const] [In] PSTR rule);
QStatus alljoyn_busattachment_setsessionlistener([In] alljoyn_busattachment bus, [In] uint sessionId, [In] alljoyn_sessionlistener listener);
QStatus alljoyn_busattachment_leavesession([In] alljoyn_busattachment bus, [In] uint sessionId);
QStatus alljoyn_busattachment_secureconnection([In] alljoyn_busattachment bus, [Const] [In] PSTR name, [In] int forceAuth);
QStatus alljoyn_busattachment_secureconnectionasync([In] alljoyn_busattachment bus, [Const] [In] PSTR name, [In] int forceAuth);
QStatus alljoyn_busattachment_removesessionmember([In] alljoyn_busattachment bus, [In] uint sessionId, [Const] [In] PSTR memberName);
QStatus alljoyn_busattachment_setlinktimeout([In] alljoyn_busattachment bus, [In] uint sessionid, [In] [Out] uint* linkTimeout);
QStatus alljoyn_busattachment_setlinktimeoutasync([In] alljoyn_busattachment bus, [In] uint sessionid, [In] uint linkTimeout, [In] alljoyn_busattachment_setlinktimeoutcb_ptr callback, [In] [Out] void* context);
QStatus alljoyn_busattachment_namehasowner([In] alljoyn_busattachment bus, [Const] [In] PSTR name, [In] [Out] int* hasOwner);
QStatus alljoyn_busattachment_getpeerguid([In] alljoyn_busattachment bus, [Const] [In] PSTR name, [In] PSTR guid, [In] [Out] nuint* guidSz);
QStatus alljoyn_busattachment_setdaemondebug([In] alljoyn_busattachment bus, [Const] [In] PSTR module, [In] uint level);
uint alljoyn_busattachment_gettimestamp();
QStatus alljoyn_busattachment_ping([In] alljoyn_busattachment bus, [Const] [In] PSTR name, [In] uint timeout);
void alljoyn_busattachment_registeraboutlistener([In] alljoyn_busattachment bus, [In] alljoyn_aboutlistener aboutListener);
void alljoyn_busattachment_unregisteraboutlistener([In] alljoyn_busattachment bus, [In] alljoyn_aboutlistener aboutListener);
void alljoyn_busattachment_unregisterallaboutlisteners([In] alljoyn_busattachment bus);
QStatus alljoyn_busattachment_whoimplements_interfaces([In] alljoyn_busattachment bus, [Const] [In] sbyte** implementsInterfaces, [In] nuint numberInterfaces);
QStatus alljoyn_busattachment_whoimplements_interface([In] alljoyn_busattachment bus, [Const] [In] PSTR implementsInterface);
QStatus alljoyn_busattachment_cancelwhoimplements_interfaces([In] alljoyn_busattachment bus, [Const] [In] sbyte** implementsInterfaces, [In] nuint numberInterfaces);
QStatus alljoyn_busattachment_cancelwhoimplements_interface([In] alljoyn_busattachment bus, [Const] [In] PSTR implementsInterface);
alljoyn_permissionconfigurator alljoyn_busattachment_getpermissionconfigurator([In] alljoyn_busattachment bus);
QStatus alljoyn_busattachment_registerapplicationstatelistener([In] alljoyn_busattachment bus, [In] alljoyn_applicationstatelistener listener);
QStatus alljoyn_busattachment_unregisterapplicationstatelistener([In] alljoyn_busattachment bus, [In] alljoyn_applicationstatelistener listener);
QStatus alljoyn_busattachment_deletedefaultkeystore([Const] [In] PSTR applicationName);
_alljoyn_abouticonobj_handle* alljoyn_abouticonobj_create([In] alljoyn_busattachment bus, [In] [Out] _alljoyn_abouticon_handle* icon);
void alljoyn_abouticonobj_destroy([In] [Out] _alljoyn_abouticonobj_handle* icon);
_alljoyn_abouticonproxy_handle* alljoyn_abouticonproxy_create([In] alljoyn_busattachment bus, [Const] [In] PSTR busName, [In] uint sessionId);
void alljoyn_abouticonproxy_destroy([In] [Out] _alljoyn_abouticonproxy_handle* proxy);
QStatus alljoyn_abouticonproxy_geticon([In] [Out] _alljoyn_abouticonproxy_handle* proxy, [In] [Out] _alljoyn_abouticon_handle* icon);
QStatus alljoyn_abouticonproxy_getversion([In] [Out] _alljoyn_abouticonproxy_handle* proxy, [In] [Out] ushort* version);
alljoyn_aboutdatalistener alljoyn_aboutdatalistener_create([Const] [In] alljoyn_aboutdatalistener_callbacks* callbacks, [Const] [In] void* context);
void alljoyn_aboutdatalistener_destroy([In] alljoyn_aboutdatalistener listener);
alljoyn_aboutobj alljoyn_aboutobj_create([In] alljoyn_busattachment bus, [In] alljoyn_about_announceflag isAnnounced);
void alljoyn_aboutobj_destroy([In] alljoyn_aboutobj obj);
QStatus alljoyn_aboutobj_announce([In] alljoyn_aboutobj obj, [In] ushort sessionPort, [In] alljoyn_aboutdata aboutData);
QStatus alljoyn_aboutobj_announce_using_datalistener([In] alljoyn_aboutobj obj, [In] ushort sessionPort, [In] alljoyn_aboutdatalistener aboutListener);
QStatus alljoyn_aboutobj_unannounce([In] alljoyn_aboutobj obj);
alljoyn_aboutobjectdescription alljoyn_aboutobjectdescription_create();
alljoyn_aboutobjectdescription alljoyn_aboutobjectdescription_create_full([Const] [In] alljoyn_msgarg arg);
QStatus alljoyn_aboutobjectdescription_createfrommsgarg([In] alljoyn_aboutobjectdescription description, [Const] [In] alljoyn_msgarg arg);
void alljoyn_aboutobjectdescription_destroy([In] alljoyn_aboutobjectdescription description);
nuint alljoyn_aboutobjectdescription_getpaths([In] alljoyn_aboutobjectdescription description, [Const] [In] sbyte** paths, [In] nuint numPaths);
nuint alljoyn_aboutobjectdescription_getinterfaces([In] alljoyn_aboutobjectdescription description, [Const] [In] PSTR path, [Const] [In] sbyte** interfaces, [In] nuint numInterfaces);
nuint alljoyn_aboutobjectdescription_getinterfacepaths([In] alljoyn_aboutobjectdescription description, [Const] [In] PSTR interfaceName, [Const] [In] sbyte** paths, [In] nuint numPaths);
void alljoyn_aboutobjectdescription_clear([In] alljoyn_aboutobjectdescription description);
byte alljoyn_aboutobjectdescription_haspath([In] alljoyn_aboutobjectdescription description, [Const] [In] PSTR path);
byte alljoyn_aboutobjectdescription_hasinterface([In] alljoyn_aboutobjectdescription description, [Const] [In] PSTR interfaceName);
byte alljoyn_aboutobjectdescription_hasinterfaceatpath([In] alljoyn_aboutobjectdescription description, [Const] [In] PSTR path, [Const] [In] PSTR interfaceName);
QStatus alljoyn_aboutobjectdescription_getmsgarg([In] alljoyn_aboutobjectdescription description, [In] alljoyn_msgarg msgArg);
alljoyn_aboutproxy alljoyn_aboutproxy_create([In] alljoyn_busattachment bus, [Const] [In] PSTR busName, [In] uint sessionId);
void alljoyn_aboutproxy_destroy([In] alljoyn_aboutproxy proxy);
QStatus alljoyn_aboutproxy_getobjectdescription([In] alljoyn_aboutproxy proxy, [In] alljoyn_msgarg objectDesc);
QStatus alljoyn_aboutproxy_getaboutdata([In] alljoyn_aboutproxy proxy, [Const] [In] PSTR language, [In] alljoyn_msgarg data);
QStatus alljoyn_aboutproxy_getversion([In] alljoyn_aboutproxy proxy, [In] [Out] ushort* version);
alljoyn_pinglistener alljoyn_pinglistener_create([Const] [In] alljoyn_pinglistener_callback* callback, [Const] [In] void* context);
void alljoyn_pinglistener_destroy([In] alljoyn_pinglistener listener);
alljoyn_autopinger alljoyn_autopinger_create([In] alljoyn_busattachment bus);
void alljoyn_autopinger_destroy([In] alljoyn_autopinger autopinger);
void alljoyn_autopinger_pause([In] alljoyn_autopinger autopinger);
void alljoyn_autopinger_resume([In] alljoyn_autopinger autopinger);
void alljoyn_autopinger_addpinggroup([In] alljoyn_autopinger autopinger, [Const] [In] PSTR group, [In] alljoyn_pinglistener listener, [In] uint pinginterval);
void alljoyn_autopinger_removepinggroup([In] alljoyn_autopinger autopinger, [Const] [In] PSTR group);
QStatus alljoyn_autopinger_setpinginterval([In] alljoyn_autopinger autopinger, [Const] [In] PSTR group, [In] uint pinginterval);
QStatus alljoyn_autopinger_adddestination([In] alljoyn_autopinger autopinger, [Const] [In] PSTR group, [Const] [In] PSTR destination);
QStatus alljoyn_autopinger_removedestination([In] alljoyn_autopinger autopinger, [Const] [In] PSTR group, [Const] [In] PSTR destination, [In] int removeall);
PSTR alljoyn_getversion();
PSTR alljoyn_getbuildinfo();
uint alljoyn_getnumericversion();
QStatus alljoyn_init();
QStatus alljoyn_shutdown();
QStatus alljoyn_routerinit();
QStatus alljoyn_routerinitwithconfig([In] [Out] sbyte* configXml);
QStatus alljoyn_routershutdown();
alljoyn_proxybusobject_ref alljoyn_proxybusobject_ref_create([In] alljoyn_proxybusobject proxy);
alljoyn_proxybusobject alljoyn_proxybusobject_ref_get([In] alljoyn_proxybusobject_ref ref);
void alljoyn_proxybusobject_ref_incref([In] alljoyn_proxybusobject_ref ref);
void alljoyn_proxybusobject_ref_decref([In] alljoyn_proxybusobject_ref ref);
alljoyn_observerlistener alljoyn_observerlistener_create([Const] [In] alljoyn_observerlistener_callback* callback, [Const] [In] void* context);
void alljoyn_observerlistener_destroy([In] alljoyn_observerlistener listener);
alljoyn_observer alljoyn_observer_create([In] alljoyn_busattachment bus, [Const] [In] sbyte** mandatoryInterfaces, [In] nuint numMandatoryInterfaces);
void alljoyn_observer_destroy([In] alljoyn_observer observer);
void alljoyn_observer_registerlistener([In] alljoyn_observer observer, [In] alljoyn_observerlistener listener, [In] int triggerOnExisting);
void alljoyn_observer_unregisterlistener([In] alljoyn_observer observer, [In] alljoyn_observerlistener listener);
void alljoyn_observer_unregisteralllisteners([In] alljoyn_observer observer);
alljoyn_proxybusobject_ref alljoyn_observer_get([In] alljoyn_observer observer, [Const] [In] PSTR uniqueBusName, [Const] [In] PSTR objectPath);
alljoyn_proxybusobject_ref alljoyn_observer_getfirst([In] alljoyn_observer observer);
alljoyn_proxybusobject_ref alljoyn_observer_getnext([In] alljoyn_observer observer, [In] alljoyn_proxybusobject_ref proxyref);
QStatus alljoyn_passwordmanager_setcredentials([Const] [In] PSTR authMechanism, [Const] [In] PSTR password);
ushort alljoyn_securityapplicationproxy_getpermissionmanagementsessionport();
alljoyn_securityapplicationproxy alljoyn_securityapplicationproxy_create([In] alljoyn_busattachment bus, [In] [Out] sbyte* appBusName, [In] uint sessionId);
void alljoyn_securityapplicationproxy_destroy([In] alljoyn_securityapplicationproxy proxy);
QStatus alljoyn_securityapplicationproxy_claim([In] alljoyn_securityapplicationproxy proxy, [In] [Out] sbyte* caKey, [In] [Out] sbyte* identityCertificateChain, [Const] [In] byte* groupId, [In] nuint groupSize, [In] [Out] sbyte* groupAuthority, [In] [Out] sbyte** manifestsXmls, [In] nuint manifestsCount);
QStatus alljoyn_securityapplicationproxy_getmanifesttemplate([In] alljoyn_securityapplicationproxy proxy, [In] [Out] sbyte** manifestTemplateXml);
void alljoyn_securityapplicationproxy_manifesttemplate_destroy([In] [Out] sbyte* manifestTemplateXml);
QStatus alljoyn_securityapplicationproxy_getapplicationstate([In] alljoyn_securityapplicationproxy proxy, [In] [Out] alljoyn_applicationstate* applicationState);
QStatus alljoyn_securityapplicationproxy_getclaimcapabilities([In] alljoyn_securityapplicationproxy proxy, [In] [Out] ushort* capabilities);
QStatus alljoyn_securityapplicationproxy_getclaimcapabilitiesadditionalinfo([In] alljoyn_securityapplicationproxy proxy, [In] [Out] ushort* additionalInfo);
QStatus alljoyn_securityapplicationproxy_getpolicy([In] alljoyn_securityapplicationproxy proxy, [In] [Out] sbyte** policyXml);
QStatus alljoyn_securityapplicationproxy_getdefaultpolicy([In] alljoyn_securityapplicationproxy proxy, [In] [Out] sbyte** policyXml);
void alljoyn_securityapplicationproxy_policy_destroy([In] [Out] sbyte* policyXml);
QStatus alljoyn_securityapplicationproxy_updatepolicy([In] alljoyn_securityapplicationproxy proxy, [In] [Out] sbyte* policyXml);
QStatus alljoyn_securityapplicationproxy_updateidentity([In] alljoyn_securityapplicationproxy proxy, [In] [Out] sbyte* identityCertificateChain, [In] [Out] sbyte** manifestsXmls, [In] nuint manifestsCount);
QStatus alljoyn_securityapplicationproxy_installmembership([In] alljoyn_securityapplicationproxy proxy, [In] [Out] sbyte* membershipCertificateChain);
QStatus alljoyn_securityapplicationproxy_reset([In] alljoyn_securityapplicationproxy proxy);
QStatus alljoyn_securityapplicationproxy_resetpolicy([In] alljoyn_securityapplicationproxy proxy);
QStatus alljoyn_securityapplicationproxy_startmanagement([In] alljoyn_securityapplicationproxy proxy);
QStatus alljoyn_securityapplicationproxy_endmanagement([In] alljoyn_securityapplicationproxy proxy);
QStatus alljoyn_securityapplicationproxy_geteccpublickey([In] alljoyn_securityapplicationproxy proxy, [In] [Out] sbyte** eccPublicKey);
void alljoyn_securityapplicationproxy_eccpublickey_destroy([In] [Out] sbyte* eccPublicKey);
QStatus alljoyn_securityapplicationproxy_signmanifest([In] [Out] sbyte* unsignedManifestXml, [In] [Out] sbyte* identityCertificatePem, [In] [Out] sbyte* signingPrivateKeyPem, [In] [Out] sbyte** signedManifestXml);
void alljoyn_securityapplicationproxy_manifest_destroy([In] [Out] sbyte* signedManifestXml);
QStatus alljoyn_securityapplicationproxy_computemanifestdigest([In] [Out] sbyte* unsignedManifestXml, [In] [Out] sbyte* identityCertificatePem, [In] [Out] byte** digest, [In] [Out] nuint* digestSize);
void alljoyn_securityapplicationproxy_digest_destroy([In] [Out] byte* digest);
QStatus alljoyn_securityapplicationproxy_setmanifestsignature([In] [Out] sbyte* unsignedManifestXml, [In] [Out] sbyte* identityCertificatePem, [Const] [In] byte* signature, [In] nuint signatureSize, [In] [Out] sbyte** signedManifestXml);
