uint GetIScsiVersionInformation([In] [Out] ISCSI_VERSION_INFO* VersionInfo);
uint GetIScsiTargetInformationW([In] PWSTR TargetName, [In] [Optional] PWSTR DiscoveryMechanism, [In] TARGET_INFORMATION_CLASS InfoClass, [In] [Out] uint* BufferSize, [In] [Out] void* Buffer);
uint GetIScsiTargetInformationA([In] PSTR TargetName, [In] [Optional] PSTR DiscoveryMechanism, [In] TARGET_INFORMATION_CLASS InfoClass, [In] [Out] uint* BufferSize, [In] [Out] void* Buffer);
uint AddIScsiConnectionW([In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueSessionId, [In] [Out] void* Reserved, [In] uint InitiatorPortNumber, [In] [Out] ISCSI_TARGET_PORTALW* TargetPortal, [In] ulong SecurityFlags, [In] [Out] ISCSI_LOGIN_OPTIONS* LoginOptions, [In] uint KeySize, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] PSTR Key, [In] [Out] ISCSI_UNIQUE_SESSION_ID* ConnectionId);
uint AddIScsiConnectionA([In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueSessionId, [In] [Out] void* Reserved, [In] uint InitiatorPortNumber, [In] [Out] ISCSI_TARGET_PORTALA* TargetPortal, [In] ulong SecurityFlags, [In] [Out] ISCSI_LOGIN_OPTIONS* LoginOptions, [In] uint KeySize, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 6)] [In] [Optional] PSTR Key, [In] [Out] ISCSI_UNIQUE_SESSION_ID* ConnectionId);
uint RemoveIScsiConnection([In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueSessionId, [In] [Out] ISCSI_UNIQUE_SESSION_ID* ConnectionId);
uint ReportIScsiTargetsW([In] BOOLEAN ForceUpdate, [In] [Out] uint* BufferSize, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 1)] [In] [Out] [Optional] PWSTR Buffer);
uint ReportIScsiTargetsA([In] BOOLEAN ForceUpdate, [In] [Out] uint* BufferSize, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 1)] [In] [Out] [Optional] PSTR Buffer);
uint AddIScsiStaticTargetW([In] PWSTR TargetName, [In] [Optional] PWSTR TargetAlias, [In] uint TargetFlags, [In] BOOLEAN Persist, [In] [Out] ISCSI_TARGET_MAPPINGW* Mappings, [In] [Out] ISCSI_LOGIN_OPTIONS* LoginOptions, [In] [Out] ISCSI_TARGET_PORTAL_GROUPW* PortalGroup);
uint AddIScsiStaticTargetA([In] PSTR TargetName, [In] [Optional] PSTR TargetAlias, [In] uint TargetFlags, [In] BOOLEAN Persist, [In] [Out] ISCSI_TARGET_MAPPINGA* Mappings, [In] [Out] ISCSI_LOGIN_OPTIONS* LoginOptions, [In] [Out] ISCSI_TARGET_PORTAL_GROUPA* PortalGroup);
uint RemoveIScsiStaticTargetW([In] PWSTR TargetName);
uint RemoveIScsiStaticTargetA([In] PSTR TargetName);
uint AddIScsiSendTargetPortalW([In] [Optional] PWSTR InitiatorInstance, [In] uint InitiatorPortNumber, [In] [Out] ISCSI_LOGIN_OPTIONS* LoginOptions, [In] ulong SecurityFlags, [In] [Out] ISCSI_TARGET_PORTALW* Portal);
uint AddIScsiSendTargetPortalA([In] [Optional] PSTR InitiatorInstance, [In] uint InitiatorPortNumber, [In] [Out] ISCSI_LOGIN_OPTIONS* LoginOptions, [In] ulong SecurityFlags, [In] [Out] ISCSI_TARGET_PORTALA* Portal);
uint RemoveIScsiSendTargetPortalW([In] [Optional] PWSTR InitiatorInstance, [In] uint InitiatorPortNumber, [In] [Out] ISCSI_TARGET_PORTALW* Portal);
uint RemoveIScsiSendTargetPortalA([In] [Optional] PSTR InitiatorInstance, [In] uint InitiatorPortNumber, [In] [Out] ISCSI_TARGET_PORTALA* Portal);
uint RefreshIScsiSendTargetPortalW([In] [Optional] PWSTR InitiatorInstance, [In] uint InitiatorPortNumber, [In] [Out] ISCSI_TARGET_PORTALW* Portal);
uint RefreshIScsiSendTargetPortalA([In] [Optional] PSTR InitiatorInstance, [In] uint InitiatorPortNumber, [In] [Out] ISCSI_TARGET_PORTALA* Portal);
uint ReportIScsiSendTargetPortalsW([In] [Out] uint* PortalCount, [In] [Out] ISCSI_TARGET_PORTAL_INFOW* PortalInfo);
uint ReportIScsiSendTargetPortalsA([In] [Out] uint* PortalCount, [In] [Out] ISCSI_TARGET_PORTAL_INFOA* PortalInfo);
uint ReportIScsiSendTargetPortalsExW([In] [Out] uint* PortalCount, [In] [Out] uint* PortalInfoSize, [In] [Out] ISCSI_TARGET_PORTAL_INFO_EXW* PortalInfo);
uint ReportIScsiSendTargetPortalsExA([In] [Out] uint* PortalCount, [In] [Out] uint* PortalInfoSize, [In] [Out] ISCSI_TARGET_PORTAL_INFO_EXA* PortalInfo);
uint LoginIScsiTargetW([In] PWSTR TargetName, [In] BOOLEAN IsInformationalSession, [In] [Optional] PWSTR InitiatorInstance, [In] uint InitiatorPortNumber, [In] [Out] ISCSI_TARGET_PORTALW* TargetPortal, [In] ulong SecurityFlags, [In] [Out] ISCSI_TARGET_MAPPINGW* Mappings, [In] [Out] ISCSI_LOGIN_OPTIONS* LoginOptions, [In] uint KeySize, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] PSTR Key, [In] BOOLEAN IsPersistent, [In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueSessionId, [In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueConnectionId);
uint LoginIScsiTargetA([In] PSTR TargetName, [In] BOOLEAN IsInformationalSession, [In] [Optional] PSTR InitiatorInstance, [In] uint InitiatorPortNumber, [In] [Out] ISCSI_TARGET_PORTALA* TargetPortal, [In] ulong SecurityFlags, [In] [Out] ISCSI_TARGET_MAPPINGA* Mappings, [In] [Out] ISCSI_LOGIN_OPTIONS* LoginOptions, [In] uint KeySize, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 8)] [In] [Optional] PSTR Key, [In] BOOLEAN IsPersistent, [In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueSessionId, [In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueConnectionId);
uint ReportIScsiPersistentLoginsW([In] [Out] uint* Count, [In] [Out] PERSISTENT_ISCSI_LOGIN_INFOW* PersistentLoginInfo, [In] [Out] uint* BufferSizeInBytes);
uint ReportIScsiPersistentLoginsA([In] [Out] uint* Count, [In] [Out] PERSISTENT_ISCSI_LOGIN_INFOA* PersistentLoginInfo, [In] [Out] uint* BufferSizeInBytes);
uint LogoutIScsiTarget([In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueSessionId);
uint RemoveIScsiPersistentTargetW([In] PWSTR InitiatorInstance, [In] uint InitiatorPortNumber, [In] PWSTR TargetName, [In] [Out] ISCSI_TARGET_PORTALW* Portal);
uint RemoveIScsiPersistentTargetA([In] PSTR InitiatorInstance, [In] uint InitiatorPortNumber, [In] PSTR TargetName, [In] [Out] ISCSI_TARGET_PORTALA* Portal);
uint SendScsiInquiry([In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueSessionId, [In] ulong Lun, [In] byte EvpdCmddt, [In] byte PageCode, [In] [Out] byte* ScsiStatus, [In] [Out] uint* ResponseSize, [In] [Out] byte* ResponseBuffer, [In] [Out] uint* SenseSize, [In] [Out] byte* SenseBuffer);
uint SendScsiReadCapacity([In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueSessionId, [In] ulong Lun, [In] [Out] byte* ScsiStatus, [In] [Out] uint* ResponseSize, [In] [Out] byte* ResponseBuffer, [In] [Out] uint* SenseSize, [In] [Out] byte* SenseBuffer);
uint SendScsiReportLuns([In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueSessionId, [In] [Out] byte* ScsiStatus, [In] [Out] uint* ResponseSize, [In] [Out] byte* ResponseBuffer, [In] [Out] uint* SenseSize, [In] [Out] byte* SenseBuffer);
uint ReportIScsiInitiatorListW([In] [Out] uint* BufferSize, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 0)] [In] [Out] [Optional] PWSTR Buffer);
uint ReportIScsiInitiatorListA([In] [Out] uint* BufferSize, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 0)] [In] [Out] [Optional] PSTR Buffer);
uint ReportActiveIScsiTargetMappingsW([In] [Out] uint* BufferSize, [In] [Out] uint* MappingCount, [In] [Out] ISCSI_TARGET_MAPPINGW* Mappings);
uint ReportActiveIScsiTargetMappingsA([In] [Out] uint* BufferSize, [In] [Out] uint* MappingCount, [In] [Out] ISCSI_TARGET_MAPPINGA* Mappings);
uint SetIScsiTunnelModeOuterAddressW([In] [Optional] PWSTR InitiatorName, [In] uint InitiatorPortNumber, [In] [Optional] PWSTR DestinationAddress, [In] [Optional] PWSTR OuterModeAddress, [In] BOOLEAN Persist);
uint SetIScsiTunnelModeOuterAddressA([In] [Optional] PSTR InitiatorName, [In] uint InitiatorPortNumber, [In] [Optional] PSTR DestinationAddress, [In] [Optional] PSTR OuterModeAddress, [In] BOOLEAN Persist);
uint SetIScsiIKEInfoW([In] [Optional] PWSTR InitiatorName, [In] uint InitiatorPortNumber, [In] [Out] IKE_AUTHENTICATION_INFORMATION* AuthInfo, [In] BOOLEAN Persist);
uint SetIScsiIKEInfoA([In] [Optional] PSTR InitiatorName, [In] uint InitiatorPortNumber, [In] [Out] IKE_AUTHENTICATION_INFORMATION* AuthInfo, [In] BOOLEAN Persist);
uint GetIScsiIKEInfoW([In] [Optional] PWSTR InitiatorName, [In] uint InitiatorPortNumber, [In] [Out] uint* Reserved, [In] [Out] IKE_AUTHENTICATION_INFORMATION* AuthInfo);
uint GetIScsiIKEInfoA([In] [Optional] PSTR InitiatorName, [In] uint InitiatorPortNumber, [In] [Out] uint* Reserved, [In] [Out] IKE_AUTHENTICATION_INFORMATION* AuthInfo);
uint SetIScsiGroupPresharedKey([In] uint KeyLength, [In] [Out] byte* Key, [In] BOOLEAN Persist);
uint SetIScsiInitiatorCHAPSharedSecret([In] uint SharedSecretLength, [In] [Out] byte* SharedSecret);
uint SetIScsiInitiatorRADIUSSharedSecret([In] uint SharedSecretLength, [In] [Out] byte* SharedSecret);
uint SetIScsiInitiatorNodeNameW([In] [Optional] PWSTR InitiatorNodeName);
uint SetIScsiInitiatorNodeNameA([In] [Optional] PSTR InitiatorNodeName);
uint GetIScsiInitiatorNodeNameW([NotNullTerminated] [Out] PWSTR InitiatorNodeName);
uint GetIScsiInitiatorNodeNameA([NotNullTerminated] [Out] PSTR InitiatorNodeName);
uint AddISNSServerW([In] PWSTR Address);
uint AddISNSServerA([In] PSTR Address);
uint RemoveISNSServerW([In] PWSTR Address);
uint RemoveISNSServerA([In] PSTR Address);
uint RefreshISNSServerW([In] PWSTR Address);
uint RefreshISNSServerA([In] PSTR Address);
uint ReportISNSServerListW([In] [Out] uint* BufferSizeInChar, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 0)] [Out] [Optional] PWSTR Buffer);
uint ReportISNSServerListA([In] [Out] uint* BufferSizeInChar, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 0)] [Out] [Optional] PSTR Buffer);
uint GetIScsiSessionListW([In] [Out] uint* BufferSize, [In] [Out] uint* SessionCount, [In] [Out] ISCSI_SESSION_INFOW* SessionInfo);
uint GetIScsiSessionListA([In] [Out] uint* BufferSize, [In] [Out] uint* SessionCount, [In] [Out] ISCSI_SESSION_INFOA* SessionInfo);
uint GetIScsiSessionListEx([In] [Out] uint* BufferSize, [In] [Out] uint* SessionCountPtr, [In] [Out] ISCSI_SESSION_INFO_EX* SessionInfo);
uint GetDevicesForIScsiSessionW([In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueSessionId, [In] [Out] uint* DeviceCount, [In] [Out] ISCSI_DEVICE_ON_SESSIONW* Devices);
uint GetDevicesForIScsiSessionA([In] [Out] ISCSI_UNIQUE_SESSION_ID* UniqueSessionId, [In] [Out] uint* DeviceCount, [In] [Out] ISCSI_DEVICE_ON_SESSIONA* Devices);
uint SetupPersistentIScsiVolumes();
uint SetupPersistentIScsiDevices();
uint AddPersistentIScsiDeviceW([In] PWSTR DevicePath);
uint AddPersistentIScsiDeviceA([In] PSTR DevicePath);
uint RemovePersistentIScsiDeviceW([In] PWSTR DevicePath);
uint RemovePersistentIScsiDeviceA([In] PSTR DevicePath);
uint ClearPersistentIScsiDevices();
uint ReportPersistentIScsiDevicesW([In] [Out] uint* BufferSizeInChar, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 0)] [Out] [Optional] PWSTR Buffer);
uint ReportPersistentIScsiDevicesA([In] [Out] uint* BufferSizeInChar, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 0)] [Out] [Optional] PSTR Buffer);
uint ReportIScsiTargetPortalsW([In] [Optional] PWSTR InitiatorName, [In] PWSTR TargetName, [In] [Out] ushort* TargetPortalTag, [In] [Out] uint* ElementCount, [In] [Out] ISCSI_TARGET_PORTALW* Portals);
uint ReportIScsiTargetPortalsA([In] [Optional] PSTR InitiatorName, [In] PSTR TargetName, [In] [Out] ushort* TargetPortalTag, [In] [Out] uint* ElementCount, [In] [Out] ISCSI_TARGET_PORTALA* Portals);
uint AddRadiusServerW([In] PWSTR Address);
uint AddRadiusServerA([In] PSTR Address);
uint RemoveRadiusServerW([In] PWSTR Address);
uint RemoveRadiusServerA([In] PSTR Address);
uint ReportRadiusServerListW([In] [Out] uint* BufferSizeInChar, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 0)] [Out] [Optional] PWSTR Buffer);
uint ReportRadiusServerListA([In] [Out] uint* BufferSizeInChar, [NotNullTerminated] [NativeArrayInfo(CountParamIndex = 0)] [Out] [Optional] PSTR Buffer);
